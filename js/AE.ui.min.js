{ var AE = AE || {}, AE, AE, AE, AE, AE; AE.ui = AE.ui || function () { var UI = { bodyClickTasks: [], bodyChangeTasks: [], init: function () { UI.props = { bodyEvent: "", clicksDisabled: !1, appendTarget: (appendTo = null, $("body").hasClass("my-booking") ? appendTo = "#search-form" : $("#ae-search").closest(".ui-dialog")[0] || (appendTo = "#top_search_form"), appendTo), scrollContainer: $("#scroll-content"), $mainFooterTogglers: $(".main-footer__header"), $mainFooterTogglees: $(".main-footer__links"), $aeSearch: $("#ae-search"), $menusearchEnabled: !1, $tabContainers: $(".tab_container"), $accordionContainers: $(".accordion_container"), $accordionCollapsedContainers: $(".accordion_container--collapsed"), $dateInputs: $('input[class="datePickerInput"]'), $autoPostForms: $("#trg-autoPostForm"), $currentDatePicker: null }, UI.searchProps = { roundTrip: !0, city: null, cityr: null, puloclist: null, doloclist: null, pucode: null, docode: null, puCal: null, doCal: null, putime: null, dotime: null, searchAge: 40, bookingstep: "searchwait" }, UI.addBodyClickTask({ func: UI.onBodyClick }), $("body").on("click", function (event) { UI.manageBodyClick(event) }), $("body").on("change", function (event) { UI.manageBodyChange(event) }), UI.applyJQUI(), $("html").hasClass("ua-ios") && $("body").on("touchend", function (event) { $(event.target).parent().hasClass("related__links") && UI.manageBodyClick(event) }); var heroCardIndex, appendTo = document.createElement("style"), slide = ("FCR" == AE.props.siteCode ? appendTo.appendChild(document.createTextNode("#ui-id-147,#ui-id-150{padding-top:2px!important}")) : appendTo.appendChild(document.createTextNode("#ui-id-99,#ui-id-102{padding-top:2px!important}")), document.head.appendChild(appendTo), $("a").filter(function () { var $a = $(this), _href = $a.attr("href") || !1, _host = this.hostname || !1, _langTag = $a.attr("hreflang"), _href = $a.attr("href") || !1, _langTag = ("zh-CN" !== _langTag && "tr-TR" !== _langTag || (_href = !1), "undefined" != typeof location && location.hostname), _href = _href && $a.attr("href").substring(0, 4); return _host && _langTag && _host === _langTag && (_href = !1), "http" === (_href = _host && _langTag && _host.substring(0, 3) === _langTag.substring(0, 3) ? !1 : _href) && this.hostname && this.hostname !== location.hostname }).addClass("external").attr({ rel: "noopener" }), AE.addResizeTask({ func: function () { UI.manageResize() }, args: [] }), AE.addScrollTask({ func: function () { var distanceFromTop = document.getElementById("scroll_target").getBoundingClientRect().top, $b2t = $("#back2top"); distanceFromTop < -1200 ? $b2t.removeClass("visuallyhidden") : $b2t.addClass("visuallyhidden") } }), AE.ui.search && $("#ae-search")[0] ? AE.ui.search.init() : $.each($("select.time--select"), function () { $(this).parent(".styled--select").removeClass("ui-searchform--custom-form-el ui-timeselect-rev ui-ready-waiting") }), AE.ui.searchType && $("#ae-search")[0] && AE.ui.searchType.init(), AE.ui.dialog && AE.ui.dialog.init(), AE.ui.modify && $("#aemodify")[0] && AE.ui.modify.init(), AE.ui.tabcordion && AE.ui.tabcordion.init(), AE.ui.carousel && AE.ui.carousel.init(), AE.ui.selectmenu && AE.ui.selectmenu.init(), AE.affiliate && AE.affiliate.init(), AE.affiliate.terms && AE.affiliate.terms.init(), document.getElementsByClassName("hero_-slide")); 0 !== slide.length && (heroCardIndex = 0, function carousel() { var i; for (slide[0].style.display = "block", i = 0; i < slide.length; i++)slide[i].style.display = "none"; ++heroCardIndex > slide.length && (heroCardIndex = 1), $(slide[heroCardIndex - 1]).css("opacity", 1).show("slide", { direction: "right" }, 1500).animate({ opacity: 1 }, { queue: !1, duration: 2e3 }), setTimeout(carousel, 7e3) }()) }, disableClicks: function () { UI.props.clicksDisabled = !0 }, enableClicks: function () { UI.props.clicksDisabled = !1 }, manageResize: function () { var siteViewType = AE.getSiteViewType(); UI.props.bodyEvent = $("html").hasClass("ua-mobile") ? "touchend" : "click", $(".hasDatepicker").datepicker("hide").on("click", function () { $(this).datepicker("show") }), $(".toggler.toggler--portable").each(function (index) { var $togglee = $(this).closest(".toggle").find(".togglee"); "desk" === siteViewType || "desk-wide" === siteViewType ? ($(this).addClass("open"), UI.show($togglee)) : ($(this).removeClass("open"), UI.hide($togglee)) }), $(".toggler.toggler--palm").each(function (index) { var $togglee = $("" + $(this).data("togglee")), insurance = !!$(this).closest("#insuranceUI").length, pmOptionsStop = !($(this).hasClass("open") && !$togglee.hasClass("visuallyhidden")); function hideToggle($toggler, $togglee) { $toggler.removeClass("open"), UI.hide($togglee) } function showToggle($toggler, $togglee) { $toggler.addClass("open"), UI.show($togglee) } "palm" === siteViewType ? insurance && !pmOptionsStop || hideToggle($(this), $togglee) : (pmOptionsStop || ($(this).addClass("open"), UI.show($togglee)), insurance && pmOptionsStop || showToggle($(this), $togglee)) }), $(".toggler.toggler--lap-and-up").each(function (index) { var $togglee = $(this).closest(".toggle").find(".togglee"); "palm" === siteViewType ? ($(this).addClass("open"), UI.show($togglee)) : ($(this).removeClass("open"), UI.hide($togglee)) }), $(".togglee--delay-close").each(function (index) { var $togglee = $(this), deviceSize = void 0 !== $togglee.data("size") ? $togglee.data("size") : "", palm = $togglee.hasClass("delay--palm") ? "palm" : "", lap = $togglee.hasClass("delay--lap") ? "lap" : "", desk = $togglee.hasClass("delay--desk") ? "desk" : ""; setTimeout(function () { _.each([palm, lap, desk], function (device) { AE.getSiteViewType() === device && UI.hide($togglee, "" !== deviceSize ? "--" + device : "") }) }, 2e3) }) }, onBodyClick: function (event, $target) { var checkout_process, $toggleeContainer, $taModChildren; if (($target.hasClass("btn--back2top") || $($target.parent()).hasClass("btn--back2top")) && document.getElementById("sticky-wrapper").scrollIntoView(), $target.hasClass("toggler") && !$target.hasClass("toggler--manual") ? UI.handleToggle($target) : "INPUT" === $target.prop("tagName") || $target.hasClass("grid__item-ta-modifier") || ($toggleeContainer = ($target = $(event.target)).closest(".matrix_filter"), $taModChildren = $target.find(".grid__item-ta-modifier"), checkout_process = $("body#options").length || $("body#upgrade").length || 0 == $("body#checkout").length, 0 != $toggleeContainer.length) || 0 != $taModChildren.length || checkout_process || UI.closeToggle(), $target.hasClass("test_environment") && (AECookie.update("PTEST", "no", 0), $toggleeContainer = AECookie.read("QA") ? "?QA=false" : "", window.location.href = "/" + $toggleeContainer), $target.hasClass("trg__enabler") && $target.data("enablee") && ($target.hasClass("enabler--on") ? ($($target.data("enablee")).prop("disabled", !0), $target.removeClass("enabler--on")) : ($($target.data("enablee")).prop("disabled", !1), $target.addClass("enabler--on"))), $target.hasClass("more-info-tip") && ("cancelModal" == $target.attr("data-modalname") ? AE.booking.cancelModal() : AE.ui.dialog.launch({ type: "infoTip", pos: { my: "left top", at: "left bottom+5", of: $target }, selector: $target.children(".more-info-text") })), $target.hasClass("voip-link") && (AE.ga.gaArrayProcess([{ GACATEGORY: "VOIP", GAACTION: "click" }]), $taModChildren = $target.data("voipcode"), $target.hasClass("icomm_direct") || "8fb2338n0n5w2bj7" == $taModChildren || "ecz610fox8q57dgn" == $taModChildren || "o3lwm3e04730w06o" == $taModChildren ? window.open("http://client.icommconnect.com/Home/DirectCall?contactGuid=" + $taModChildren, "", "scrollbars=yes,width=360, height=640") : window.open("http://client.icommconnect.com/Home/Call?clientSubscriptionGUId=" + $taModChildren, "", "scrollbars=yes,width=360, height=640")), $target.hasClass("co_browse_site")) return UI.call8x8CoBrowsing(event) }, manageBodyClick: function (event) { if (!UI.props.clicksDisabled) for (var $target = $(event.target), i = 0; i < UI.bodyClickTasks.length; i++) { var arrArgs = [event, $target].concat(UI.bodyClickTasks[i].args); UI.bodyClickTasks[i].func.apply(this, arrArgs) } }, addBodyClickTask: function (task) { task.args = task.args || [], UI.bodyClickTasks.push(task) }, manageBodyChange: function (event) { for (var $target = $(event.target), i = 0; i < UI.bodyChangeTasks.length; i++) { var arrArgs = [event, $target].concat(UI.bodyChangeTasks[i].args); UI.bodyChangeTasks[i].func.apply(this, arrArgs) } }, addBodyChangeTask: function (task) { task.args = task.args || [], UI.bodyChangeTasks.push(task) }, addSpinner: function (selector, settings) { var ua, msie, selector = $(selector), sizeClass = (settings = settings || {}).size ? " fa-ae-" + settings.size : ""; selector.addClass("spinner__container").find(".spinner__div").parent().remove().end(), "FCR" !== AE.props.siteCode ? selector.append('<div class="wrap"><div class="spinner__div align-center' + sizeClass + '"><i class="spinner fa fa-ae-spinner fa-spin' + sizeClass + ' " aria-hidden="true"></i></div></div>') : (msie = (ua = window.navigator.userAgent).indexOf("MSIE "), ua = ua.indexOf("Trident/"), 0 < msie || 0 < ua ? selector.append('<div class="wrap"><div class="spinner__div align-center"><div class="preloader-wrapper small active"><div class="spinner-layer spinner-blue-only"><div class="circle-clipper left"><div class="circle"></div></div><div class="gap-patch"><div class="circle"></div></div><div class="circle-clipper right"><div class="circle"></div></div></div></div></div></div>') : selector.append('<div class="wrap"><div class="spinner__div align-center' + sizeClass + '"><div style="position:relative"><div class="indeterminate-circle"><svg version="1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewBox="0 0 24 24"><path id="indeterminate" d="M12 3.25A8.75 8.75 0 1 1 3.25 12" fill="none" stroke-width="2.5" stroke-linecap="square" stroke="#0072EA"/></svg></div></div></div></div>')), settings.color && (-1 != settings.color.indexOf("#") ? selector.find(".spinner").css({ color: settings.color }) : (msie = "white" === settings.color ? "spinner--white" : "spinner--black", selector.find(".spinner").addClass(msie))), selector.find(".spinner__div").parent().css("min-height", selector.find(".spinner__div").outerHeight(!0) + "px"), settings.noWobble && selector.find(".spinner").addClass("no-wobble") }, removeSpinner: function (selector) { $(selector).removeClass("spinner__container").find(".spinner__div").parent().remove() }, applyJQUI: function (selector) { selector = selector || "body", $(selector + " input.datePickerInput").datepicker(), $(selector + " input.datePickerInput").datepicker("option", "onSelect", function (dateText, inst) { var duration; this.dataset && this.dataset.endDatePicker && this.dataset.endDatePicker.length && (dateText = new Date(dateText), duration = this.dataset.minDuration || 0, $.isNumeric(duration) && 0 <= duration && dateText.setDate(dateText.getDate() + duration), $($.trim(this.dataset.endDatePicker)).datepicker("option", "minDate", dateText)) }), $(selector + " input.datePickerInput").prop("readonly", !0); for (var i = 0; i < $(selector + " input.datePickerInput").length; i++) { var currentDatePicker = $(selector + " input.datePickerInput")[i], pickerType = $(currentDatePicker).attr("data-pickertype"), pickerValue = $(currentDatePicker).val(); !function (currentDatePicker, pickerType, pickerValue) { var yearUpperRange, yearLowerRange, dp_options = {}; switch (pickerType) { case "birthdate": case "birthdateNotReq": yearUpperRange = $.datepicker.formatDate("yy", new Date) - 18, "" == pickerValue && (pickerValue = "birthdateNotReq" == pickerType ? pickerValue : "-18y"); (hiddenDob = $("input#hidden-dob-date").val()).length && (hiddenDob = $.datepicker.parseDate("yy-mm-dd", hiddenDob), pickerValue = new Date(hiddenDob)), dp_options = { hideIfNoPrevNext: !0, changeMonth: !0, changeYear: !0, yearRange: "1900:" + yearUpperRange, minDate: new Date("01/01/1900"), defaultDate: "-18y", setDate: pickerValue, altField: "#hidden-dob-date", altFormat: "mm-dd-yy" }, 0 != hiddenDob.length && currentDatePicker.datepicker("setDate", pickerValue), "" == pickerValue ? $("span.ui-datepicker-target-input").hide() : $("span.ui-datepicker-target-input").show(); break; case "expires": yearUpperRange = parseInt($.datepicker.formatDate("yy", new Date)) + 20, yearLowerRange = parseInt($.datepicker.formatDate("yy", new Date)), dp_options = { hideIfNoPrevNext: !0, changeMonth: !0, changeYear: !0, yearRange: yearLowerRange + ":" + yearUpperRange, minDate: new Date, setDate: "" }; break; case "report": "" == pickerValue && (pickerValue = "birthdateNotReq" == pickerType ? pickerValue : "-18y"), (hiddenReport = $("input#hiddenreportdate").val()).length && (hiddenReport = $.datepicker.parseDate("yy-mm-dd", hiddenReport), pickerValue = new Date(hiddenReport)), dp_options = { hideIfNoPrevNext: !0, changeMonth: !0, changeYear: !0, minDate: new Date("01/01/1900"), maxDate: new Date, setDate: pickerValue, altField: "#hiddenreportdate", altFormat: "mm-dd-yy" }, 0 != hiddenReport.length && currentDatePicker.datepicker("setDate", pickerValue), "" == pickerValue ? $("span.ui-datepicker-target-input").hide() : $("span.ui-datepicker-target-input").show(); break; case "report2": "" == pickerValue && (pickerValue = "birthdateNotReq" == pickerType ? pickerValue : "-18y"), (hiddenReport = $("input#hiddenreportdate2").val()).length && (hiddenReport = $.datepicker.parseDate("yy-mm-dd", hiddenReport), pickerValue = new Date(hiddenReport)), dp_options = { hideIfNoPrevNext: !0, changeMonth: !0, changeYear: !0, minDate: new Date("01/01/1900"), maxDate: new Date, setDate: pickerValue, altField: "#hiddenreportdate2", altFormat: "mm-dd-yy" }, 0 != hiddenReport.length && currentDatePicker.datepicker("setDate", pickerValue), "" == pickerValue ? $("span.ui-datepicker-target-input").hide() : $("span.ui-datepicker-target-input").show(); break; case "issued": if ("DAU" == AE.props.siteCode || "DNZ" == AE.props.siteCode || "DAP" == AE.props.siteCode) { dp_options = { beforeShow: function (input, inst) { setTimeout(function () { var dpoffset = currentDatePicker.offset(), dpheight = currentDatePicker.outerHeight(), dpheight = dpoffset.top + dpheight; inst.dpDiv.css({ top: dpheight, left: dpoffset.left }) }, 0) } }; break } case "issuedExt": yearUpperRange = parseInt($.datepicker.formatDate("yy", new Date)), yearRangeSize = "issuedExt" === pickerType && "EU" === AE.props.chaosSystem ? 100 : 20, yearLowerRange = parseInt($.datepicker.formatDate("yy", new Date)) - yearRangeSize, dp_options = { hideIfNoPrevNext: !0, changeMonth: !0, changeYear: !0, yearRange: yearLowerRange + ":" + yearUpperRange, minDate: new Date("01/01/" + yearLowerRange), maxDate: new Date, setDate: "" }; break; case "lookup": dp_options = { altFormat: "mm-dd-yy", altField: "#dateToPassAlong" }; break; case "gps_pu": case "gps_do": dp_options = { altFormat: "mm-dd-yy", minDate: new Date, setDate: "" }; break; case "datepaid": dp_options = { altFormat: "mm-dd-yy", minDate: dapDatePaidMin, maxDate: dapDatePaidMax, setDate: dapDatePaidMax }; break; default: dp_options = { minDate: new Date, setDate: new Date } }dp_options.onSelect = function (dateText) { $(this).attr("required") && "" != dateText && ($(this).parent().removeClass("ui-state-invalid").addClass("ui-state-valid"), $(this).next("span.ui-error-message").remove()) }, dp_options.onClose = function (dateText) { var endDateElement; $(this).is("[dpStartDate]") && (dateText = new Date(dateText), endDateElement = document.querySelector("input.datePickerInput[dpEndDate]")) && $(endDateElement).datepicker("option", "minDate", dateText) }, currentDatePicker.datepicker("hide").datepicker("destroy").blur(), currentDatePicker.datepicker(dp_options), $(AE.ui.props.scrollContainer)[0].addEventListener("scroll", function (e) { currentDatePicker.datepicker("hide").on("click", function () { currentDatePicker.datepicker("show") }) }, { passive: !0 }) }($(currentDatePicker), pickerType, pickerValue) } ["/driver-profile/", "/beatrate/"].includes(AE.url.props.path), $("#vouchpudate")[0] && $.datepicker._clearDate($("#vouchpudate").datepicker("option", "minDate", null)), $(selector + " .tab_container").tabs(), $(selector + " .accordion_container").accordion({ heightStyle: "content" }), $(selector + " .accordion_container--collapsed").accordion({ collapsible: !0, active: !1, heightStyle: "content" }) }, decodeHtml: function (htmlStr) { var txt = document.createElement("textarea"); return txt.innerHTML = htmlStr, txt.value }, show: function ($target, size) { size = size || "", $target.slideUp(0, function () { $target.removeClass("visuallyhidden" + size).slideDown(0) }) }, hide: function ($target, size) { $target.addClass("visuallyhidden" + (size = size || "")).slideDown(0) }, slideUp: function ($target, size) { size = size || "", $target.slideUp("fast", function () { $target.addClass("visuallyhidden" + size).slideDown(0) }) }, slideDown: function ($target) { $target.slideUp(0, function () { $target.removeClass("visuallyhidden visuallyhidden--palm visuallyhidden--lap visuallyhidden--portable visuallyhidden--lap-and-up visuallyhidden--desk visuallyhidden--desk-wide").slideDown("fast", function () { $target.removeClass("opening") }) }) }, isVisuallyHidden: function ($target, size) { return size = size || AE.getSiteViewType(), $target.hasClass("visuallyhidden") || $target.hasClass("visuallyhidden" + size) }, handleToggle: function ($toggler, objCallback, args) { var checkout_process, $togglee = null, $toggleo = null, size = $toggler.data("size"); $toggler.data("togglee") ? ($togglee = $($toggler.data("togglee")), $toggler = $('[data-togglee="' + $toggler.data("togglee") + '"]')) : $togglee = $toggler.closest(".toggle").find(".togglee"), $toggleo = $toggler.data("toggleo") ? $($toggler.data("toggleo")) : $togglee, $togglee.hasClass("visuallyhidden" + (size = "" !== (size = "palm" !== size && "portable" !== size && "lap" !== size && "lap-and-up" !== size && "desk" !== size && "desk-wide" !== size ? "" : size) ? "--" + size : "")) ? (checkout_process = $("body#options").length || $("body#upgrade").length || 0 == $("body#checkout").length, !$(".toggler").hasClass("open") || $(".toggler").closest("#insuranceUI").length || checkout_process || ($(".toggler").removeClass("open"), $(".toggler").addClass("closed"), UI.slideUp($(".styled--select .togglee")), UI.slideUp($(".US_Accordion .togglee"))), $toggler.removeClass("closed"), $toggler.addClass("open"), $togglee.addClass("opening"), UI.slideDown($togglee)) : $togglee.hasClass("opening") || ($toggler.removeClass("open"), $toggler.addClass("closed"), UI.slideUp($togglee, size)), $toggleo.hasClass("open") && $toggleo.removeClass("open"), objCallback && objCallback.func.apply(this, objCallback.args) }, closeToggle: function () { $(".toggler:not(.toggle_pm_header):not(.package-header)").removeClass("open"), $(".toggler:not(.toggle_pm_header):not(.package-header)").addClass("closed"), UI.slideUp($(".styled--select .togglee")) }, contentGroup: function ($controllers, $contentEls, settings) { var options = $.extend({ willSlide: !1, visual: !1 }, settings), showHideFunc = !0 === options.visual ? function ($contentEls, $content, willSlide) { var $otherEls = $([]), $targetEl = $([]); $contentEls.not($content).each(function (index) { var $item = $(this); $item.hasClass("visuallyhidden") || ($otherEls = $otherEls.add($item)) }), $content.hasClass("visuallyhidden") && ($targetEl = $targetEl.add($content)); willSlide ? (AE.ui.slideUp($otherEls), AE.ui.slideDown($targetEl)) : (AE.ui.hide($otherEls), AE.ui.show($targetEl)) } : function ($contentEls, $content, willSlide) { var $otherEls = $([]), $targetEl = $([]); $contentEls.not($content).each(function (index) { var $item = $(this); $item.is(":visible") && ($otherEls = $otherEls.add($item)) }), $content.is(":visible") || ($targetEl = $targetEl.add($content)); willSlide ? ($otherEls.slideUp(), $targetEl.slideDown()) : ($otherEls.hide(), $targetEl.show()) }; $controllers.on("click", function (event) { event.preventDefault(), $controllers.not($(this)).removeClass("current"), $(this).addClass("current"); event = $contentEls.filter("[data-content='" + $(this).data("content") + "']"); showHideFunc($contentEls, event, options.willSlide) }) } }; return UI }(), (AE = AE || {}).ui.search = AE.ui.search || function () { "use strict"; var searchPuTime, oSubmit = {}, oStoredSearch = {}, props = {}, isMenuSearch = !1, UI = { init: function () { var cookieSearch, bmr_age; props = { $form: $("#ae-search"), memberage: "", ageDefault: AEdata && AEdata.defaultAgeOverride ? AEdata.defaultAgeOverride : 40, ageMin: 25, ageMax: 69, direction: "", useStoredSearch: "undefined" != typeof useStoredSearch && useStoredSearch, $viewSize: AE.getSiteViewType(), searchFormErrorHandler: {}, displayMenusearch: AE.ui.props.$menusearchEnabled, oStoredSearch: AE.ui.search.getStoredSearch(), menusearch: {}, menusearchOptions: { searchtype: "menusearch", query: window.location.search.substring(1), timeout: 0 }, $searchFormErrorHandler: { msgTitle: null, msgDesc: null, pos: { top: -5, left: 0 } }, hasAgeChkbx: !0 }, oSite.bIsDapTpDomain && "" === oSite.path_info && AE.ui.search.cleanStoredSearch(), window.jsloginStatus || (UI.readCookie("MEMBERAGE") && $.removeCookie("MEMBERAGE", { path: "/" }), UI.readCookie("MEMBERFIRST") && $.removeCookie("MEMBERFIRST", { path: "/" }), props.showFillAgeCheckout = !0), props.$topSearch = AE.ui.props.appendTarget, props.$bottomSearch = "#bottom_search_form", props.$searchContainer = $("#search-form")[0], props.$searchSlideBtn = $("#targetSearch"), props.$locationsWrapper = $("#locations-wrapper"), props.$chkDiff = props.$form.find($("input[name='chk-diff']")), props.$chkAge = props.$form.find($("input[name='chk-age']")), props.$txtAge = props.$form.find($("input[name='txt-age']")), props.$jsonPost = props.$form.find($("input[name='jsonPost']")), props.$btnSubmit = props.$form.find($("button[name='btn-submit']")), props.$puLoc = props.$form.find($("div[name='pickup-loc']")), props.$doLoc = props.$form.find($("div[name='dropoff-loc']")), props.$menu_puCountry = props.$form.find($("select[name='PU-country']")), props.$menu_puCity = props.$form.find($("select[name='PU-city']")), props.$menu_puLocation = props.$form.find($("select[name='PU-loc']")), props.$menu_doCountry = props.$form.find($("select[name='DO-country']")), props.$menu_doCity = props.$form.find($("select[name='DO-city']")), props.$menu_doLocation = props.$form.find($("select[name='DO-loc']")), props.$puDate = props.$form.find($("input[name='pickup-date']")), props.$doDate = props.$form.find($("input[name='dropoff-date']")), props.$doDateOneway = props.$form.find($("input[id='dropoff-date_oneway']")), props.$hiddenPuDate = props.$form.find($("input[name='hidden-pickup-date']")), props.$hiddenDoDate = props.$form.find($("input[name='hidden-dropoff-date']")), props.$puTime = props.$form.find($("select[name='pickup-time']")), props.$doTime = props.$form.find($("select[name='dropoff-time']")), props.$doTimeOneway = props.$form.find($("select[id='dropoff-time_oneway']")), props.$hiddenPuTime = props.$form.find($("input[name='hidden-pickup-time']")), props.$hiddenDoTime = props.$form.find($("input[name='hidden-dropoff-time']")), props.memberage = UI.readCookie("MEMBERAGE"), props.$fcrOnewayChk = props.$form.find($("input[name='fcr-oneway_chk']")), null == props.memberage && (props.memberage = AEdata && AEdata.defaultAgeOverride ? AEdata.defaultAgeOverride : props.memberage), props.useStoredSearch = !AE.privateBrowsing._checkLocalStorageAvailability(), props.useStoredSearch || (props.ageDefault = props.memberage || props.ageDefault), isMenuSearch = prepMenusearch, AE.props.siteCode && (props.hasAgeChkbx = "PEU" !== AE.props.siteCode && "RNZ" !== AE.props.siteCode && "RAU" !== AE.props.siteCode), oSubmit = { viewSize: AE.getSiteViewType(), display_label: null, display_labelr: null, city: null, cityr: null, puloclist: null, doloclist: null, pucode: null, docode: null, puloctype: null, doloctype: null, puCal: null, doCal: null, putime: null, dotime: null, puchaos_hub_id: null, dochaos_hub_id: null, searchAge: props.ageDefault, searchAgeCheckbox: !0, showFillAgeCheckout: !0, bookingstep: "searchwait", bookingUUID: "", excl_ltr: !1, excl_cats: "" }, props.searchAgeCheckbox = props.hasAgeChkbx, props.hasAgeChkbx && (props.ageDefault >= props.ageMax || props.ageDefault <= props.ageMin ? (props.$chkAge.prop("checked", !1), props.$txtAge.val(props.ageDefault.toString()).show()) : (props.$chkAge.prop("checked", !0), props.$txtAge.val(props.ageDefault.toString()).hide())), null === localStorage.getItem("aeSearchAff") || null === localStorage.getItem("aeSearchSys") || "WL" != oSite.mSiteCode || localStorage.getItem("aeSearchAff") === oSite.affiliate && localStorage.getItem("aeSearchSys") === oSite.chaosSystem || (localStorage.removeItem("aeSearch"), localStorage.removeItem("aeSearchAff"), localStorage.removeItem("aeSearchSys")), AE.ui.search.useStoredSearch() && null === localStorage.getItem("aeSearch") && AECookie.read("aeSearch") && (cookieSearch = AECookie.read("aeSearch"), _.isString(cookieSearch)) && "" !== cookieSearch && localStorage.setItem("aeSearch", cookieSearch), AE.ui.search.useStoredSearch() && localStorage.getItem("aeSearch") && _.isString(localStorage.getItem("aeSearch")) && "" != localStorage.getItem("aeSearch") ? (props.oStoredSearch = JSON.parse(localStorage.getItem("aeSearch")), searchPuTime = props.oStoredSearch.putime && _.isString(props.oStoredSearch.putime) && "" != props.oStoredSearch.putime ? props.oStoredSearch.putime : "10:00", props.$hiddenPuTime.val(searchPuTime), props.$puTime.val(searchPuTime), searchPuTime = props.oStoredSearch.dotime && _.isString(props.oStoredSearch.dotime) && "" != props.oStoredSearch.dotime ? props.oStoredSearch.dotime : "10:00", props.$hiddenDoTime.val(searchPuTime), props.$doTime.val(searchPuTime), props.oStoredSearch.puCal && _.isString(props.oStoredSearch.puCal) && "" != props.oStoredSearch.puCal && (searchPuTime = props.oStoredSearch.puCal, props.$hiddenPuDate.val(searchPuTime)), props.oStoredSearch.doCal && _.isString(props.oStoredSearch.doCal) && "" != props.oStoredSearch.doCal && (searchPuTime = props.oStoredSearch.doCal, props.$hiddenDoDate.val(searchPuTime), isMenuSearch = prepMenusearch), props.oStoredSearch.searchAge && "" != props.oStoredSearch.search && !isLTRSearch && (searchAge = props.oStoredSearch.searchAge, AE.ui.search.setAge(searchAge), !1 === props.oStoredSearch.searchAgeCheckbox) && AE.ui.search.forceSearchAgeCheckBox()) : props.ageDefault && "" != props.ageDefault && props.hasAgeChkbx ? AE.ui.search.setAge(props.ageDefault) : searchAge && "" != searchAge && (AE.ui.search.setAge(searchAge), !1 === props.oStoredSearch.searchAgeCheckbox) && AE.ui.search.forceSearchAgeCheckBox(), isBMRSearch && localStorage.getItem("aeBMRsearch") && (bmr_age = JSON.parse(localStorage.getItem("aeBMRsearch")).driverAge, props.$txtAge.val(bmr_age)), props.hasAgeChkbx || (props.$chkAge.hide(), $('label[for="chk-age"]').hide(), props.$txtAge.addClass("flush").prop("required", !0).attr("max", 1e3), $('input[name="txt-age"]').show(), props.$txtAge.show(), props.memberage && "" != props.memberage && !AE.ui.search.useStoredSearch() && props.$txtAge.val(props.memberage)), props.$chkAge.on("change", function (event) { UI.chkAgeHandler(event.target.checked); event = $(this).is(":checked"); event ? (props.$txtAge.attr({ required: !1 }), "FCR" == AE.props.siteCode && $("#txt-age-error").hide()) : (props.$txtAge.attr({ required: !0 }), "FCR" == AE.props.siteCode && $("#txt-age-error").show()), AE.account.props || AE.account.init(), props.memberage && AE.account.props.$isLoggedIn && !isBMRSearch && event && (props.$txtAge.val() > props.ageMax || props.$txtAge.val() < props.ageMin || "" == props.$txtAge.val() ? UI.setAge(40) : UI.setAge(props.$txtAge.val())), isBMRSearch && (bmr_age ? props.$txtAge.val(bmr_age) : props.memberage && props.$txtAge.val(props.memberage)) }), props.$txtAge.on("blur", function (event) { var runThis = !0; (runThis = AE.props.isAUNZ ? !1 : runThis) ? "" != props.$txtAge.val() ? (props.ageDefault = props.$txtAge.val(), searchAge = props.oStoredSearch.searchAge) : (props.$txtAge.attr({ required: !0 }), oSubmit.searchAge = "", UI.chkAgeHandler(props.$chkAge.prop("checked"))) : props.$txtAge.attr({ required: !0 }) }), props.$chkDiff.on("change", function (event) { $(this).is(":checked") ? props.$locationsWrapper.addClass("both") : (props.$locationsWrapper.removeClass("both"), isLTRSearch ? (AE.ui.searchType.leasesearch.props.$ltrdo.val(AE.ui.searchType.leasesearch.props.$ltrpu.val()), AE.ui.searchType._forceInputBlur(AE.ui.searchType.text.props.$ltrdo)) : isBMRSearch || (AE.ui.searchType.text.props.$doLoc.next(".ui-textsearch-clear-input").trigger("click"), AE.ui.searchType._forceInputBlur(AE.ui.searchType.text.props.$doLoc))) }), AEdata && (AEdata.booking && AEdata.booking.props && AEdata.booking.props.uuid ? oSubmit.bookingUUID = AEdata.booking.props.uuid : AEdata.modify && AEdata.modify.uuid && (oSubmit.bookingUUID = AEdata.modify.uuid), AEdata.URL && AEdata.URL.cjevent ? oSubmit.cjEvent = AEdata.URL.cjevent : AEdata.URL && AEdata.URL.CJEVENT ? oSubmit.cjEvent = AEdata.URL.CJEVENT : AECookie.read("cje") && _.isString(AECookie.read("cje")) && "" !== AECookie.read("cje") && (oSubmit.cjEvent = AECookie.read("cje"))), $(".search-type--lease")[0] && (oSubmit.excl_ltr = !0), $(".search-type--luxury")[0] && (oSubmit.excl_cats = "C6,C10"), $(".search-type--van")[0] && (oSubmit.excl_cats = "C8,C9"), props.$btnSubmit.on("click", function (event) { event.preventDefault(), UI.formSubmit() }), props.$searchSlideBtn.on("click", function (event) { $("#scroll-content").stop().animate({ scrollTop: parseInt($(props.$bottomSearch).offset().top) }, "fast", "swing") }), props.$txtAge.on("keydown", function (e) { 13 == e.keyCode && e.preventDefault() }), props.$form.on("keydown", function (e) { 13 == e.keyCode && e.preventDefault() }), "undefined" != props.$bottomSearch && ("palm" == AE.getSiteViewType() ? (AE.ui.props.appendTarget = props.$bottomSearch, $(window).on("load", function () { $(props.$bottomSearch).append(props.$searchContainer).ready(function () { $("#scroll-content").scrollTop(0) }) })) : AE.ui.props.appendTarget = $("#ae-search").closest(".ui-dialog")[0] ? null : props.$topSearch, AE.addTransitionTask({ func: function () { UI.palmTransition(arguments[0], props.$topSearch, props.$bottomSearch, "#search-form") } })), props.$fcrOnewayChk.on("change", function (event) { $(this).is(":checked") ? UI.fcrToggleOnewayOpen() : UI.fcrToggleOnewayClose() }), "FCR" == AE.props.siteCode && $(document).ready(function (event) { if (props.$fcrOnewayChk.is(":checked")) UI.fcrToggleOnewayOpen(); else { var oStoredSearch = JSON.parse(localStorage.getItem("aeSearch")); try { oStoredSearch.puloclist !== oStoredSearch.doloclist && null !== oStoredSearch.doloclist && void 0 === AEdata.booking && ($("input[name='fcr-oneway_chk']").prop("checked", !0), UI.fcrToggleOnewayOpen()) } catch (e) { } } }), "FCR" == AE.props.siteCode && void 0 !== AEdata.booking && $(document).ready(function (event) { UI.fcrOneWayToggle() }) }, fcrToggleOnewayOpen: function () { props.$locationsWrapper.hasClass("both") || (props.$locationsWrapper.addClass("both"), $(".fcr-dropoff_toggle").slideDown(), $(".fcr-input_text_over").addClass("fcr-full_width"), $(".fcr-pu_do_toggle").toggle()) }, fcrToggleOnewayClose: function () { props.$locationsWrapper.removeClass("both"), $(".fcr-dropoff_toggle").slideUp(), $(".fcr-pu_do_toggle").toggle(), $(".fcr-input_text_over").removeClass("fcr-full_width"), $("[name='dropoff-loc']").next(".ui-textsearch-target-input").trigger("click") }, palmTransition: function () { var palmContent = $("" + arguments[3])[0], container = arguments[0] ? arguments[2] : arguments[1]; "palm" == AE.getSiteViewType() ? AE.ui.props.appendTarget = props.$bottomSearch : AE.ui.props.appendTarget = $("#ae-search").closest(".ui-dialog")[0] ? null : props.$topSearch, $("" + container).append(palmContent) }, getValue: function (property) { var i, value = "No property given", _obj = Object.keys(oSubmit); for (i in _obj) { var _key = _obj[i]; _key.toString() == property && (value = oSubmit[_key]) } return value }, getSubmitValues: function () { return oSubmit }, getStoredSearch: function () { return props.oStoredSearch || oStoredSearch }, getMaxAge: function () { return props.$ageMax }, getMinAge: function () { return props.$ageMin }, setValue: function (settings) { var options = { name: null, value: null, item: null, jsonOnly: !1 }; if ($.extend(options, settings), !options.name) throw "ERR: AE.ui.search.setValue() - No input or value given."; if (options.resetAge && (oSubmit.searchAge = ""), options.item) { if ("pickup-loc" != options.name && "dropoff-loc" != options.name) throw "ERR search.setValue(): Valid jQuery UI item required."; UI.autocomplete.setValue(options.item) } if (options.value) switch (options.name) { case "pickup-time": options.jsonOnly || props.$puTime.val(options.value), oSubmit.putime = options.value, props.$hiddenPuTime.val(options.value); break; case "dropoff-time": options.jsonOnly || props.$doTime.val(options.value), oSubmit.dotime = options.value, props.$hiddenDoTime.val(options.value); break; case "pickup-date": options.jsonOnly || props.$puDate.val(options.value); var _puDate = UI.isValidDate(options.value) ? options.value : AE.ui.datepicker.convertDate(props.$puDate); oSubmit.puCal = _puDate, props.$hiddenPuDate.val(_puDate); break; case "dropoff-date": options.jsonOnly || props.$doDate.val(options.value); _puDate = UI.isValidDate(options.value) ? options.value : AE.ui.datepicker.convertDate(props.$doDate); oSubmit.doCal = _puDate, props.$hiddenDoDate.val(_puDate); break; case "txt-age": options.jsonOnly || props.$txtAge.val(options.value), oSubmit.searchAge = options.value; break; case "chk-age": options.jsonOnly || props.$chkAge.prop("checked"), oSubmit.searchAgeCheckbox = options.value; break; case "display_label": oSubmit.display_label = options.value; break; case "display_labelr": oSubmit.display_labelr = options.value; break; default: throw "ERR search.setValue(): Valid value required." }return oSubmit }, getmemberage: function () { return props.memberage }, isValidDate: function (d) { return d instanceof Date && !isNaN(d) }, formSubmit: function (loginOverride) { loginOverride = loginOverride || !1; var _flagTitle, _flagMsg, $ui_chkDiff = props.$chkDiff, $ui_puInput = props.$puLoc, $ui_doInput = props.$doLoc, $ui_menu_puInput_country = props.$menu_puCountry, $ui_menu_puInput_city = props.$menu_puCity, $ui_menu_puInput_location = props.$menu_puLocation, $ui_menu_doInput_country = props.$menu_doCountry, $ui_menu_doInput_city = props.$menu_doCity, $ui_menu_doInput_location = props.$menu_doLocation, $ui_puDate = props.$puDate, $ui_doDate = props.$doDate, $ui_puTime = props.$puTime, $ui_doTime = props.$doTime, $ui_txtAge = (props.$chkAge, props.$txtAge), $_subBtn = props.$btnSubmit, _posDiff = { top: -5, left: 0 }, $ui_elObj = {}, $ui_puDate = (!isMenuSearch || loginOverride || isLTRSearch ? isBMRSearch ? ($ui_menu_puInput_country = $("select#bmr__country"), $ui_menu_puInput_city = $("select#bmr__city"), $ui_menu_doInput_country = $("select#bmr__countryr"), $ui_menu_doInput_city = $("select#bmr__cityr"), $ui_elObj.menusearchpucountry = ("" === $ui_menu_puInput_country.val() || "--" === $ui_menu_puInput_country.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchpucity = ("" === $ui_menu_puInput_city.val() || "--" === $ui_menu_puInput_city.val()) && $fn_checkMenuSearchLocationInput, $ui_chkDiff.is(":checked") && ($ui_elObj.menusearchdocountry = ("" === $ui_menu_doInput_country.val() || "--" === $ui_menu_doInput_country.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchdocity = ("" === $ui_menu_doInput_city.val() || "--" === $ui_menu_doInput_city.val()) && $fn_checkMenuSearchLocationInput)) : isLTRSearch ? ($ui_puInput = AE.ui.searchType.leasesearch.props.$ltrpu, $ui_doInput = AE.ui.searchType.leasesearch.props.$ltrdo, "" === $ui_puInput.val() || "" === $ui_doInput.val() ? $ui_elObj.textsearchlocation = $fn_flagLocationInput : $ui_elObj.textsearchlocation = !1) : $ui_elObj.textsearchlocation = null == UI.getValue("city") && $fn_flagLocationInput : ($ui_elObj.menusearchpucountry = ("" === $ui_menu_puInput_country.val() || "--" === $ui_menu_puInput_country.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchpucity = ("" === $ui_menu_puInput_city.val() || "--" === $ui_menu_puInput_city.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchpulocation = ("" === $ui_menu_puInput_location.val() || "--" === $ui_menu_puInput_location.val()) && $fn_checkMenuSearchLocationInput, $ui_chkDiff.is(":checked") && ($ui_elObj.menusearchdocountry = ("" === $ui_menu_doInput_country.val() || "--" === $ui_menu_doInput_country.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchdocity = ("" === $ui_menu_doInput_city.val() || "--" === $ui_menu_doInput_city.val()) && $fn_checkMenuSearchLocationInput, $ui_elObj.menusearchdolocation = ("" === $ui_menu_doInput_location.val() || "--" === $ui_menu_doInput_location.val()) && $fn_checkMenuSearchLocationInput)), isBMRSearch && AE.ui.searchType.bmr && AE.props.isAUNZ && AE.account.props.$isLoggedIn && "" == props.$txtAge.val() && (oSubmit.searchAgeCheckbox = !1, oSubmit.searchAge = ""), props.hasAgeChkbx ? $ui_elObj.age = !UI.getValue("searchAgeCheckbox") && "" === props.$txtAge.val() && $fn_flagChkAgeInput : $ui_elObj.age = ("" == UI.getValue("searchAge") || "" == $ui_txtAge.val()) && $fn_flagChkAgeInput, new Date($.datepicker.formatDate("yy-mm-dd", $ui_puDate.datepicker("getDate")) + "T" + $ui_puTime.val())), $ui_puTime = new Date($.datepicker.formatDate("yy-mm-dd", $ui_doDate.datepicker("getDate")) + "T" + $ui_doTime.val()); $ui_elObj.badDates = $ui_puTime.getTime() <= $ui_puDate.getTime() && function () { $ui_doTime.addClass("ui--invalid-input"); return _flagTitle = AE.ui.decodeHtml(AE.props.oSearch.LABEL_DROPOFF_TIME), _flagMsg = "", AE.ui.search.searchFormErrorHandler.init(_flagTitle, _flagMsg, { top: -5, left: -8 }) }, AE.forms.addSpinGear($_subBtn.attr("disabled", !0)); for (var i = 0; i < Object.keys($ui_elObj).length; i++) { var _el = Object.keys($ui_elObj)[i]; if (0 != $ui_elObj[_el]) return $ui_elObj[_el]() } function $fn_flagLocationInput() { return (isLTRSearch ? "" === $ui_puInput.val() ? ($ui_puInput.addClass("ui--invalid-input"), _flagTitle = AE.ui.decodeHtml(AE.props.oSearch.ERRORMSG_INPUTEMPTY), _flagMsg = "", $ui_puInput) : ($ui_doInput.addClass("ui--invalid-input"), _flagTitle = AE.ui.decodeHtml(AE.props.oSearch.ERRORMSG_INPUTEMPTY), _flagMsg = "", $ui_doInput) : ($ui_puInput.addClass("ui--invalid-input"), _flagTitle = AE.ui.decodeHtml(AE.props.oSearch.ERRORMSG_PULOCEMPTY), _flagMsg = AE.ui.decodeHtml(AE.props.oSearch.ERRORMSG_INPUTEMPTY), $ui_puInput)).attr({ placeholder: _flagTitle }), AE.ui.search.searchFormErrorHandler.init(_flagTitle, _flagMsg, { top: -5, left: -8 }) } function $fn_flagChkAgeInput() { var $ui_ageInput = $ui_txtAge, _val = $ui_ageInput.val(), _min = (_val.length, $ui_ageInput.attr("min")), $ui_ageInput = $ui_ageInput.attr("max"); return _posDiff = { top: -5, left: AE.legacy.grief.isIE ? 180 : 165 }, (isBMRSearch && AE.props.isAUNZ || !props.hasAgeChkbx) && (_posDiff = { top: -5 }), $ui_txtAge.addClass("ui--invalid-input").parent().css({ position: "relative" }), "" == _val ? (_flagTitle = AE.props.oSearch.ERRORMSG_DRIVERAGETITLE, _flagMsg = AE.props.oSearch.ERRORMSG_DRIVERAGEMESSAGE, AE.ui.search.searchFormErrorHandler.init(_flagTitle, _flagMsg, _posDiff)) : parseInt(_val) < parseInt(_min) || parseInt(_val) > parseInt($ui_ageInput) ? (_flagTitle = AE.props.oSearch.ERRORMSG_INVALIDAGETITLE, _flagMsg = AE.props.oSearch.ERRORMSG_INVALIDAGEMESSAGE.replace("[AGE]", "<strong>" + _min + "</strong>"), AE.ui.search.searchFormErrorHandler.init(_flagTitle, _flagMsg, _posDiff)) : (UI.setValue({ name: "txt-age", value: props.$txtAge.val(), jsonOnly: !0 }), props.$btnSubmit.removeClass("ui--btn-submit-wait").attr({ disabled: !1 }).find(".ui--loading-results").remove(), !1) } function $fn_checkMenuSearchLocationInput() { var menuSearchError = !1; if ("" === $ui_menu_puInput_country.val() || "--" === $ui_menu_puInput_country.val() ? (menuSearchError = !0, $ui_menu_puInput_country.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -2 }) : "" === $ui_menu_puInput_city.val() || "--" === $ui_menu_puInput_city.val() ? (menuSearchError = !0, $ui_menu_puInput_city.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -2 }) : "" === $ui_menu_puInput_location.val() || "--" === $ui_menu_puInput_location.val() ? (menuSearchError = !0, $ui_menu_puInput_location.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -15 }) : $ui_chkDiff.is(":checked") && ("" === $ui_menu_doInput_country.val() || "--" === $ui_menu_doInput_country.val() ? (menuSearchError = !0, $ui_menu_doInput_country.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -2 }) : "" === $ui_menu_doInput_city.val() || "--" === $ui_menu_doInput_city.val() ? (menuSearchError = !0, $ui_menu_doInput_city.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -2 }) : "" !== $ui_menu_doInput_location.val() && "--" !== $ui_menu_doInput_location.val() || (menuSearchError = !0, $ui_menu_doInput_location.addClass("ui--invalid-input"), _posDiff = { top: -19, left: -15 })), menuSearchError) return _flagTitle = AE.ui.decodeHtml(AE.props.oSearch.ERRORMSG_INPUTEMPTY), _flagMsg = "", $ui_puInput.attr({ placeholder: _flagTitle }), AE.ui.search.searchFormErrorHandler.init(_flagTitle, _flagMsg, _posDiff) } loginOverride || (UI.setValue({ name: "txt-age", value: props.$txtAge.val(), jsonOnly: !0 }), UI.setValue({ name: "chk-age", value: props.$chkAge.prop("checked"), jsonOnly: !0 })), UI.setValue({ name: "pickup-date", value: props.$puDate.val(), jsonOnly: !0 }), "FCR" == AE.props.siteCode && props.$fcrOnewayChk.is(":checked") && (props.$doDate = props.$doDateOneway), UI.setValue({ name: "dropoff-date", value: props.$doDate.val(), jsonOnly: !0 }), UI.setValue({ name: "pickup-time", value: props.$puTime.val(), jsonOnly: !0 }), UI.setValue({ name: "dropoff-time", value: props.$doTime.val(), jsonOnly: !0 }), "FCR" == AE.props.siteCode && props.$fcrOnewayChk.is(":checked") && UI.setValue({ name: "dropoff-time", value: props.$doTimeOneway.val(), jsonOnly: !0 }); $ui_doDate = JSON.stringify(oSubmit), $ui_puTime = $(props.$form).attr("action"); if (AECookie.create("aeSearch", $ui_doDate), localStorage.setItem("aeSearchAff", oSite.affiliate), localStorage.setItem("aeSearchSys", oSite.chaosSystem), props.useStoredSearch = !(!AE.ui.search.useStoredSearch() || null != localStorage.setItem("aeSearch", $ui_doDate)), !isBMRSearch || !AE.ui.searchType.bmr) return AE.ui.search.postToForm($ui_puTime, oSubmit, "post"); AE.ui.searchType.bmr.handleSubmit(oSubmit) }, postToForm: function (path, params, method) { method = method || "post"; var _tempHiddenField_aff, key, _tempHiddenField, _tempForm = document.createElement("form"), killBtnSpinner = (_tempForm.setAttribute("method", method), _tempForm.setAttribute("action", path), !1); if (void 0 !== tgt && 0 !== tgt && (isBMRSearch || self !== top)) switch (tgt) { case "1": _tempForm.setAttribute("target", "_blank"), killBtnSpinner = !0; break; case "2": _tempForm.setAttribute("target", "_parent") }for (key in window.location !== window.parent.location && (AECookie.props.cookiesEnabled() ? (0 <= navigator.userAgent.search("Safari") && navigator.userAgent.search("Chrome") < 0 || 0 <= navigator.userAgent.search("Firefox")) && ((_tempHiddenField_aff = document.createElement("input")).setAttribute("type", "hidden"), _tempHiddenField_aff.setAttribute("name", "aff"), _tempHiddenField_aff.setAttribute("value", AE.props.affiliate), _tempForm.appendChild(_tempHiddenField_aff)) : (_tempForm.setAttribute("target", "_parent"), (_tempHiddenField_aff = document.createElement("input")).setAttribute("type", "hidden"), _tempHiddenField_aff.setAttribute("name", "aff"), _tempHiddenField_aff.setAttribute("value", AE.props.affiliate), _tempForm.appendChild(_tempHiddenField_aff))), params) params.hasOwnProperty(key) && ((_tempHiddenField = document.createElement("input")).setAttribute("type", "hidden"), _tempHiddenField.setAttribute("name", key), _tempHiddenField.setAttribute("value", params[key]), _tempForm.appendChild(_tempHiddenField)); document.body.appendChild(_tempForm), _tempForm.submit(), killBtnSpinner && props.$btnSubmit.removeClass("ui--btn-submit-wait").attr({ disabled: !1 }).find(".ui--loading-results").remove() }, chkAgeHandler: function (isChecked) { return 1 == (isChecked || !1) ? (props.$txtAge.val(props.ageDefault.toString()).hide(), props.$chkAge.prop("checked", !0), oSubmit.searchAgeCheckbox = !0, $(".ui-warn-flag").hide(), props.$txtAge.removeClass("ui--invalid-input")) : (props.$txtAge.val("").show(), props.$chkAge.prop("checked", !1), oSubmit.searchAgeCheckbox = !1), oSubmit.searchAge = props.$txtAge.val(), oSubmit }, setDefaultAgeOverride: function (age) { AEdata.defaultAgeOverride = age }, setAge: function (age) { return props.$txtAge.val(age.toString()), oSubmit.searchAge = age.toString(), AEdata.modify || (props.hasAgeChkbx ? age < props.ageMin || age > props.ageMax ? (props.$chkAge.prop("checked", !1), oSubmit.searchAgeCheckbox = !1, props.$txtAge.show()) : (props.$chkAge.prop("checked", !0), oSubmit.searchAgeCheckbox = !0, props.$txtAge.hide()) : (props.$chkAge.hide(), oSubmit.searchAgeCheckbox = !1, props.$txtAge.show())), oSubmit }, forceSearchAgeCheckBox: function () { return props.$chkAge.prop("checked", !1), props.$txtAge.show(), !(oSubmit.searchAgeCheckbox = !1) }, useStoredSearch: function () { return props.useStoredSearch }, hasAgeChkbx: function () { return props.hasAgeChkbx }, cleanStoredSearch: function () { return AE.ui.search.useStoredSearch() ? localStorage.aeSearch = "" : "" }, searchFormErrorHandler: { init: function (title, msg, posDiff, newClass) { var _elems = $("[tag*='--ae-custom']"); return props.$searchFormErrorHandler = { msgTitle: title, msgDesc: msg, pos: posDiff || { top: -5, left: 0 }, newClass: newClass || "arrow-down" }, "palm" == AE.getSiteViewType() && (props.$puLoc.blur(), props.$doLoc.blur()), props.$btnSubmit.removeClass("ui--btn-submit-wait").attr({ disabled: !1 }).find(".ui--loading-results").remove(), UI.searchFormErrorHandler._checkValidity(_elems) }, _checkValidity: function (elems) { for (var _elems = elems, i = 0; i < _elems.length; i++) { var _el = _elems[i]; $(_el).hasClass("ui--invalid-input") && UI.searchFormErrorHandler._toggleFlag(_el) } return !1 }, _renderFlag: function (el) { var invalidName, _el = el, el = $("<div/>", { class: "ui-warn-flag ui-invalid-input", role: "tooltip", tag: "warn--ae-custom", for: $(_el).attr("name"), visible: !1 }).uniqueId(), $ui_closeBtn = $("<button/>", { class: "ui-warn-flag-close-btn", role: "button" }), $ui_txtContent = $("<div/>", { class: "ui-warn-flag-content", role: "contentinfo" }), $ui_warnTitle = $("<h5/>", { class: "ui-warn-flag-title", role: "heading" }), $ui_warnMsg = $("<span/>", { class: "ui-warn-flag-message", role: "definition" }); function clearFlag() { return document.querySelector("[tag='input--ae-custom']").removeEventListener("focus", clearFlag), UI.searchFormErrorHandler._hideErrorFlag(_el) } return $ui_warnTitle.text(AE.ui.decodeHtml(props.$searchFormErrorHandler.msgTitle)).attr({ alt: props.$searchFormErrorHandler.msgTitle }), $ui_warnMsg.html(props.$searchFormErrorHandler.msgDesc).attr({ alt: props.$searchFormErrorHandler.msgDesc }), "FCR" == AE.props.siteCode && (invalidName = $(_el).attr("name"), $("#" + invalidName + "-error").html(props.$searchFormErrorHandler.msgTitle), $("#" + invalidName + "-error").show(), "pickup-loc" == invalidName && $('div[name="pickup-input_text_wrapper"]').addClass("ui--invalid-input"), "dropoff-loc" == invalidName) && $('div[name="dropoff-input_text_wrapper"]').addClass("ui--invalid-input"), $ui_txtContent.append($("<header/>").append($ui_warnTitle), $("<section/>").append($ui_warnMsg)), el.append($ui_closeBtn, $("<article/>").append($ui_txtContent)).insertBefore(_el), props.$searchFormErrorHandler.pos = { top: el.height() < 30 ? parseInt(props.$searchFormErrorHandler.pos.top + 12) : props.$searchFormErrorHandler.pos.top, left: props.$searchFormErrorHandler.pos.left }, invalidName = { top: props.$searchFormErrorHandler.pos.top - el.outerHeight() + "px", left: props.$searchFormErrorHandler.pos.left + "px", display: "none" }, 0 != props.$searchFormErrorHandler.newClass && el.addClass(props.$searchFormErrorHandler.newClass), el.css(invalidName), $ui_closeBtn.on("click", function (event) { return event.preventDefault(), UI.searchFormErrorHandler._toggleFlag(_el) }), $(".ui-selectmenu-text,.ui-datepicker-trigger").click(function () { clearFlag() }), $(_el).is(".ui-textsearch-input") && "do" == $(_el).data("direction") && document.querySelector("[tag*='--ae-custom']").addEventListener("focus", clearFlag), $(_el).is(".ui-textsearch-input") && "pu" == $(_el).data("direction") && document.querySelector(".ui-textsearch-input[data-direction=pu]").addEventListener("focus", clearFlag), $(_el).is(".trg__menusearch--country") && "pu" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--country[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__menusearch--city") && "pu" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--city[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__menusearch--loc") && "pu" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--loc[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__menusearch--country") && "do" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--country[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__menusearch--city") && "do" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--city[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__menusearch--loc") && "do" == $(_el).data("direction") ? document.querySelector(".trg__menusearch--loc[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__bmrsearch--country") && "pu" == $(_el).data("direction") ? document.querySelector(".trg__bmrsearch--country[data-direction=pu]").addEventListener("focus", clearFlag) : $(_el).is(".trg__bmrsearch--city") && "pu" == $(_el).data("direction") && document.querySelector(".trg__bmrsearch--city[data-direction=pu]").addEventListener("focus", clearFlag), $(_el).is("input[name=txt-age]") && document.querySelector("input[name=txt-age]").addEventListener("focus", clearFlag), $(_el).is("select[id=dropoff-time]") && document.querySelector("span[id=dropoff-time-button]").addEventListener("focus", clearFlag), UI.searchFormErrorHandler._toggleFlag(_el) }, _toggleFlag: function (el) { var _hasFlag = void 0 !== $(el).parent().has("[tag='warn--ae-custom']")[0], $_flag = _hasFlag ? $(el).prev("[tag='warn--ae-custom']") : void 0; return _hasFlag ? $_flag.is(":visible") ? UI.searchFormErrorHandler._hideErrorFlag(el) : !$_flag.is(":visible") && UI.searchFormErrorHandler._showErrorFlag(el) : UI.searchFormErrorHandler._renderFlag(el) }, _showErrorFlag: function (el) { var $_flag = void 0 !== $(el).parent().has("[tag='warn--ae-custom']")[0] ? $(el).prev("[tag='warn--ae-custom']") : void 0, $_button = $(el).parent().find("button"); return $_flag.stop().fadeIn("slow", function () { $_flag.attr({ visible: !0 }), $_button.addClass("ui-warn-flag-animated-el ui-warn--in") }) }, _hideErrorFlag: function (el) { var invalidName, _el = el, el = void 0 !== $(_el).parent().has("[tag='warn--ae-custom']")[0], $_flag = el ? $(_el).prev("[tag='warn--ae-custom']") : void 0, $_button = $(_el).parent().find("button"); return "FCR" == AE.props.siteCode && (invalidName = $(_el).attr("name"), $("#" + invalidName + "-error").hide(), "pickup-loc" == invalidName && $('div[name="pickup-input_text_wrapper"]').removeClass("ui--invalid-input"), "dropoff-loc" == invalidName) && $('div[name="dropoff-input_text_wrapper"]').removeClass("ui--invalid-input"), $_button.addClass("ui-warn--out").removeClass("ui-warn--in"), el && $_flag.stop().animate({ top: parseInt(props.$searchFormErrorHandler.pos.top - 10) + "px", opacity: 0 }, "slow", function () { $_flag.attr({ visible: !1 }), UI.searchFormErrorHandler._destroy(_el) }) }, _destroy: function (el) { var _hasFlag = void 0 !== $(el).parent().has("[tag='warn--ae-custom']")[0], $_flag = _hasFlag ? $(el).prev("[tag='warn--ae-custom']") : void 0; return $(el).removeClass("ui--invalid-input"), _hasFlag && setTimeout(function () { $_flag.remove() }, 500) } }, readCookie: function (name) { for (var nameEQ = name.toLowerCase() + "=", ca = document.cookie.split(";"), i = 0; i < ca.length; i++) { for (var c = ca[i].toLowerCase(); " " == c.charAt(0);)c = c.substring(1, c.length); if (0 == c.indexOf(nameEQ)) return c.substring(nameEQ.length, c.length) } return null }, fcrOneWayToggle: function (event) { try { (AEdata.booking && void 0 !== AEdata.booking.quote.oQuote.oOW || void 0 !== AEdata.booking.quote.oQuote.OOW) && (void 0 !== AEdata.booking.quote.oQuote.oOW && AEdata.booking.quote.oQuote.oOW.locList || void 0 !== AEdata.booking.quote.oQuote.OOW && AEdata.booking.quote.oQuote.OOW.locList) && ($("input[name='fcr-oneway_chk']").prop("checked", !0), UI.fcrToggleOnewayOpen()) } catch (e) { } }, autocomplete: { getInputs: function () { return { $puLoc: props.$puLoc, $doLoc: props.$doLoc, $puDate: props.$puDate, $doDate: props.$doDate, $hiddenPuDate: props.$hiddenPuDate, $hiddenDoDate: props.$hiddenDoDate, $puTime: props.$puTime, $doTime: props.$doTime, $hiddenPuTime: props.$hiddenPuTime, $hiddenDoTime: props.$hiddenDoTime, $chkDiff: props.$chkDiff, $btnSubmit: props.$btnSubmit } }, setFromQuote: function (options) { options = options || {}, AEdata && AEdata.booking && AEdata.booking.quote && AEdata.booking.quote.oQuote && (oSubmit.searchAge = AEdata.booking.quote.oQuote.age, AEdata.booking.quote.oQuote.oPU && (oSubmit.display_label = AEdata.booking.quote.oQuote.oPU.name, oSubmit.city = AEdata.booking.quote.oQuote.oPU.city, oSubmit.puloclist = AEdata.booking.quote.oQuote.oPU.locList, oSubmit.pucode = AEdata.booking.quote.oQuote.oPU.country, oSubmit.puloctype = AEdata.booking.quote.oQuote.oPU.deskType), AEdata.booking.quote.oQuote.oOW && (AEdata.booking.quote.oQuote.oOW.locList || AEdata.booking.quote.oQuote.oOW.city || AEdata.booking.quote.oQuote.oOW.country) && AEdata.booking.quote.oQuote.oDO && (oSubmit.display_labelr = AEdata.booking.quote.oQuote.oDO.name, oSubmit.cityr = AEdata.booking.quote.oQuote.oDO.city, oSubmit.doloclist = AEdata.booking.quote.oQuote.oDO.locList, oSubmit.docode = AEdata.booking.quote.oQuote.oDO.country, oSubmit.doloctype = AEdata.booking.quote.oQuote.oDO.deskType), _.isEmpty(options) || _.extend(oSubmit, options)) }, setValue: function (options) { null == options.pu ? (oSubmit.display_label = null, oSubmit.city = null, oSubmit.puloclist = null, oSubmit.pucode = null, oSubmit.puloctype = null, oSubmit.puchaos_hub_id = null) : (options.drop ? (oSubmit.drop = options.drop, oSubmit.display_labelr = options.drop.display_label, oSubmit.cityr = options.drop.chaos_city_name, oSubmit.doloclist = options.drop.desk_list, oSubmit.docode = options.drop.chaos_country_code, oSubmit.doloctype = options.drop.loc_type, oSubmit.dochaos_hub_id = options.drop.chaos_hub_id) : (oSubmit.pu = options.pu, oSubmit.display_label = options.pu.display_label, oSubmit.city = options.pu.chaos_city_name, oSubmit.puloclist = options.pu.desk_list, oSubmit.pucode = options.pu.chaos_country_code, oSubmit.puloctype = options.pu.loc_type, oSubmit.puchaos_hub_id = options.pu.chaos_hub_id, options.preserveDO || (oSubmit.drop = !1, oSubmit.display_labelr = null, oSubmit.cityr = null, oSubmit.doloclist = null, oSubmit.docode = null, oSubmit.doloctype = null, oSubmit.dochaos_hub_id = null)), oSubmit.tgt = $("[name=tgt]").val()) } }, allStorage: function (options) { for (var key, archive = [], keys = Object.keys(localStorage), i = 0; key = keys[i]; i++)archive.push(key + "=" + localStorage.getItem(key)); return archive } }; return UI }(), (AE = AE || {}).ui.selectmenu = AE.ui.selectmenu || function () { "use strict"; var UI = { init: function () { var rawMHCities; UI.props = {}, AE.ui.selectmenu.statesHandled = 0, $("select.state--select")[0] && AEdata.arrstates && (UI.buildStateArray(), $("form .state-container")[0] && Array.isArray(UI.props.arrStates) && UI.props.arrStates.length && UI.handleStateMenus($("form"), "div.state-container", !0), 1 !== AE.ui.selectmenu.statesHandled) && (Array.isArray(UI.props.arrStates) && UI.props.arrStates.length || UI.buildStateArray(), $("form .state-container")[0]) && UI.props.arrStates.length && UI.handleStateMenus($("form"), "div.state-container", !0), $("select.motorhome__select--city")[0] && $("select.motorhome__select--city").first().data("arrmhcities") && (rawMHCities = $("select.motorhome__select--city").first().data("arrmhcities"), UI.props.arrMHCities = rawMHCities.length ? JSON.parse(decodeURIComponent(rawMHCities)) : [], UI.props.arrMHCities.length) && UI.handleMotorHomeCityMenus($("form"), !0), $("select.chauffeur__select--city")[0] && $("select.chauffeur__select--city").first().data("arrcfcities") && (rawMHCities = $("select.chauffeur__select--city").first().data("arrcfcities"), UI.props.arrCFCities = rawMHCities.length ? JSON.parse(decodeURIComponent(rawMHCities)) : [], UI.props.arrCFCities.length) && (UI.handleChauffeurCityMenus($("form"), !1, !0), UI.handleChauffeurCityMenus($("form"), !0, !0)), AE.ui.addBodyChangeTask({ func: UI.onBodyChange }) }, buildDynamicOptions: function (arrSrc) { arrSrc = arrSrc || []; for (var $df = $(document.createDocumentFragment()), i = 0; i < arrSrc.length; i++) { var item = arrSrc[i]; "-" === item.value ? $df.append($(document.createElement("optgroup")).addClass(item.value).attr("label", item.label)) : $df.append($(document.createElement("option")).attr("value", item.value).append(item.label)) } return $df }, buildStateArray: function () { $("select.state--select")[0] && AEdata.arrstates && (UI.props.arrStates = AEdata.arrstates.length ? JSON.parse(AEdata.arrstates) : []) }, handleStateMenus: function ($parentForm, stateContainerSelector, preselect) { stateContainerSelector = stateContainerSelector || "div.state-container", preselect = preselect || !1, ($parentForm = $parentForm || $("form")).hasClass("mura-form") && (stateContainerSelector = "div.mura-control-group"); var $countryDD = $parentForm.find("select.country--select"), $stateDD = $parentForm.find("select.state--select"), $parentForm = $parentForm.find(stateContainerSelector), $label = $parentForm.find("label"); try { if (void 0 !== $label.attr("state") && void 0 !== $label.attr("province")) { var $stateLabel = $label.attr("state"), $provinceLabel = $label.attr("province"); switch ($countryDD.val()) { case "CA": case "ZA": $label.text($provinceLabel); break; case "AU": case "BR": case "US": $label.text($stateLabel) } } var arrTheseStates = _.filter(UI.props.arrStates, function (state) { return state.group === $countryDD.val() }); $stateDD.empty().addClass("state_dd_hide"), $stateDD.parent().removeClass("ui-state-invalid ui-state-valid"), arrTheseStates.length ? ($stateDD.append(UI.buildDynamicOptions(arrTheseStates)).removeClass("state_dd_hide"), preselect && $stateDD.find('option[value="' + $stateDD.data("startval") + '"]').prop("selected", !0), $parentForm.removeClass("state_dd_hide")) : ($parentForm.addClass("state_dd_hide"), "/affaccmgt" === AE.props.funnelPage && $stateDD.append($("<option/>")).change()), AE.ui.selectmenu.statesHandled = 1 } catch (err) { AE.ui.selectmenu.statesHandled = 2 } }, handleMotorHomeCityMenus: function ($parentForm, preselect) { preselect = preselect || !1; var $countryDD = ($parentForm = $parentForm || $("form")).find("select.motorhome__select--country"), $cityDD = $parentForm.find("select.motorhome__select--city"), $parentForm = $parentForm.find(".vehType"), arrTheseCities = _.filter(UI.props.arrMHCities, function (city) { return city.group === $countryDD.val() }); $cityDD.empty(), $cityDD.parent().removeClass("ui-state-invalid ui-state-valid"), arrTheseCities.length && ($cityDD.append(UI.buildDynamicOptions(arrTheseCities)), preselect) && $cityDD.find('option[value="' + $cityDD.data("startval") + '"]').prop("selected", !0), $parentForm.addClass("trulyhidden"), $($parentForm.filter("." + $countryDD.val())).removeClass("trulyhidden") }, handleChauffeurCityMenus: function ($parentForm, dropoff, preselect) { preselect = preselect || !1; var dropoff = (dropoff = dropoff || !1) ? "select.chauffeur__select--do" : "select.chauffeur__select--pu", $countryDD = ($parentForm = $parentForm || $("form")).find(dropoff + ".chauffeur__select--country"), $parentForm = $parentForm.find(dropoff + ".chauffeur__select--city"), dropoff = _.filter(UI.props.arrCFCities, function (city) { return city.group === $countryDD.val() }); $parentForm.empty(), $parentForm.parent().removeClass("ui-state-invalid ui-state-valid"), dropoff.length && ($parentForm.append(UI.buildDynamicOptions(dropoff)), preselect) && $parentForm.find('option[value="' + $parentForm.data("startval") + '"]').prop("selected", !0) }, handleExpiryMenus: function ($yearSelect) { $yearSelect = $yearSelect || $("form select.expyear--select"); var $monthSelect, rightNow = new Date, thisMonth = rightNow.getMonth() + 1, rightNow = rightNow.getFullYear().toString().substring(2); $yearSelect[0] && ($monthSelect = $($yearSelect.data("expmonth")))[0] && ($monthSelect = $monthSelect.children("option").prop("disabled", !1), $yearSelect.val() === rightNow) && ($yearSelect = _.filter($monthSelect, function (opt) { return Number(opt.value) < thisMonth }), $($yearSelect).prop("disabled", !0).prop("selected", !1)) }, onBodyChange: function (event, $target) { if ("SELECT" === event.target.tagName.toUpperCase()) { if ($target.hasClass("expyear--select") && UI.handleExpiryMenus($target), $target.hasClass("country--select")) { Array.isArray(UI.props.arrStates) && UI.props.arrStates.length || UI.buildStateArray(), UI.handleStateMenus($target.closest("form")); event = document.getElementsByClassName("aeUplift-modal-container"); if (event.length) { var upDivDisp = "inline-block"; switch ($target.val()) { case "CA": case "US": upDivDisp = "inline-block"; break; default: upDivDisp = "none" }for (const upDiv of event) upDiv.style.display = upDivDisp } } $target.hasClass("motorhome__select--country") && UI.handleMotorHomeCityMenus($target.closest("form")), $target.hasClass("chauffeur__select--country") && ($target.hasClass("chauffeur__select--pu") ? UI.handleChauffeurCityMenus($target.closest("form"), !1, !1) : $target.hasClass("chauffeur__select--do") && UI.handleChauffeurCityMenus($target.closest("form"), !0, !1)) } } }; return UI }(), (AE = AE || {}).ui.timeselectmenu = AE.ui.timeselectmenu || function () { "use strict"; var searchPuTime, searchDoTime, vouchDateTime = "undefined" != typeof oBKdateTime && !_.isEmpty(oBKdateTime) && oBKdateTime, UI = { init: function () { var GET_INPUTS = AE.ui.search.autocomplete.getInputs(); UI.props = { $puTime: GET_INPUTS.$puTime, $doTime: GET_INPUTS.$doTime, $hiddenPuTime: GET_INPUTS.$hiddenPuTime, $hiddenDoTime: GET_INPUTS.$hiddenDoTime, modElement: $("html, body"), modClass: "ui-timeselect-open" }, UI.mainSearch() }, mainSearch: function () { var _tempPuT, _tempDoT, _deeplinkPuT, _deeplinkDoT; searchPuTime = UI.props.$hiddenPuTime.val(), searchDoTime = UI.props.$hiddenDoTime.val(), _tempPuT = vouchDateTime ? vouchDateTime.bkputime : searchPuTime, _tempDoT = vouchDateTime ? vouchDateTime.bkdotime : searchDoTime, _deeplinkPuT = UI.props.$hiddenPuTime.attr("data-deeplinkval"), _deeplinkDoT = UI.props.$hiddenDoTime.attr("data-deeplinkval"), "" === (_tempPuT = void 0 !== _deeplinkPuT && !1 !== _deeplinkPuT ? _deeplinkPuT : _tempPuT) && (_tempPuT = searchPuTime), "" === (_tempDoT = void 0 !== _deeplinkDoT && !1 !== _deeplinkDoT ? _deeplinkDoT : _tempDoT) && (_tempDoT = searchDoTime), $.widget("custom.timeselectmenu", $.ui.selectmenu, { _create: function (event, ui) { this._super(event, ui), this.element.menu().data("menu", this.menu) }, _renderMenu: function (ul, items) { var $widget = this, $menu = ul; $.each(items, function (index, item) { item.ind = index, $widget._renderItemData($menu, item) }), $menu.find("li:odd").addClass("odd") }, _renderItem: function (ul, item) { var $select = this.element, time = item.label, ind = item.ind, hours = Number(time.match(/^(\d+)/)[1]), minutes = Number(time.match(/:(\d+)/)[1]), time = time.slice(-2), time = ("PM" == time && hours < 12 && (hours += 12), "AM" == time && 12 == hours && (hours -= 12), hours.toString()), sMinutes = minutes.toString(), hours = (time = hours < 10 ? "0" + time : time) + ":" + (sMinutes = minutes < 10 ? "0" + sMinutes : sMinutes), time = $("<li/>", { "data-position": ind, class: "ui-timeselect-rev-opt" }), minutes = $("<div/>", { tabindex: -1, role: "option", class: "ui-menu-item-wrapper ui-timeselect-rev-opt-inner" }).text(item.label); return item.disabled && time.addClass("ui-state-disabled"), $select.val() === hours && time.addClass("ui-time-active"), time.append(minutes), time.appendTo(ul) } }), UI.props.$puTime.add(UI.props.$doTime).on("timeselectmenucreate", function (event, ui) { var $widget = $(this).timeselectmenu().timeselectmenu("instance"), $select = $widget.element, $menu = $widget.menu, $button = $widget.button, $wrap = $widget.menuWrap, _updatedVal = "pu" == $select.data("direction") ? _tempPuT : _tempDoT; $select.attr({ "aria-owns": $widget.menu.attr("id"), "aria-labelledby": $widget.button.attr("id") + "-label", "aria-autocomplete": "list", "aria-readonly": !0, role: "combobox" }), $menu.attr({ role: "listbox", tabindex: -1 }).addClass("ui-timeselect-rev-menu"), $button.attr({ "aria-controls": $menu.attr("id"), "aria-labelledby": $widget.button.attr("id") + "-label" }).addClass("ui-timeselect-trigger ui-timeselect-rev-button"), $wrap.addClass("ui-timeselect-menu"), $select.parent(".styled--select").removeClass("ui-ready-waiting"), $select.val(_updatedVal).timeselectmenu("refresh") }), UI.props.$puTime.add(UI.props.$doTime).on("timeselectmenuopen", function (event, ui) { var $widget = $(this).timeselectmenu().timeselectmenu("instance"), $select = $widget.element, $widget = $widget.menu, _selInd = $select.find("option:selected")[0].index + 1, _selInd = $widget.find("li:nth-child(" + _selInd + ")"); function tsTouchM(event) { $(event.target).is("[class*=ui-timeselect-rev]") ? event.stopPropagation() : ($("." + UI.props.modClass).each(function (ind, item) { return item.removeEventListener("touchmove", tsTouchM, { passive: !0 }) }), $select.timeselectmenu("close")) } return UI.props.modElement.addClass(UI.props.modClass), $("." + UI.props.modClass).each(function (ind, item) { return item.addEventListener("touchmove", tsTouchM, { passive: !0, capture: !0 }) }), $widget.animate({ scrollTop: _selInd.offset().top - $widget.offset().top + $widget.scrollTop() }) }), UI.props.$puTime.add(UI.props.$doTime).on("timeselectmenuclose", function (event, ui) { UI.props.modElement.removeClass(UI.props.modClass) }), UI.props.$puTime.add(UI.props.$doTime).on("timeselectmenuselect", function (event, ui) { for (var $widget = $(this).timeselectmenu().timeselectmenu("instance"), $select = $widget.element, $widget = $widget.menu, ui = ui.item, $selectPos = ui.index, ui = ui.value, $menuItems = $widget.find("li"), i = 0; i < $menuItems.length; i++) { var $mI = $($menuItems[i]); $mI.hasClass("ui-time-active") && $mI.removeClass("ui-time-active"), $mI.attr("data-position") == $selectPos && $mI.addClass("ui-time-active") } $select.val(ui) }), $.each(UI.props.$puTime.add(UI.props.$doTime), function (ind, obj) { $(obj).timeselectmenu({ appendTo: AE.ui.props.appendTarget, position: { my: "left top", at: "left bottom+3", collision: "none" }, icons: { button: "ui-timeselect-icon far fa-clock" } }).timeselectmenu("menuWidget").addClass("overflow") }) } }; return UI }(), (AE = AE || {}).ui.datepicker = AE.ui.datepicker || function () { "use strict"; var searchPuDate, searchDoDate, vouchDateTime = "undefined" != typeof oBKdateTime && !_.isEmpty(oBKdateTime) && oBKdateTime, UI = { init: function () { var GET_INPUTS = AE.ui.search.autocomplete.getInputs(); UI.props = { $puDate: GET_INPUTS.$puDate, $doDate: GET_INPUTS.$doDate, $hiddenPuDate: GET_INPUTS.$hiddenPuDate, $hiddenDoDate: GET_INPUTS.$hiddenDoDate, $puTime: GET_INPUTS.$puTime, $doTime: GET_INPUTS.$doTime, $hiddenPuTime: GET_INPUTS.$hiddenPuTime, $hiddenDoTime: GET_INPUTS.$hiddenDoTime, strDateFormat: $.datepicker._defaults.dateFormat, altFormat: "yy-mm-dd", currentWindowSize: AE.getSiteViewType(), responsiveNumMonthsToShow: { palm: 1, lap: 2, desk: 2, "desk-wide": 2 }, datepickerOptions: {}, isLeaseSearch: AE.ui.searchType.leasesearch && $(AE.ui.props.$aeSearch[0]).find("#locations-wrapper").hasClass("ae__lease_search"), isBMRSearch: !(!isBMRSearch || !AE.ui.searchType.bmr), oSubmit: AE.ui.search.getSubmitValues() }, UI.props.numberOfCalendarMonthsToShow = UI.checkCurrentWindowSize(AE.ui.search.$viewSize), UI.props.datepickerOptions = { _isOpen: !1, firstDay: $.datepicker._defaults.firstDat, changeMonth: "palm" === UI.props.currentWindowSize, changeYear: "palm" === UI.props.currentWindowSize, showAnim: "fadeIn", showOn: "button", buttonImage: "/plugins/ae3/themes/AE1/images/empty-pixel-datepicker-btn.png", buttonImageOnly: !1, buttonText: "", fixFocusIE: !1, dateFormat: UI.props.strDateFormat, onSelect: function (dateText, inst) { this.fixFocusIE = !0, $(this).change().focus(), UI.isPickupField("#" + inst.id) ? (UI.props.oSubmit.puCal = UI.convertDate(UI.props.$puDate), inst = UI.props.oSubmit.puCal + "T" + UI.props.$puTime.val(), UI.props.isBMRSearch && (inst = UI.props.oSubmit.puCal + "T05:00:00.000Z"), searchPuDate = new Date(inst), UI.setMinDropoffDate(), UI.isAfterPickup() || UI.setDropoffForward(UI.props.oSubmit.excl_ltr && AE.props.buyBackMin ? AE.props.buyBackMin : 3)) : (UI.props.oSubmit.doCal = UI.convertDate(UI.props.$doDate), inst = UI.props.oSubmit.doCal + "T" + UI.props.$doTime.val(), UI.props.isBMRSearch && (inst = UI.props.oSubmit.doCal + "T05:00:00.000Z"), searchDoDate = new Date(inst), UI.isAfterPickup() || UI.setMinDropoffDate(), UI.props.oSubmit.excl_ltr && UI.tooShortForLease() && (UI.setMinDropoffDate(), UI.setDropoffForward(UI.props.oSubmit.excl_ltr && AE.props.buyBackMin ? AE.props.buyBackMin : 3)), UI.props.isBMRSearch && UI.tooShortForBMR() && (UI.setMinDropoffDate(), UI.setDropoffForward(AE.props.bmrMin))) }, onClose: function (dateText, inst) { var $input = ("pickup-date" === inst.id ? UI.props.$puDate : UI.props.$doDate).datepicker(); AE.legacy.grief.isIE ? $($input.data("datepicker").trigger).on("click", function () { $input.datepicker("show") }) : $(this).trigger("touchend") }, beforeShow: function (input, inst) { var direction = $(input).data("direction"), newPuMin = ($(inst.dpDiv).attr("data-direction", direction), AE.ui.props.appendTarget && $(AE.ui.props.appendTarget).append(inst.dpDiv), new Date($(input).data("searchmindate"))), newPuMin = !!AE.ui.search.isValidDate(newPuMin) && new Date(newPuMin.getUTCFullYear(), newPuMin.getUTCMonth(), newPuMin.getUTCDate()).toISOString(), direction = (newPuMin && "pu" === direction && UI.props.$puDate.datepicker("option", { minDate: new Date(newPuMin) }), UI.repositionDatepickerArrow(input, inst), $(AE.ui.props.scrollContainer)[0].addEventListener("scroll", function () { UI.hideOnScrollMove(input) }, { passive: !0 }), !AE.legacy.grief.isIE || !this.fixFocusIE); return this.fixFocusIE = !1, direction }, beforeShowDay: UI.markDates }, UI.props.datepickerOptions.numberOfMonths = UI.props.numberOfCalendarMonthsToShow, UI.props.$puDate.add(UI.props.$doDate).datepicker(UI.props.datepickerOptions).on("touchend", function () { return $(this).trigger("blur") }), AE.addResizeTask({ func: function () { UI.manageResize() }, args: [] }), UI.mainSearch() }, mainSearch: function () { var _tempPuD, _tempDoD, _deeplinkPuD, _deeplinkDoD; searchPuDate = UI.props.$hiddenPuDate.val(), searchDoDate = UI.props.$hiddenDoDate.val(), _tempPuD = searchPuDate, _tempDoD = searchDoDate, vouchDateTime && (vouchDateTime.bkpudate && "" !== vouchDateTime.bkpudate && (_tempPuD = vouchDateTime.bkpudate), vouchDateTime.bkdodate) && "" !== vouchDateTime.bkdodate && (_tempDoD = vouchDateTime.bkdodate), _deeplinkPuD = UI.props.$hiddenPuDate.attr("data-deeplinkval"), void 0 !== (_deeplinkDoD = UI.props.$hiddenDoDate.attr("data-deeplinkval")) && !1 !== _deeplinkDoD && (_tempDoD = _deeplinkDoD), searchPuDate = "" !== (_tempPuD = void 0 !== _deeplinkPuD && !1 !== _deeplinkPuD ? _deeplinkPuD : _tempPuD) ? new Date(_tempPuD) : new Date, searchPuDate = new Date(searchPuDate.getUTCFullYear(), searchPuDate.getUTCMonth(), searchPuDate.getUTCDate()).toISOString(), searchDoDate = "" !== _tempDoD ? new Date(_tempDoD) : new Date, searchDoDate = new Date(searchDoDate.getUTCFullYear(), searchDoDate.getUTCMonth(), searchDoDate.getUTCDate()).toISOString(), UI.props.$puDate.datepicker("setDate", new Date(searchPuDate)), UI.props.$doDate.datepicker("setDate", new Date(searchDoDate)), UI.props.$puDate.parent(".styled--select").removeClass("ui-ready-waiting"), UI.props.$doDate.parent(".styled--select").removeClass("ui-ready-waiting"), UI.props.isBMRSearch && UI.tooShortForBMR() ? (UI.setMinDropoffDate(), UI.setDropoffForward(AE.props.bmrMin)) : UI.setMinDropoffDate() }, hideOnScrollMove: function (input) { input = $(input); return !!input.datepicker("widget").is(":visible") && (input.datepicker("hide"), AE.legacy.grief.isIE && input.on("click", function () { $(this).datepicker("show") }), $(AE.ui.props.scrollContainer)[0].removeEventListener("scroll", function () { UI.hideOnScrollMove() }, { passive: !0 })) }, disableWeekendSelection: function () { var minDate = UI.props.$puDate.datepicker("getDate"); switch (minDate.setDate(minDate.getDate() + AE.props.buyBackMin), minDate.getDay()) { case 0: minDate.setDate(minDate.getDate() + 1); break; case 6: minDate.setDate(minDate.getDate() + 2) }var minDoDate = $.datepicker.formatDate(UI.props.strDateFormat, new Date(minDate)); $(UI.props.$doDate).data("searchmindate", minDoDate), UI.props.$doDate.datepicker("option", { minDate: minDoDate }) }, markDates: function (date) { var $input = $(this)[0], _selectable = "pu" === $($input).data("direction"); return UI.highlightTripDates(date, $input, _selectable) }, highlightTripDates: function (date, input, selectable) { var _selectable = selectable, selectable = _selectable ? new Date(UI.props.$puDate.val()) : new Date(searchPuDate), doVal = _selectable ? new Date(UI.props.$doDate.val()) : new Date(searchDoDate), minDoDateRange = new Date(searchPuDate), markRange = UI.getDatesInRange(selectable, doVal), appliedClass = ""; UI.props.isLeaseSearch ? minDoDateRange.setDate(minDoDateRange.getDate() + AE.props.buyBackMin) : UI.props.isBMRSearch ? minDoDateRange.setDate(minDoDateRange.getDate() + 0) : minDoDateRange.setDate(minDoDateRange.getDate()); for (var i = 0; i < markRange.length; i++)if (date.getMonth() === markRange[i][0] && date.getDate() === markRange[i][1] && date.getUTCFullYear() === markRange[i][2]) return 0 !== i || UI.props.$doDate ? i === markRange.length - 1 ? [!0, appliedClass = "date-in-range date-range-end ui-date-highlight", $(UI.props.$doDate).attr("aria-label")] : (appliedClass = "date-in-range ui-date-highlight", new Date(minDoDateRange.getTime()) <= new Date(date.getTime()) && (_selectable = !0), UI.props.isLeaseSearch ? [_selectable, appliedClass] : [!0, appliedClass]) : [_selectable = !0, appliedClass = _selectable ? "date-in-range date-range-start ui-date-highlight" : "date-range-start", $(UI.props.$puDate).attr("aria-label")]; return [!0, appliedClass = "ui-date-highlight"] }, getDatesInRange: function (d0, d1) { for (var end = d1, currentDate = new Date(d0.getTime()), between = []; currentDate <= end;) { var newDate = new Date(currentDate); between.push([newDate.getMonth(), newDate.getDate(), newDate.getUTCFullYear()]), currentDate.setDate(currentDate.getDate() + 1) } return between }, isPickupField: function (selector) { return "pu" === $(selector).data("direction") }, setDate: function (name, value) { var timestamp = Date.parse(value); isNaN(timestamp) || (timestamp = new Date(value), "pickup-date" === name ? (UI.props.$puDate.datepicker("setDate", timestamp), UI.props.oSubmit.puCal = UI.convertDate(UI.props.$puDate)) : (UI.props.$doDate.datepicker("setDate", timestamp), UI.props.oSubmit.doCal = UI.convertDate(UI.props.$doDate))) }, checkCurrentWindowSize: function (size) { return UI.props.responsiveNumMonthsToShow[size] }, convertDate: function ($target) { return $.datepicker.formatDate(UI.props.altFormat, new Date($target.datepicker("getDate"))) }, setMinPickupDate: function () { var newPuMin = new Date(UI.props.$puDate.data("searchmindate")), moddedMinPuDate = !1; (moddedMinPuDate = AE.ui.search.isValidDate(newPuMin) ? new Date(newPuMin.getUTCFullYear(), newPuMin.getUTCMonth(), newPuMin.getUTCDate()).toISOString() : moddedMinPuDate) && UI.props.$puDate.datepicker("option", { minDate: new Date(moddedMinPuDate) }) }, setMinDropoffDate: function () { var _setPuDate = "" !== searchPuDate ? searchPuDate : UI.props.$puDate.datepicker("getDate"), _setPuDate = $.datepicker.formatDate(UI.props.strDateFormat, new Date(_setPuDate)), ltrDate = (UI.props.oSubmit.excl_ltr && AE.props.buyBackMin && (ltrDate = UI.props.$puDate.datepicker("getDate"), _setPuDate = $.datepicker.formatDate(UI.props.strDateFormat, new Date(ltrDate))), UI.props.$puDate.val(_setPuDate), UI.props.oSubmit.excl_ltr || UI.isAfterPickup() || UI.setDropoffForward(3), UI.props.oSubmit.excl_ltr && UI.tooShortForLease() && UI.setDropoffForward(AE.props.buyBackMin), UI.props.$puDate.datepicker("getDate")), overRideMinDoDate = !1, overRideMinDoDate = (UI.props.isBMRSearch && UI.tooShortForBMR() ? (ltrDate.setDate(ltrDate.getDate() + AE.props.bmrMin), overRideMinDoDate = !0) : UI.props.oSubmit.excl_ltr && (ltrDate.setDate(ltrDate.getDate() + AE.props.buyBackMin), overRideMinDoDate = !0), overRideMinDoDate ? ltrDate : _setPuDate); UI.props.$doDate.data("searchmindate", overRideMinDoDate), UI.props.$doDate.datepicker("option", { minDate: overRideMinDoDate }) }, setDropoffForward: function (daysToAdd) { var daysToAdd = daysToAdd || 3, tempDate = UI.props.$puDate.datepicker("getDate"), daysToAdd = (tempDate.setDate(tempDate.getDate() + daysToAdd), $.datepicker.formatDate(UI.props.strDateFormat, new Date(tempDate))); return UI.props.$doDate.datepicker("setDate", daysToAdd), !1 }, isAfterPickup: function () { var pickupDate = new Date($.datepicker.formatDate(UI.props.altFormat, UI.props.$puDate.datepicker("getDate")) + "T" + UI.props.$puTime.val()); return !(new Date($.datepicker.formatDate(UI.props.altFormat, UI.props.$doDate.datepicker("getDate")) + "T" + UI.props.$doTime.val()).getTime() < pickupDate.getTime()) }, tooShortForLease: function () { var minDropoffDate = UI.props.$puDate.datepicker("getDate"), dropoffDate = UI.props.$doDate.datepicker("getDate"), dropoffTime = "string" == typeof (dropoffTime = UI.props.$doTime.val()) ? dropoffTime.split(":") : ["0"]; return minDropoffDate.setDate(minDropoffDate.getDate() + AE.props.buyBackMin), minDropoffDate.setHours(dropoffTime[0], dropoffTime[1]), dropoffDate.setHours(dropoffTime[0], dropoffTime[1]), dropoffDate.getTime() < minDropoffDate.getTime() }, tooShortForBMR: function () { var BMRmin = AE.props.bmrMin, minDropoffDate = UI.props.$puDate.datepicker("getDate"), dropoffDate = UI.props.$doDate.datepicker("getDate"); return minDropoffDate.setDate(minDropoffDate.getDate() + BMRmin), dropoffDate.getTime() < minDropoffDate.getTime() }, repositionDatepickerArrow: function (input, inst) { var input = $(input), $widget = input.datepicker("widget"), inst = $(inst.dpDiv); return $(window).height() < parseInt(input.offset().top) + parseInt(input.outerHeight()) + parseInt($widget.outerHeight()) - parseInt($(document).scrollTop()) ? inst.addClass("reposition-arrow-above-input") : inst.removeClass("reposition-arrow-above-input") }, resizeDatepicker: function () { UI.props.currentWindowSize = AE.getSiteViewType(), UI.props.$puDate.add(UI.props.$doDate).datepicker("hide").datepicker("destroy").blur(), UI.props.numberOfCalendarMonthsToShow = UI.checkCurrentWindowSize(UI.props.currentWindowSize), UI.props.datepickerOptions.numberOfMonths = UI.props.numberOfCalendarMonthsToShow, UI.props.$puDate.add(UI.props.$doDate).datepicker(UI.props.datepickerOptions).on("touchend", function () { return $(this).trigger("blur") }), UI.props.$puDate.datepicker("option", { minDate: new Date }), UI.setMinPickupDate(), UI.props.$doDate.datepicker("option", { minDate: UI.props.$puDate.datepicker("getDate") }) }, manageResize: function () { return UI.resizeDatepicker() } }; return UI }(), (AE = AE || {}).ui.searchType = AE.ui.searchType || function () { "use strict"; var UI = { init: function () { UI.props = { $siteCode: AE.props.siteCode, $viewSize: AE.getSiteViewType(), $menusearchEnabled: !1, LTRLondonSelected: !1, _searchControllerLocation: "/plugins/ae3/lib/searchController.cfc", _searchControllerMethods: { textsearch: "textsearch", textsearchPrefill: "textsearchPrefill", textsearchCityLocs: "textsearchCityLocs", menusearchCountryList: "getLocalizedCountries", menusearchCityList: "getLocalizedCities", get_operatorIdListByCountry: "getOperatorIDsByCountry", get_operatorIdListByCity: "getOperatorIDsByCity", get_countriesActiveBySitecode: "getCountriesActiveBySitecode", sClick: "incrementHubClick" } }, UI.props.$menusearchEnabled = prepMenusearch, AE.ui.timeselectmenu && AE.ui.timeselectmenu.init(), AE.ui.datepicker && AE.ui.datepicker.init(), "palm" == AE.getSiteViewType() && AE.ui.devices && AE.ui.devices.init(), UI.mainSearch() }, mainSearch: function () { isLTRSearch || isBMRSearch || (AE.ui.searchType.text && AE.ui.searchType.text.init(), AE.ui.searchType.menu && UI.props.$menusearchEnabled && AE.ui.searchType.menu.init()), isLTRSearch && AE.ui.searchType.leasesearch && AE.ui.searchType.leasesearch.init(), isBMRSearch && AE.ui.searchType.bmr && AE.ui.searchType.bmr.init() }, _toggleAccordions: function (activeAccordion) { var $disableAccordions = $(".ui-textsearch-accordion").not(activeAccordion); activeAccordion.addClass("ui-textsearch-accordion-active"), $disableAccordions.not(activeAccordion).removeClass("ui-textsearch-accordion-active ui-state-active"), $disableAccordions.not(activeAccordion).accordion({ collapsible: !0, active: !1 }), activeAccordion.accordion({ collapsible: !1, active: 0 }), UI._scrollToTopOfContainer(activeAccordion) }, _scrollToTopOfContainer: function (target) { var $menu = target.closest(".ui-textsearch-accordion-list"), _customOffset = 1 == $menu.find(".ui-textsearch-accordion").length ? 70 : 35; return $menu.animate({ scrollTop: target.offset().top - $menu.offset().top + $menu.scrollTop() - _customOffset }) }, _scrollToListTop: function (dl) { return dl.stop().animate({ scrollTop: 0 }, 500) }, _throwWarningFlag: function (input, title, msg, pos, newClass) { return input.addClass("ui--invalid-input"), AE.ui.search.searchFormErrorHandler.init(title, msg, pos, newClass) }, _updateInputValue: function (input, str) { var $clearButton = input.textsearch().textsearch("instance").targetActionButton, _direction = input.data("direction"), _hasSetValue = "" != str, $fn_getInputs = AE.ui.search.autocomplete.getInputs(), $puLoc = $fn_getInputs.$puLoc, $doLoc = $fn_getInputs.$doLoc, $fn_getInputs = $fn_getInputs.$chkDiff; return AE.props.isIE || input.data("placeholderVal", input.attr("data-placeholder")), _hasSetValue ? (input.data({ hasVal: _hasSetValue, savedVal: str }), "pu" == _direction && $doLoc.data({ hasVal: _hasSetValue, savedVal: str })) : (input.data({ hasVal: _hasSetValue, savedVal: "pu" == _direction ? input.attr("data-placeholder-static") : $puLoc.attr("data-placeholder") }), "pu" == _direction && ($("#locations-wrapper").removeClass("both"), $fn_getInputs.prop("checked", !1), $doLoc.data({ hasVal: _hasSetValue, savedVal: $doLoc.attr("data-placeholder-static") }))), $fn_getInputs = _hasSetValue ? input.data("savedVal") : input.attr("data-placeholder-static"), input.attr("data-placeholder", $fn_getInputs), "pu" == _direction && $doLoc.attr("data-placeholder", $fn_getInputs).text(""), $puLoc.text() == $doLoc.text() && $doLoc.attr("data-placeholder", $puLoc.data("savedVal")).text(""), $clearButton.is(":visible") || "palm" == AE.getSiteViewType() || $clearButton.show().removeClass(input.data("hasVal") ? "rotate-scale-out-center" : "rotate-scale-in-center").addClass(input.data("hasVal") ? "rotate-scale-in-center" : "rotate-scale-out-center"), input.data("hasVal") || setTimeout(function () { "palm" != AE.getSiteViewType() && $clearButton.hide() }, 500), input.text(_hasSetValue ? str : ""), UI._forceInputBlur(input) }, _clearInput: function (input) { return UI._updateInputValue(input, !1, "") }, _forceInputBlur: function (input) { return 1 <= window.devicePixelRatio && "/my-booking/" !== AE.url.props.path && input.focus().blur(), input.trigger("blur") }, _cursorToEndOfString: function (input) { var range, selection; $(input).text(), input.childNodes.length; document.createRange ? ((range = document.createRange()).selectNodeContents(input), range.collapse(!1), (selection = window.getSelection()).removeAllRanges(), selection.addRange(range)) : document.selection && ((range = document.body.createTextRange()).moveToElementText(input), range.collapse(!1), range.select()) }, _objHoverHelper: function (obj, toggleClass) { var $toggleClass = toggleClass || "ui-state-hover"; return obj.on("mouseenter", function () { return $(this).addClass($toggleClass) }).on("mouseleave", function () { return $(this).removeClass($toggleClass) }) }, _hideDeviceKeyboard: function () { return $("input").blur(), !1 } }; return UI }() } (AE = AE || {}).ui.searchType.text = AE.ui.searchType.text || function () { "use strict"; var _fetchPuCityName, _fetchPuIso, _fetchPuCategory, _fetchDoCityName, _fetchDoIso, _fetchDoCategory, vouchDateTime = "undefined" != typeof oBKdateTime && !_.isEmpty(oBKdateTime) && oBKdateTime, AFFILIATE_NAME = "undefined" != typeof affiliateName ? affiliateName : "AUTOEUROPE", DISPLAY_TOP_COUNTRIES = "undefined" == typeof returnTopCountries || returnTopCountries, DISPLAY_TOP_CITIES = "undefined" == typeof returnTopCities || returnTopCities; if (vouchDateTime) for (var i in vouchDateTime) i = vouchDateTime[i] || "", vouchDateTime = !_.isEmpty(i) && vouchDateTime; var UI = { init: function () { var GET_INPUTS = AE.ui.search.autocomplete.getInputs(); UI.props = { $puLoc: GET_INPUTS.$puLoc, _puLocHasData: !1, $doLoc: GET_INPUTS.$doLoc, _doLocHasData: !1, $tempDoDataHolder: {}, $chkDiff: GET_INPUTS.$chkDiff, $arr_isoCountryList: "undefined" != typeof activatedCountries ? activatedCountries : {}, _textsearchPrefillObj: { pu: { chaos_city_name: "undefined" != typeof searchPuCity && searchPuCity, chaos_country_code: "undefined" != typeof searchPuCountry && searchPuCountry, category: "undefined" != typeof searchPuCategory && searchPuCategory }, drop: { chaos_city_name: "undefined" != typeof searchDoCity && searchDoCity, chaos_country_code: "undefined" != typeof searchDoCountry && searchDoCountry, category: "undefined" != typeof searchDoCategory && searchDoCategory } }, msg_pickupFirst: $("#locations-wrapper").data("pufirst"), msg_inputEmpty: $("#locations-wrapper").data("inputempty"), _LAUNCH_MENUSEARCH: !1, _DISPLAY_ALPHA_LIST: !0, _READY_TO_CLOSE: !1, _OVERRIDE_MENU_ANIMATION: !1, _DISPLAY_COUNTRY_LIST: !1, _DISPLAY_COUNTRY_CITIES_LIST: !1, $RES_OBJ_FOR_BOOKING: { pu: !1, drop: !1 }, _activeMenu: null, _shadeStyle: {} }, $.extend(UI.props, AE.ui.searchType.props), UI.props._LAUNCH_MENUSEARCH = UI.props.$menusearchEnabled, UI.props._LAUNCH_MENUSEARCH || AE.ui.addBodyClickTask({ func: UI.onBodyClick }), AE.addResizeTask({ func: function (event) { UI.manageResize(event) }, args: [{ pu: UI.props.$puLoc, do: UI.props.$doLoc }] }), UI.mainSearch() }, mainSearch: function () { var PREFILL_STORAGE_STR = !!(AE.ui.search.useStoredSearch() && !vouchDateTime) && localStorage.getItem("aeSearch"), USE_PAGE_PREFILL = "undefined" != typeof searchPuCity && ("" != searchPuCity || "" != searchPuOAG), USE_STORED_SEARCH = 0 != PREFILL_STORAGE_STR, $CF_SEARCH_CONTROLLER_REF = (USE_PAGE_PREFILL && (USE_STORED_SEARCH = !1), UI.props._searchControllerLocation), $CF_SEARCH_METHOD = UI.props._searchControllerMethods, OPERATOR_ID_LIST_TO_FILTER_DO = [], PREVENT_INPUT_BLUR = !1, TRY_PREFILL_PICKUP = !1, TRY_PREFILL_DROPOFF = !1, _alphaList = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], $ui_badge = $("<span/>").attr({ class: "ui-textsearch-badge" }), $ui_textsearchMenuFooter = $("<footer/>", { class: "ui-textsearch-menu-footer" }), USE_PAGE_PREFILL = $("<button/>", { class: "ui-textsearch-btn-sm ui-textsearch-scroll-btn", role: "button" }), $button_back_to_list = $("<button/>", { class: "ui-textsearch-btn-med", role: "button" }), $button_reset_input = $("<button/>", { class: "ui-textsearch-btn-med", role: "button" }), $textsearchAccordionHead = $("<a/>", { class: "ui-textsearch-accordion-head" }), $textsearchAccordionBody = $("<dl/>", { class: "ui-textsearch-accordion-body" }), _CNT = "COUNTRY", _APT = "AIRPORT", _ATERM = "AIRPORT_TERMINAL--ITEM", _hubCases = { AIRPORT: { icon: "fa-plane", behavior: !1 }, "AIRPORT_TERMINAL--ITEM": { icon: "fa-angle-right", behavior: !1 } }; _hubCases[_ATERM.replace("--ITEM", "--LIST")] = { icon: "fa-plane", behavior: !1 }, _hubCases.RAIL = { icon: "fa-train", behavior: !1 }, _hubCases.FERRY = { icon: "fa-ship", behavior: !1 }, _hubCases.OTHER = { icon: "fa-map-pin", behavior: !1 }, _hubCases.CITY = { icon: "fa-map-marker", behavior: !1 }, _hubCases.ERROR = { icon: "fa-exclamation-triangle", behavior: !1 }, _hubCases.TOP = { icon: "fa-star", behavior: !1 }, "FCR" == AE.props.siteCode && (_hubCases[_APT] = { icon: "fcr-flight", iconType: "", behavior: !1 }, _hubCases[_ATERM] = { icon: "fcr-chevron-right", iconType: "", behavior: !1 }, _hubCases[_ATERM.replace("--ITEM", "--LIST")] = { icon: "fcr-flight", iconType: "", behavior: !1 }, _hubCases.RAIL = { icon: "fcr-train", iconType: "", behavior: !1 }, _hubCases.CITY = { icon: "fcr-place", iconType: "", behavior: !1 }, _hubCases.FERRY = { icon: "fcr-boat", iconType: "", behavior: !1 }, _hubCases[_CNT] = { icon: "fcr-nearby", iconType: "", behavior: !1 }, _hubCases.OTHER = { icon: "fcr-place", iconType: "", behavior: !1 }), USE_PAGE_PREFILL.html('<i class="fa fa-chevron-up"></i>'), $ui_textsearchMenuFooter.append(USE_PAGE_PREFILL), UI.props.$chkDiff.on("change", function (event) { var $btn = $(this), _checked = $btn.is(":checked"); if (UI.props.$menusearchEnabled) _checked || $("#locations-wrapper .dropoff-wrapper .trg__menusearch--country-x").click(); else { if (0 == UI.props.$RES_OBJ_FOR_BOOKING.pu) return $("#locations-wrapper").removeClass("both"), $btn.prop("checked", !1), AE.ui.searchType._throwWarningFlag(UI.props.$puLoc, UI.props.msg_pickupFirst, UI.props.msg_inputEmpty, { top: 50, left: 50 }, "arrow-left"); _checked || (AE.ui.searchType._updateInputValue(UI.props.$doLoc, ""), UI.props.$RES_OBJ_FOR_BOOKING.drop = !1, AE.ui.search.autocomplete.setValue(UI.props.$RES_OBJ_FOR_BOOKING)) } }), $.widget("custom.textsearch", $.ui.autocomplete, { _create: function (event, ui) { this._super(), this.menu = $("<dl/>").hide().appendTo(this._appendTo()).menu({ role: null }).menu("instance"), this.element.data("input", this.element).addClass("ui-textsearch-input"), this.element.menu().data("menu", this.menu), this.widget().menu("option", "items", ".ui-menu-item, > :not(.ui-menu-item-error, .ui-menu-item-disabled, .ui-textsearch-label, .ui-textsearch-category, .ui-textsearch-accordion-wrapper, .ui-accordion-header, .ui-textsearch-error-msg-title, .ui-textsearch-error-msg)").addClass("ui-textsearch"), this.menu.activeMenu = this.widget().menu() }, _sortHubsToDisplay: function (dl, direction, items, addClass) { var i, j, n, $arr_items = [], _addClassToListItem = addClass, $arr_hubArrays = { COUNTRY: [], AIRPORT: [], "AIRPORT_TERMINAL--ITEM": [], RAIL: [], FERRY: [], OTHER: [], ERROR: [], CITY: [] }; for (i in items) { var _loc = items[i], _type = _loc.category || "ERROR"; "INVISIBLE" != _type && $arr_hubArrays[_type] && $arr_hubArrays[_type].push(_loc) } for (j in $arr_hubArrays[_ATERM] = AE.utils._sortPropByAlphaInArray($arr_hubArrays[_ATERM], "display_label"), $arr_hubArrays) { var hType = j; if (0 != $arr_hubArrays[j].length && j != _ATERM) { var k, _hubArray = AE.utils._sortPropByAlphaInArray($arr_hubArrays[j], "click_count").reverse(); for (k in _hubArray = AE.utils._removeDuplicateObjectsFromArray(_hubArray, "display_label")) { var _locToDisplay = _hubArray[k]; if (hType == _APT && 0 != $arr_hubArrays[_ATERM].length) { var l, m, chaos_hub_id = _locToDisplay.chaos_hub_id, association_array = []; for (l in $arr_hubArrays[_ATERM]) association_array.push($arr_hubArrays[_ATERM][l].parent_hub_id); for (m in -1 == $arr_items.indexOf(_locToDisplay) && (-1 != association_array.indexOf(chaos_hub_id) && (_locToDisplay.category += "_TERMINAL--LIST"), $arr_items.push(_locToDisplay)), $arr_hubArrays[_ATERM]) { var _terminal = $arr_hubArrays[_ATERM][m]; (_terminal.parent_hub_id || 0) == chaos_hub_id && $arr_items.push(_terminal) } } else -1 == $arr_items.indexOf(_locToDisplay) && $arr_items.push(_locToDisplay) } } } for (n in $arr_items) this._renderItemData(dl, $arr_items[n]).addClass(_addClassToListItem); return !1 }, _renderMenu: function (dl, items) { var _breakTopLocsAt, _dt, $widget = this, $input = this.element, $menu = dl, _direction = $input.data("direction"), $items = items, dl = $("<h1/>").addClass("ui-textsearch-shade-header-title"), $input = $ui_badge.clone().addClass("ui--badge-total-locations"), $icon_menu_item = $("<i/>", { "aria-hidden": !0 }), _addClassToListItem = ""; if ($menu.empty(), UI.props._DISPLAY_ALPHA_LIST && !AE.props.isIE && $widget._buildListIndexHelper($menu, "destroy"), $items = UI.props._DISPLAY_COUNTRY_LIST || UI.props._DISPLAY_COUNTRY_CITIES_LIST ? ($menu.addClass("ui-textsearch-accordion-list"), AE.utils._sortPropByAlphaInArray(items, "sequence")) : AE.utils._sortPropByAlphaInArray(items, "click_count").reverse(), UI.props._DISPLAY_COUNTRY_LIST) { if (_addClassToListItem = "ui-menu-item", DISPLAY_TOP_COUNTRIES) { var i, j, $arr_topCountries = []; for (i in $items) "--" == $items[i].chaos_country_code && (_breakTopLocsAt = $items[i].sequence); for (j in $items) { var $newCountryLoc = $items[j]; $newCountryLoc.sequence < _breakTopLocsAt && ($newCountryLoc.click_count = "TOP", $arr_topCountries.push($newCountryLoc)) } $items.splice(0, _breakTopLocsAt), $.each($arr_topCountries, function (index, item) { $widget._renderItemData($menu, item).addClass(_addClassToListItem + " ui-top-location").uniqueId() }) } $.each($items, function (index, item) { $widget._renderItemData($menu, item).addClass(_addClassToListItem).uniqueId() }), $menu.removeClass("ui-textsearch-hide-flags") } else if (UI.props._DISPLAY_COUNTRY_CITIES_LIST) if ($menu.addClass("ui-textsearch-hide-flags"), _addClassToListItem = $menu.hasClass("ui-textsearch-accordion-body") ? "ui-menu-item" : "ui-menu-item fa-override-icon", $menu.hasClass("ui-textsearch-accordion-body")) $widget._sortHubsToDisplay($menu, _direction, $items, _addClassToListItem); else { var _chaosCountryCode = $items[0].chaos_country_code || !1, _listTitle = $items[0].country_label || !1; if (DISPLAY_TOP_CITIES) { var k, l, $arr_topCities = []; for (k in $items) "--" == $items[k].chaos_country_code && (_breakTopLocsAt = $items[k].sequence); for (l in $items) { var $newLoc = $items[l]; $newLoc.sequence < _breakTopLocsAt && ($newLoc.click_count = "TOP", $arr_topCities.push($newLoc)) } $items.splice(0, _breakTopLocsAt), $.each($arr_topCities, function (index, item) { _dt = $widget._renderItemData($menu, item).addClass(_addClassToListItem + " ui-top-location").uniqueId(), _dt.attr("id") }) } $.each($items, function (index, item) { _dt = $widget._renderItemData($menu, item).addClass(_addClassToListItem).uniqueId(), _dt.attr("id") }) } else _addClassToListItem = "", $.each($items, function (index, item) { var $arr_sub_locations = item.locations, master_click_count = item.click_count, master_display_label = item.display_label, master_category = item.category, master_city_name = item.chaos_city_name || !1, master_chaos_country_code = item.chaos_country_code || "NO", $number_matches_badge = $ui_badge.clone().addClass("ui--badge-locations").text($arr_sub_locations.length); if ("ERROR" == master_category) return $widget._renderMenuErrorNoMatches($menu, item); master_chaos_country_code = master_chaos_country_code.trim(), _dt = $("<dt/>").attr({ "aria-label": master_city_name, "data-weight": master_click_count, "data-country-code": master_chaos_country_code, role: "separator" }).addClass("ui-textsearch-category").text(master_display_label).uniqueId(), master_category != _CNT && _dt.append($number_matches_badge), _dt.appendTo($menu), _dt.attr("id"), $widget._sortHubsToDisplay($menu, _direction, $arr_sub_locations, _addClassToListItem) }), items = $menu.find("dd").not(".ui-textsearch-error-msg").length, items += 1 != items ? " " + matchPlural : " " + matchSingular, $input.text(items), dl.text(txtInitialheader), _dt = $("<dt/>").addClass("ui-textsearch-label").attr({ role: "menubar" }).append(dl, $input).prependTo($menu), $menu.removeClass("ui-textsearch-hide-flags"); UI.props._DISPLAY_COUNTRY_LIST && (dl.text(txtPUheader), _dt = $("<dt/>").addClass("ui-textsearch-label").attr({ role: "menubar" }).append(dl).uniqueId(), "do" == _direction && (dl.text(txtDOheader), $button_reset_input.prependTo($menu), $icon_menu_item.addClass("fas fa-sync right"), $button_reset_input.text(txtSameAsPu).addClass("ui-reset-input").append($icon_menu_item), _dt.append($button_reset_input), AE.ui.searchType._objHoverHelper($button_reset_input)), _dt.prependTo($menu), _dt.attr("id")), UI.props._DISPLAY_COUNTRY_CITIES_LIST && !UI.props._DISPLAY_COUNTRY_LIST && ($icon_menu_item.addClass("fa fa-chevron-left left"), $button_back_to_list.text(txtAllCountries).addClass("ui-back-to-list").prepend($icon_menu_item), dl.addClass("ui-menu-item-wrapper").text(_listTitle), $menu.hasClass("ui-textsearch-accordion-body") || ((_dt = $("<dt/>").attr({ role: "menubar", "data-country-code": _chaosCountryCode }).addClass("ui-textsearch-label").append(dl, $button_back_to_list).uniqueId()).prependTo($menu), _dt.attr("id"), AE.ui.searchType._objHoverHelper($button_back_to_list))), UI.props._DISPLAY_ALPHA_LIST && !AE.props.isIE && (UI.props._DISPLAY_COUNTRY_CITIES_LIST || UI.props._DISPLAY_COUNTRY_LIST) && !$menu.hasClass("ui-textsearch-accordion-body") && 10 < $items.length && $widget._buildListIndexHelper($menu, "init"); var _headers = $menu.find("dt"), items = $menu.find("dd.ui-top-location"); $(items[items.length - 1]).addClass("last"); for (var m = 0; m < _headers.length; m++) { var _newID = $(_headers[m]).attr("id"); "undefined" != _newID && $("#" + _newID).nextUntil("dt", "dd:odd").addClass("odd") } $menu.find("dd.ui-textsearch-error-msg").length && $input.hide(), AE.props.isIE || $widget._scrollMenu($menu) }, _renderMenuErrorNoMatches: function (dl, item) { var _message = (_message = warnNoLocationsSpecific).replace(/[+/'::REQUEST::/'+'\[\]']+/g, '<mark class="ui-textsearch-highlight">' + item.label + "<mark/>"), item = $("<dt/>").attr({ class: "ui-textsearch-error-msg-title" }), _message = $("<dd/>").attr({ class: "ui-textsearch-error-msg" }).html(_message); dl.append(item, _message) }, _renderItem: function (dl, item) { var icon_style, icon_type, $icon_menu_item = $("<i/>").attr({ "aria-hidden": !0, class: "fa pull-right" }), $itemWrapper = $("<div/>").attr({ tabindex: -1, class: "ui-menu-item-wrapper" }), $item = item, _category = $item.category, _chaosCountryCode = $item.chaos_country_code, item_click_count = $item.click_count, item = item.display_label, _chaosCountryCode = $("<dd/>", { "aria-label": item, "data-weight": item_click_count, "data-category": _category, "data-country-code": _chaosCountryCode, role: "menuitem" }).append($itemWrapper); return _hubCases[_category] && (icon_style = _hubCases[_category].icon), icon_type = void 0 === icon_type && "FCR" != AE.props.siteCode ? "NA" : _hubCases[_category].iconType, "TOP" == item_click_count && (icon_style = _hubCases[item_click_count].icon), "FCR" == AE.props.siteCode && ($icon_menu_item = "flight" === _hubCases[_category].iconType ? $("<i>" + icon_type + "</i>").attr({ "aria-hidden": !0, class: "display-none fcr-text_search_icon pull-right fcr-rotate45" }) : $("<i>" + icon_type + "</i>").attr({ "aria-hidden": !0, class: "display-none fcr-text_search_icon pull-right" })), $itemWrapper.text(item).append($icon_menu_item.addClass(icon_style)), "COUNTRY" == _category && _chaosCountryCode.css("display", "none"), -1 != _category.indexOf("_TERMINAL--LIST") ? (_chaosCountryCode.addClass("ui-menu-item-disabled").attr({ "aria-disabled": !0 }), $itemWrapper.data("initialContent", $itemWrapper.html()), _chaosCountryCode.on("mouseenter", function () { var originalheight = $itemWrapper.height(); return $itemWrapper.height(originalheight), $itemWrapper.text("select a terminal below").append($icon_menu_item.addClass("fa-level-down")) }).on("mouseleave", function () { return $itemWrapper.html($itemWrapper.data("initialContent")) })) : "ERROR" == _category ? _chaosCountryCode.addClass("ui-menu-item-error").removeClass("ui-menu-item") : _chaosCountryCode.data("iObj", $item), _chaosCountryCode.appendTo(dl) }, _populateMenusearchCountryList: function (dl) { var $widget = this, $menu = dl, dl = $widget.element.data("direction"); return $.ajax({ url: $CF_SEARCH_CONTROLLER_REF, dataType: "json", data: { method: $CF_SEARCH_METHOD.menusearchCountryList, returnTopCountries: DISPLAY_TOP_COUNTRIES, affiliateName: AFFILIATE_NAME, operator_id_list: "pu" == dl ? "" : OPERATOR_ID_LIST_TO_FILTER_DO }, success: function (data) { $widget._renderMenu($menu, data) } }), AE.ui.searchType._scrollToListTop($menu) }, _populateMenusearchCityList: function (dl, item, country) { var $widget = this, $menu = dl, dl = item, item = $widget.element.data("direction"), dl = dl.chaos_country_code; return $.ajax({ url: $CF_SEARCH_CONTROLLER_REF, dataType: "json", data: { method: $CF_SEARCH_METHOD.menusearchCityList, chaos_country_code: dl, returnTopCities: DISPLAY_TOP_CITIES, affiliateName: AFFILIATE_NAME, operator_id_list: "pu" == item ? "" : OPERATOR_ID_LIST_TO_FILTER_DO }, success: function (data) { var i, $arr_matchedLocations = []; for (i in data) { var cityListing = data[i]; cityListing.country_label = country, $arr_matchedLocations.push(cityListing) } $widget._renderMenu($menu, $arr_matchedLocations) } }), AE.ui.searchType._scrollToListTop($menu) }, _operatorIdListByCity: function (chaos_city_id) { return $.getJSON($CF_SEARCH_CONTROLLER_REF, { method: $CF_SEARCH_METHOD.get_operatorIdListByCity, chaos_city_id: chaos_city_id }).done(function (data) { return data }) }, _operatorIdListByCountry: function (chaos_country_id) { return $.getJSON($CF_SEARCH_CONTROLLER_REF, { method: $CF_SEARCH_METHOD.get_operatorIdListByCountry, chaos_country_id: chaos_country_id }).done(function (data) { return data }) }, _scrollMenu: function (dl) { var $menu = dl; $menu.on("scroll", function () { return $(this).scrollTop() < 100 && $menu.hasClass("scrolling") && $menu.removeClass("scrolling"), 100 < $(this).scrollTop() && !$menu.hasClass("scrolling") && $menu.addClass("scrolling"), !1 }) }, _buildListIndexHelper: function (dl, callback) { var $arrAlphaHelper = [], $elemArr = [], $items = dl.find("dd:not(.ui-top-location)"), $displayList = $("<aside/>", { class: "ui-textsearch-alpha-index-helper", role: "navigation" }), $list = $("<ul/>", { class: "ui-textsearch-alpha-index-list" }), $listItem = $("<li/>", { class: "ui-textsearch-alpha-index-list-item" }); if ("init" != callback) return "destroy" == callback && 0 < (callback = $(dl.parent(".ui-textsearch-menu-wrapper").find(".ui-textsearch-alpha-index-helper")[0])).length && callback.remove(); for (var j, i = 0; i < $items.length; i++) { var $item = $items[i], _startsWith = $($item).text().toUpperCase().substring(0, 1); -1 == $arrAlphaHelper.indexOf(_startsWith) && ($arrAlphaHelper.push(_startsWith), $elemArr.push($item)) } for (j in _alphaList) { var _charPosition, _ind = _alphaList[j], $entry = $listItem.clone().text(_ind).uniqueId(); -1 != $arrAlphaHelper.indexOf(_ind) ? (_charPosition = $arrAlphaHelper.indexOf(_ind), _charPosition = $($elemArr[_charPosition]), $entry.attr({ "aria-controls": _charPosition.attr("id"), "data-value": _ind }).addClass("ui-state-available")) : $entry.attr({ "data-value": _ind }), $list.append($entry) } 0 == dl.parent(".ui-textsearch-menu-wrapper").find(".ui-textsearch-alpha-index-helper").length && ($displayList.append($list), $displayList.insertBefore(dl)), AE.ui.searchType._objHoverHelper($(".ui-textsearch-alpha-index-list-item")) }, _setMenuItemAccordion: function (target, chaosCityId, chaosCityName, chaosCountryCode) { var $menu, $widget = this, _direction = $(this.element).data("direction"), $accordionContainer = $(target), target = $accordionContainer.find(".ui-menu-item-wrapper"), _doAccordionInit = !$accordionContainer.hasClass("ui-textsearch-accordion"), $activeAccordion = (AE.ui.searchType._objHoverHelper($textsearchAccordionHead), target.addClass("ui-show-flag"), $accordionContainer); return _doAccordionInit ? ($menu = $textsearchAccordionBody.uniqueId(), $accordionContainer.addClass("ui-textsearch-accordion"), target.wrap($textsearchAccordionHead), $accordionContainer.append($menu), $textsearchAccordionHead.attr({ "aria-owns": $menu.attr("id") }), $.ajax({ url: $CF_SEARCH_CONTROLLER_REF, dataType: "json", data: { method: $CF_SEARCH_METHOD.textsearchCityLocs, chaos_city_id: chaosCityId, affiliateName: AFFILIATE_NAME, operator_id_list: "pu" == _direction ? "" : OPERATOR_ID_LIST_TO_FILTER_DO }, success: function (data) { var i, $arr_matchedLocations = []; for (i in data) { var j, $item = data[i]; for (j in Object.keys($item)) { var k, locations = $item[j].locations; for (k in locations) { var location = locations[k], locCity = location.chaos_city_name || !1, locCCC = location.chaos_country_code || !1; locCity && locCity.toUpperCase() == chaosCityName.toUpperCase() && location.category != _CNT && locCCC && locCCC.toUpperCase() == chaosCountryCode.toUpperCase() && $arr_matchedLocations.push(location) } } } return $arr_matchedLocations.length || ($arr_matchedLocations[0] = { category: "ERROR", chaos_city_name: "", chaos_country_code: "", chaos_hub_id: "", city_hub_list: [], click_count: 0, country_label: "", desk_list: "", display_label: warnNoLocationsVague, hubtype_id: 0, iata: "", oag: "", operator_id_list: [], title: "" }), $arr_matchedLocations = AE.utils._removeDuplicateObjectsFromArray($arr_matchedLocations, "display_label"), $widget._renderMenu($menu, $arr_matchedLocations), $accordionContainer.accordion({ header: $textsearchAccordionHead, active: 0, collapsible: !1, animate: !0, heightStyle: "content", create: function (event, ui) { return AE.ui.searchType._toggleAccordions($activeAccordion) } }) } })) : AE.ui.searchType._toggleAccordions($activeAccordion) }, _resizeWidgetMenu: function (menu) { var i, $menuStyle = menu.attr("style"), $shadeStyleObj = {}; for (i in $menuStyle = $menuStyle.split(";")) { var _prop, _style = $menuStyle[i].split(":"); void 0 !== _style[1] && (_prop = _style[0].trim(), _style = _style[1].trim(), $shadeStyleObj[_prop] = _style) } return delete $shadeStyleObj.position, delete $shadeStyleObj.top, delete $shadeStyleObj.display, $shadeStyleObj }, _customTextsearchFnHandler: function (event, ui) { event.preventDefault ? event.preventDefault() : event.returnValue = !1; var evType = event.type, $widget = $(event.target).textsearch().textsearch("instance"), $input = $widget.element, $menu = $widget.menu.element, _direction = $input.data("direction"), $wrap = $(".ui-textsearch-menu-wrapper[data-direction=" + _direction + "]"), $clearButton = $widget.targetActionButton; switch (evType) { case "textsearchopen": return $wrap.attr({ "aria-expanded": !0, "data-open": !0 }).addClass("ui-front ui-display-absolute-block opening"), UI.props._activeMenu = $wrap, "palm" != AE.getSiteViewType() && $clearButton.show().removeClass("rotate-scale-out-center").addClass("rotate-scale-in-center"), UI.props._shadeStyle = $widget._resizeWidgetMenu($menu), _direction == $wrap.attr("data-direction") && $wrap.css(UI.props._shadeStyle).removeClass("scale-out-ver-top fade-out"), "FCR" == AE.props.siteCode ? $wrap.position({ my: "left top", at: "left-10 bottom", of: $input, collision: "none" }) : $wrap.position({ my: "left top", at: "left bottom", of: $input, collision: "none" }), $menu.css({ top: 0, left: 0 }), AE.ui.searchType._scrollToListTop($menu), UI.props._LAUNCH_MENUSEARCH && $wrap.css("width", $input.outerWidth()), 0 == $wrap.has($menu).length && $wrap.attr("data-direction") == $menu.attr("data-direction") && $wrap.prepend($menu), 0 == $(AE.ui.props.appendTarget).has($wrap).length && $wrap.appendTo(AE.ui.props.appendTarget), void $wrap.addClass("scale-in-ver-top"); case "textsearchclose": return $wrap.removeClass("scale-in-ver-top fs-menu fade-out").addClass(UI.props._OVERRIDE_MENU_ANIMATION ? "fade-out" : "scale-out-ver-top"), "palm" == AE.getSiteViewType() || $input.data("hasVal") || $clearButton.addClass("rotate-scale-out-center").removeClass("rotate-scale-in-center"), UI.props._OVERRIDE_MENU_ANIMATION = !1, setTimeout(function () { $input.data("hasVal") || "palm" == AE.getSiteViewType() || $clearButton.hide(), $wrap.attr({ "aria-expanded": !1, "data-open": !1 }).removeClass("ui-display-absolute-block") }, 500); case "textsearchenable": return void $input.removeClass("ui-state-disabled").attr({ contentEditable: !0 }); case "textsearchdisable": return void $input.addClass("ui-state-disabled").attr({ contentEditable: !1 }) } } }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchcreate", function (event, ui) { var CHECK_PU_CITY, CHECK_DO_ISO, CHECK_DO_CITY, $item = {}, $this = $(this), $widget = $this.data("customTextsearch"), _hasVal = $this.data("hasVal"), _savedVal = $this.data("savedVal"), _hasVal = _hasVal ? _savedVal : $this.attr("data-placeholder-static"), _savedVal = $this.data("customTextsearch").element.attr({ role: "textbox", "data-placeholder": _hasVal }), _direction = _savedVal.data("direction"), _hasVal = $("<div/>").attr({ class: "ui-textsearch-menu-wrapper", id: "pu" == _direction ? "pickup-search-wrapper" : "dropoff-search-wrapper", "data-direction": _direction, role: "dialog", "aria-expanded": !1, "data-open": !1 }), $this = $this.data("customTextsearch").menu.element.attr({ role: "menu", "data-direction": _direction }).wrap(_hasVal), $menuFooter = $ui_textsearchMenuFooter.clone(), $icon_clear_input = $("<i/>", { class: "ui-textsearch-clear-icon fa", "aria-hidden": !0 }), $button_target_input = $("<button/>", { class: "ui-textsearch-btn-sm ui-textsearch-target-input", role: "button", title: AE.props.oSearch.TXT_CLEAR_INPUT, "data-direction": _direction, tabindex: -1 }), $ev = (AE.ui.searchType._objHoverHelper(_savedVal), $.Event("select")), $menuFooter = (this._isOpen = !1, $widget.wrapper = _hasVal, $widget.targetActionButton = $button_target_input, $menuFooter.insertAfter($this), ("palm" == AE.getSiteViewType() ? $button_target_input.append($icon_clear_input) : $button_target_input.append($icon_clear_input).hide()).insertAfter(_savedVal), UI.props._DISPLAY_ALPHA_LIST && !AE.props.isIE && (UI.props._DISPLAY_COUNTRY_CITIES_LIST || UI.props._DISPLAY_COUNTRY_LIST) && $this.addClass("ui-append-list-index-helper"), $("ul.ui-autocomplete").remove(), _hasVal = "palm" == AE.getSiteViewType() ? "fa-times-circle fa-2" : "fa-times fa-2", $icon_clear_input.addClass(_hasVal), "palm" != AE.getSiteViewType() && AE.ui.searchType._objHoverHelper($button_target_input), "pu" == _direction), _savedVal = "do" == _direction, $this = {}, $icon_clear_input = {}, _hasVal = ""; return USE_STORED_SEARCH ? ($this = !!($button_target_input = "string" == typeof PREFILL_STORAGE_STR && JSON.parse(PREFILL_STORAGE_STR)) && $button_target_input.pu, $icon_clear_input = !!$button_target_input && $button_target_input.drop, TRY_PREFILL_DROPOFF = TRY_PREFILL_PICKUP = !1, PREFILL_STORAGE_STR && !$button_target_input.excl_ltr && (TRY_PREFILL_PICKUP = $this && $menuFooter, TRY_PREFILL_DROPOFF = $icon_clear_input && _savedVal), $button_target_input.excl_ltr && ($this && !$this.display_label && ($this.display_label = $this.chaos_city_name + " Leasing Locations"), $icon_clear_input) && !$icon_clear_input.display_label && ($icon_clear_input.display_label = $icon_clear_input.chaos_city_name + " Leasing Locations")) : (_hasVal = ($button_target_input = UI.props._textsearchPrefillObj).pu.chaos_country_code, CHECK_PU_CITY = $button_target_input.pu.chaos_city_name, _fetchPuIso = _hasVal = "UK" === _hasVal ? "GB" : _hasVal, _fetchPuCityName = CHECK_PU_CITY, _fetchPuCategory = $button_target_input.pu.category, TRY_PREFILL_PICKUP = !0, CHECK_DO_ISO = $button_target_input.drop.chaos_country_code, CHECK_DO_CITY = $button_target_input.drop.chaos_city_name, "" != CHECK_DO_ISO && "" != CHECK_DO_CITY && !(CHECK_DO_ISO == _hasVal && CHECK_DO_CITY == CHECK_PU_CITY) && (_fetchDoIso = CHECK_DO_ISO, _fetchDoCityName = CHECK_DO_CITY, _fetchDoCategory = $button_target_input.drop.category, TRY_PREFILL_DROPOFF = !0)), TRY_PREFILL_PICKUP && $menuFooter && ($item = USE_STORED_SEARCH && PREFILL_STORAGE_STR ? $this : { display_label: _fetchPuCityName, chaos_country_code: _fetchPuIso, oag: searchPuOAG, category: _fetchPuCategory }), TRY_PREFILL_DROPOFF && _savedVal && ($item = USE_STORED_SEARCH && PREFILL_STORAGE_STR ? $icon_clear_input : { display_label: _fetchDoCityName, chaos_country_code: _fetchDoIso, oag: searchDoOAG, category: _fetchDoCategory }), USE_STORED_SEARCH && PREFILL_STORAGE_STR ? $widget._trigger("select", $ev, { type: "textsearchselect", item: $item }) : $.getJSON($CF_SEARCH_CONTROLLER_REF, { method: $CF_SEARCH_METHOD.textsearchPrefill, city: $item.display_label, countrycode: $item.chaos_country_code, oag: $item.oag }).done(function (data) { return "pu" == _direction ? (UI.props._puLocHasData = !0, $widget._trigger("select", $ev, { type: "textsearchselect", item: data.pickupLocation })) : "do" == _direction && UI.props._puLocHasData ? (UI.props._doLocHasData = !0, $widget._trigger("select", $ev, { type: "textsearchselect", item: data.pickupLocation })) : "do" != _direction || UI.props._puLocHasData ? void 0 : UI.props.$tempDoDataHolder = data }) }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchopen", function (event, ui) { if (UI.props._LAUNCH_MENUSEARCH) { if (UI.props._READY_TO_CLOSE) return } else if (this._isOpen) return; return this._isOpen = !0, UI.props._READY_TO_CLOSE = !1, $(this).textsearch().textsearch("instance")._customTextsearchFnHandler(event, ui) }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchclose", function (event, ui) { if (this._isOpen && UI.props._READY_TO_CLOSE) return this._isOpen = !1, UI.props._READY_TO_CLOSE = !0, $(this).textsearch().textsearch("instance")._customTextsearchFnHandler(event, ui) }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchenable", function (event, ui) { return $(this).textsearch().textsearch("instance")._customTextsearchFnHandler(event, ui) }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchdisable", function (event, ui) { return $(this).textsearch().textsearch("instance")._customTextsearchFnHandler(event, ui) }), UI.props.$puLoc.add(UI.props.$doLoc).on("textsearchsearch", function (event, ui) { var _dialog, $input = $(this).data("customTextsearch").element, $menu = $(this).data("customTextsearch").menu.element, _inDialog = $("body").find(".ui-dialog"); UI.props._READY_TO_CLOSE = !1, UI.props._OVERRIDE_MENU_ANIMATION = !1, 0 != _inDialog.length && (_dialog = AE.ui.dialog.instance()).on("dialogclose", function (event, ui) { return _dialog.off("dialogclose"), UI.props._READY_TO_CLOSE = !0, UI.props._OVERRIDE_MENU_ANIMATION = !0, $input.textsearch("close") }), AE.ui.searchType._scrollToListTop($menu) }), UI.props.$puLoc.add(UI.props.$doLoc).textsearch({ delay: 0, minLength: 3, appendTo: AE.ui.props.appendTarget, autoFill: !0, source: function (request, response) { var _request = request.term, _direction = this.element.data("direction"); $.ajax({ type: "GET", url: $CF_SEARCH_CONTROLLER_REF, dataType: "json", data: { method: $CF_SEARCH_METHOD.textsearch, criteria: _request, affiliateName: AFFILIATE_NAME, operator_id_list: "pu" == _direction ? "" : OPERATOR_ID_LIST_TO_FILTER_DO }, success: function (data) { var data = data.locations, gaActionString = "ERROR" != (data = Object.keys(data).length ? data : [{ display_label: "No matches found", label: response.term, value: request.term, category: "ERROR", click_count: 0, locations: {} }])[0].category ? "searchFormLoadSuccess" : "searchFormLoadError"; return AE.ga.gaArrayProcess([{ GACATEGORY: "carTextSearch", GAACTION: gaActionString, GALABEL: _request }]), response(data) } }) }, select: function (event, ui) { if (UI.props._DISPLAY_COUNTRY_LIST = !1, UI.props._DISPLAY_COUNTRY_CITIES_LIST = !1, void 0 === ui.item || !Object.keys(ui.item).length) return !1; var $widget = $(this).textsearch().textsearch("instance"), $input = $(this).data("customTextsearch").element, $menu = $(this).data("customTextsearch").menu.element, event = event || window.event, ui = ui.item, _direction = $input.data("direction"), displayLabel = ui.display_label, category = ui.category, chaosCityName = ui.chaos_city_name, chaosCountryCode = ui.chaos_country_code, countryLabel = ui.country_label, chaosCityId = ui.chaos_city_id || !1, _triggerCountryList = category == _CNT, _triggerCityList = "CITY-EXPANDABLE" == category, operatorIdList = ui.operator_id_list, event = event.currentTarget, addCogToListItem = "false" == $(event).attr("data-city"); if (ui.loc_type = category, PREVENT_INPUT_BLUR = _triggerCountryList || _triggerCityList, addCogToListItem && $(event).find(".ui-menu-item-wrapper i").addClass("fa-cog fa-spin"), PREVENT_INPUT_BLUR) { if (UI.props._READY_TO_CLOSE = !1, UI.props._DISPLAY_COUNTRY_LIST = !1, UI.props._DISPLAY_COUNTRY_CITIES_LIST = !0, _triggerCountryList) return $widget._populateMenusearchCityList($menu, ui, category == _CNT ? countryLabel : ""); if (_triggerCityList) return $widget._setMenuItemAccordion(event, chaosCityId, chaosCityName, chaosCountryCode) } return "pu" == _direction ? (OPERATOR_ID_LIST_TO_FILTER_DO = operatorIdList, UI.props.$RES_OBJ_FOR_BOOKING.pu = ui, UI.props.$RES_OBJ_FOR_BOOKING.drop = !1) : "do" == _direction && (UI.props.$RES_OBJ_FOR_BOOKING.drop = ui, addCogToListItem = !1, _.has(UI.props.$RES_OBJ_FOR_BOOKING, "pu") && (_.has(UI.props.$RES_OBJ_FOR_BOOKING.pu, "display_label") ? addCogToListItem = UI.props.$RES_OBJ_FOR_BOOKING.pu.display_label : _.has(UI.props.$RES_OBJ_FOR_BOOKING.pu, "locations") && (addCogToListItem = UI.props.$RES_OBJ_FOR_BOOKING.pu.locations.display_label || !1)), _triggerCountryList = !1, _triggerCountryList = (_triggerCountryList = void 0 === ui.loc_type ? ui.chaos_city_name || !1 : ui.display_label || ui.locations.display_label) || !1, (addCogToListItem = !(addCogToListItem = addCogToListItem || !1) && searchPuCity && "" !== searchPuCity ? searchPuCity : addCogToListItem) == (_triggerCountryList = !_triggerCountryList && searchDoCity && "" !== searchDoCity ? searchDoCity : _triggerCountryList) && (UI.props.$RES_OBJ_FOR_BOOKING.drop = !1), _triggerCountryList) && addCogToListItem != _triggerCountryList && !UI.props.$chkDiff.is(":checked") && UI.props.$chkDiff.trigger("click"), UI.props._READY_TO_CLOSE = !0, UI.props._OVERRIDE_MENU_ANIMATION = !1, AE.ui.searchType._updateInputValue($input, displayLabel), "do" != _direction || UI.props.$RES_OBJ_FOR_BOOKING.drop || AE.ui.searchType._updateInputValue($input, ""), AE.ui.search.autocomplete.setValue(UI.props.$RES_OBJ_FOR_BOOKING), $input.textsearch("close"), $("#grab-focus").trigger("focus"), AE.ga.gaArrayProcess([{ GACATEGORY: "carTextSearch", GAACTION: "searchFormSelect", GALABEL: "CITY" == ui.loc_type ? "ALL Downtown" : ui.loc_type }]), UI.props.$RES_OBJ_FOR_BOOKING.drop || AE.ga.gaArrayProcess([{ GACATEGORY: "carSearch", GAACTION: "oneWaySelect" }]), "pu" == _direction && UI.props._puLocHasData && !UI.props._doLocHasData && UI.props.$tempDoDataHolder.hasOwnProperty("pickupLocation") ? (($menu = $.Event("select")).target = UI.props.$doLoc, UI.props._doLocHasData = !0, $widget._trigger("select", $menu, { type: "textsearchselect", item: UI.props.$tempDoDataHolder.pickupLocation })) : void 0 } }), UI.props.$puLoc.add(UI.props.$doLoc).on("keydown", function (event) { var _updateTextString, input = event.target; return 32 !== (event.charCode || event.keyCode || 0) || (_updateTextString = (_updateTextString = input.innerHTML.replace(/<br\s*\/?>/gi, "") + "&nbsp;").replace("&nbsp;&nbsp;", "&nbsp;"), _updateTextString = encodeURIComponent(_updateTextString), event.preventDefault ? event.preventDefault() : event.returnValue = !1, event.originalEvent.returnValue = !0, _updateTextString = decodeURIComponent(_updateTextString), input.innerHTML = _updateTextString, AE.ui.searchType._cursorToEndOfString(input)) }).on("input", function (event) { event = $(event.target).data("direction"); return UI.props._DISPLAY_COUNTRY_LIST = !1, UI.props._DISPLAY_COUNTRY_CITIES_LIST = !1, !("do" == event && !UI.props.$puLoc.data("hasVal")) || (UI.props.$doLoc.text(""), UI.props.$puLoc.trigger("customFocus")) }).on("focus", function (event) { return UI.props._DISPLAY_COUNTRY_LIST = !1, UI.props._DISPLAY_COUNTRY_CITIES_LIST = !1, UI.props._LAUNCH_MENUSEARCH = !1, (AE.legacy.grief.whichIE.isIE9 || AE.legacy.grief.whichIE.isIE10) && $(this).addClass("hide-cursor-ie-patch"), event.stopPropagation(), $(this).trigger("customFocus") }).on("blur", function (event) { return event.stopPropagation(), $(this).trigger("customBlur") }).on("customFocus", function (event) { var pukeycount, dokeycount, $input = $(event.target), _direction = $input.data("direction"); if ($input.addClass("ui-state-focus"), $input.attr({ "data-placeholder": $input.data("savedVal"), tabindex: 0 }), "palm" == AE.getSiteViewType()) { if ($input.hasClass("ui-state-disabled")) return event.preventDefault ? event.preventDefault() : event.returnValue = !1, event.stopPropagation(), !1; "FCR" !== AE.props.siteCode ? AE.ui.devices._show($input) : (pukeycount = 0, $('div[name^="pickup-wrapper"]').keydown(function () { var $container, $scrollTo; 1 === (pukeycount += 1) && ($container = $("div"), $scrollTo = $('div[name^="pickup-input_text_wrapper"]'), $container.scrollTop($scrollTo.offset().top - $container.offset().top + $container.scrollTop()), $("#scroll-content").css("overflow", "hidden"), $("#pickup-search-wrapper").css("max-height", "200px"), $("#pickup-search-wrapper").css("overflow", "scroll")) }), $('div[name^="pickup-wrapper"]').click(function () { pukeycount = 0 }), dokeycount = 0, $('div[name^="dropoff-wrapper"]').keydown(function () { var $container, $scrollTo; 1 === (dokeycount += 1) && ($container = $("div"), $scrollTo = $('div[name^="dropoff-input_text_wrapper"]'), $container.scrollTop($scrollTo.offset().top - $container.offset().top + $container.scrollTop()), $("#scroll-content").css("overflow", "hidden"), $("#dropoff-search-wrapper").css("max-height", "200px"), $("#dropoff-search-wrapper").css("overflow", "scroll")) }), $('div[name^="dropoff-wrapper"]').click(function () { dokeycount = 0 }), $("body").click(function () { $("#scroll-content").css("overflow", ""), $("#pickup-search-wrapper").css("max-height", ""), $("#pickup-search-wrapper").css("overflow", ""), $("#scroll-content").css("overflow", ""), $("#dropoff-search-wrapper").css("max-height", ""), $("#dropoff-search-wrapper").css("overflow", "") })) } if ($input.data("hasVal") && $input.text(""), $input.attr({ "data-placeholder": "" == $input.attr("data-placeholder") ? $input.attr("data-placeholder-static") : $input.data("savedVal") }), "do" == _direction && !UI.props.$puLoc.data("hasVal")) return $input.attr({ "data-placeholder": $input.attr("data-placeholder-static") }), AE.ui.searchType._throwWarningFlag($input, UI.props.msg_pickupFirst, UI.props.msg_inputEmpty, { top: 50, left: -5 }, "arrow-left") }).on("customBlur", function (event) { var $input = $(event.target), _direction = $input.data("direction"); if (PREVENT_INPUT_BLUR) return event.stopPropagation(), $input.trigger("customFocus"); "palm" == AE.getSiteViewType() && UI.props._READY_TO_CLOSE && AE.ui.devices._hide($input), $input.removeClass("ui-state-focus"), $input.data("hasVal") ? $input.text($input.data("savedVal")) : $input.text(""), $input.attr({ "data-placeholder": "" == $input.attr("data-placeholder") ? $input.attr("data-placeholder-static") : $input.data("savedVal"), tabindex: -1 }), "do" == _direction && UI.props.$puLoc.text() == UI.props.$doLoc.text() && $input.text("") }) }, onBodyClick: function (event, target) { var dontClose, $target = $(target), $wrap = $(".ui-textsearch-menu-wrapper[aria-expanded=true]"), _direction = (0 != $wrap.length ? $wrap : $target).attr("data-direction"), $input = "pu" == _direction ? UI.props.$puLoc : UI.props.$doLoc, $widget = $input.data("customTextsearch"), $menu = $widget.menu.element, isBtn = "button" == $target.prop("tagName").toLowerCase(), isTextsearchInput = $target.hasClass("ui-textsearch-input"), isTextsearchMenuItem = $target.parent("dd").is("[role=menuitem]"), isInputResetBtn = $target.hasClass("ui-reset-input"), isScrollToTopBtn = $target.hasClass("ui-textsearch-scroll-btn"), isBackToListBtn = $target.hasClass("ui-back-to-list"), isTargetInputBtn = $target.hasClass("ui-textsearch-target-input"), isAlphaListHelperBtn = $target.hasClass("ui-textsearch-alpha-index-list-item"); if ((isBtn && (isInputResetBtn || isBackToListBtn || isScrollToTopBtn || isTargetInputBtn) || isAlphaListHelperBtn || isTextsearchMenuItem) && (event.preventDefault ? event.preventDefault() : event.returnValue = !1), isTextsearchInput && (dontClose = $wrap.data("direction") == $target.data("direction")), isBtn) { if (isInputResetBtn) return $input = UI.props.$doLoc, AE.ui.searchType._updateInputValue($input, ""), UI.props.$RES_OBJ_FOR_BOOKING.drop = !1, UI.props._READY_TO_CLOSE = !0, UI.props._OVERRIDE_MENU_ANIMATION = !1, AE.ui.search.autocomplete.setValue(UI.props.$RES_OBJ_FOR_BOOKING), $input.textsearch("close"); if (isBackToListBtn) return UI.props._DISPLAY_COUNTRY_LIST = !0, $widget._populateMenusearchCountryList($menu); if (isScrollToTopBtn) return AE.ui.searchType._scrollToListTop($menu); if (isTargetInputBtn) return UI.props.$RES_OBJ_FOR_BOOKING = "pu" == _direction ? { pu: !1, drop: !1 } : { pu: UI.props.$RES_OBJ_FOR_BOOKING.pu, drop: !1 }, UI.props._LAUNCH_MENUSEARCH ? (UI.props._READY_TO_CLOSE = !1, $input.textsearch("open")) : (UI.props._READY_TO_CLOSE = !0, UI.props._OVERRIDE_MENU_ANIMATION = !1, AE.ui.searchType._clearInput($input), "pu" == _direction && UI.props.$doLoc.textsearch().textsearch("instance").targetActionButton.hide(), $input.textsearch("close")), AE.ui.search.autocomplete.setValue(UI.props.$RES_OBJ_FOR_BOOKING) } else if (isAlphaListHelperBtn) return isBtn = $(target).attr("aria-controls"), isInputResetBtn = $("#" + isBtn), AE.ui.searchType._scrollToTopOfContainer(isInputResetBtn); return isTextsearchMenuItem ? (isScrollToTopBtn = (isBackToListBtn = $target.parent("dd")).data("iObj"), $menu = event || window.event, (isTargetInputBtn = $.Event($menu)).target = isBackToListBtn, isTargetInputBtn.currentTarget = isBackToListBtn, $widget._trigger("select", isTargetInputBtn, { type: "textsearchselect", item: isScrollToTopBtn })) : dontClose || UI.props._activeMenu && target && $wrap.length && UI.props._activeMenu.has(target).length ? isTextsearchInput && (UI.props._LAUNCH_MENUSEARCH || !UI.props._LAUNCH_MENUSEARCH && !AE.props.isIE) ? (UI.props._DISPLAY_COUNTRY_LIST = !0, UI.props._DISPLAY_COUNTRY_CITIES_LIST = !0, $target.trigger("customFocus")) : void 0 : (UI.props._OVERRIDE_MENU_ANIMATION = !target.is("[class^=ui-textsearch]"), UI.props._READY_TO_CLOSE = !0, $input.textsearch("close")) }, manageResize: function (event) { var $wrap = $(".ui-textsearch-menu-wrapper[aria-expanded=true]") || UI.props._activeMenu, $input = "pu" == $wrap.attr("data-direction") ? UI.props.$puLoc : UI.props.$doLoc, $viewSize = AE.getSiteViewType(); return "palm" === $viewSize && AE.ui.searchType.props.$viewSize !== $viewSize && location.reload(), !!$wrap.length && (UI.props._OVERRIDE_MENU_ANIMATION = !0, UI.props._READY_TO_CLOSE = !0, $input.textsearch("close")) } }; return UI }(), (AE = AE || {}).ui.searchType.menu = AE.ui.searchType.menu || function () { "use strict"; if (vouchDateTime = "undefined" != typeof oBKdateTime && !_.isEmpty(oBKdateTime) && oBKdateTime) for (var i in vouchDateTime) var i = vouchDateTime[i] || "", vouchDateTime = !_.isEmpty(i) && vouchDateTime; var UI = { init: function () { UI.props = { cfcRef: "/plugins/ae3/lib/searchController.cfc", oPrefill: { PU: { ran: !1, country: "", city: "", loclist: "" }, DO: { ran: !1, country: "", city: "", loclist: "" }, OW: { city: !1, country: !1 } }, inModify: !1, $do: $('div[name="dropoff-wrapper"].menusearch'), $chkDiffs: $("input.chk-diff-linked") }, UI.props.$chkDiffs.prop("checked", !1), $("#toggleeNewSearch")[0] && (UI.props.inModify = !0), UI.state = { synchingChkDiff: !1, operator_id_list: "", PU: { country: "", city: "", loc: "", cities: {}, hubs: [] }, DO: { country: "", city: "", loc: "", cities: {}, hubs: [] }, OW: { country: !1, city: !1 } }, $("#locations-wrapper .menusearch").css("paddingLeft", "3px"), $("#locations-wrapper .menusearch label.location-label").css("marginLeft", "-3px"), $("#locations-wrapper .menusearch .menusearch--container .styled--select select option").removeClass("visuallyhidden"), AE.ui.addBodyChangeTask({ func: UI.onBodyChange }), AE.ui.addBodyClickTask({ func: UI.onBodyClick }), UI.prefill() }, menuSearchSelectInit: function ($target) { var oProps = { direction: $target.attr("name").substring(0, 2), splitID: $target.attr("id").split("_"), value: $target.val(), display_label: $target.val(), selectType: "", ID: 0, baseID: $target.attr("id") }, $selected = (1 < oProps.splitID.length && (oProps.selectType = oProps.splitID[0], oProps.baseID = oProps.splitID[1]), null === oProps.value && (oProps.value = UI.props.oPrefill[oProps.direction][oProps.selectType], $target.hasClass("trg__menusearch--city")) && (oProps.value = UI.state[oProps.direction].cities[oProps.value] || "--"), $($target).find('option[value="' + oProps.value + '"]')); return oProps.display_label = $selected.html(), oProps.ID = $selected.attr("id"), $("#" + oProps.baseID + " .ui-state-invalid").removeClass("ui-state-invalid"), "PU" === oProps.direction && "country" !== oProps.selectType && (UI.state.operator_id_list = $selected.data("opid-list")), null !== oProps.value && (UI.state[oProps.direction][oProps.selectType] = oProps.value || ""), UI.props.oPrefill[oProps.direction].ran && UI.clearInput(oProps.direction, $target), $target.hasClass("trg__menusearch--loc") || ("" !== UI.state.PU.country && "" !== UI.state.DO.country && UI.state.PU.country !== UI.state.DO.country && (UI.state.OW.country = !0), "" !== UI.state.PU.city && "" !== UI.state.DO.city && UI.state.PU.city !== UI.state.DO.city && (UI.state.OW.city = !0), (UI.state.OW.country || !UI.state.OW.country && UI.state.OW.city) && "" !== UI.state.DO.loc && UI.checkTheOneWayBox()), oProps }, handleCountryMenuSelect: function ($target) { var oProps = UI.menuSearchSelectInit($target); $.ajax({ url: UI.props.cfcRef, dataType: "json", data: { method: "getLocalizedCities", chaos_country_code: oProps.value, returnTopCities: AEdata.returnTopCities, affiliateName: AEdata.affiliateName, operator_id_list: "PU" !== oProps.direction && UI.state.operator_id_list || "" }, beforeSend: function () { UI.resetInput("country", oProps.direction, oProps.baseID) }, success: function (data) { var $citySelect = $("#city_" + oProps.baseID), $df = $(document.createDocumentFragment()), _baseId = (UI.props.$chkDiffs.prop("checked") && "DO" == oProps.direction && "country" == oProps.selectType && (searchPuCity = ""), _.each(data, function (tempCity) { UI.state[oProps.direction].cities[tempCity.chaos_city_name] = tempCity.chaos_city_id, tempCity.hasOwnProperty("optgroup") && tempCity.optgroup ? $df.append($("<option disabled>" + tempCity.display_label + "</option>", { label: tempCity.display_label })) : $df.append($("<option/>", { id: tempCity.chaos_city_id + "-" + tempCity.chaos_city_name + oProps.direction, value: tempCity.chaos_city_id, "data-opid-list": tempCity.operator_id_list, html: tempCity.display_label, selected: "" != searchPuCity && tempCity.chaos_city_name.toUpperCase() == searchPuCity.toUpperCase() && tempCity.chaos_city_name })) }), $target.closest(".menusearch--container").attr("id")); $("#city_" + _baseId).change(), 0 == data.length && $target.val("--"), UI.state[oProps.direction].city = "", $citySelect.empty().append($("<option/>", { value: "--", html: AEdata.menuPrompts[oProps.direction].CITY }), $df), $("#loc_" + oProps.baseID).empty().append($("<option/>", { value: "--", html: AEdata.menuPrompts[oProps.direction].HUB })), UI.props.oPrefill[oProps.direction].ran || ("DO" !== oProps.direction || UI.props.oPrefill.OW.country || !UI.props.oPrefill.OW.country && UI.props.oPrefill.OW.city ? ($citySelect.val(UI.state[oProps.direction].cities[UI.props.oPrefill[oProps.direction].city.toUpperCase()] || "--"), $citySelect.change()) : UI.props.oPrefill[oProps.direction].ran = !0) } }) }, handleCityMenuSelect: function ($target) { var oProps = UI.menuSearchSelectInit($target), $locSelect = $("#loc_" + oProps.baseID), locPrompt = AEdata.menuPrompts[oProps.direction].HUB; "--" !== oProps.value ? $.ajax({ url: UI.props.cfcRef, dataType: "json", data: { method: "textsearchCityLocs", sitecode: AE.props.siteCode, affiliateName: AEdata.affiliateName, chaos_city_id: oProps.value, oag: searchPuOAG, operator_id_list: "PU" === oProps.direction ? "" : UI.state.operator_id_list }, beforeSend: function () { UI.resetInput("city", oProps.direction, oProps.baseID) }, success: function (data) { data.locations = data.locations || {}; var groupedHubs, aMissingParentHubs, labelHtmlTxt, $airHubs, $railHubs, $ferryHubs, $cityHubs, compareLocList, compareLocId, $df = $(document.createDocumentFragment()), data = data.locations[0] || {}, activatedHubs = []; (activatedHubs = data && data.locations && data.locations.length ? _.filter(data.locations, function (tempLoc) { return !_.isEmpty(tempLoc.desk_list.toString()) }) : activatedHubs).length ? (UI.state[oProps.direction].hubs = _.sortBy(activatedHubs, function (tempLoc) { return tempLoc.click_count }).reverse(), groupedHubs = _.groupBy(UI.state[oProps.direction].hubs, "category"), aMissingParentHubs = [], groupedHubs["AIRPORT_TERMINAL--ITEM"] && (groupedHubs.TERMINALS = _.groupBy(groupedHubs["AIRPORT_TERMINAL--ITEM"], "parent_hub_id"), _.each(_.keys(groupedHubs.TERMINALS), function (tempKey) { aMissingParentHubs.push(Number(tempKey)) }), aMissingParentHubs = _.difference(aMissingParentHubs, _.pluck(groupedHubs.AIRPORT, "chaos_hub_id"))), groupedHubs.AIRPORT && (labelHtmlTxt = AE.ui.decodeHtml(AEdata.hubLabels.AIRPORT), $airHubs = $("<optgroup/>", { label: labelHtmlTxt }), $df.append($airHubs), $airHubs.attr("label", decodeURI(labelHtmlTxt)), _.each(groupedHubs.AIRPORT, function (tempAirHub) { groupedHubs.TERMINALS && groupedHubs.TERMINALS[tempAirHub.chaos_hub_id] ? _.each(groupedHubs.TERMINALS[tempAirHub.chaos_hub_id], function (tempTerminal) { $airHubs.append($("<option/>", { id: tempTerminal.chaos_hub_id, value: tempTerminal.desk_list, "data-opid-list": tempTerminal.operator_id_list, html: tempTerminal.display_label })) }) : $airHubs.append($("<option/>", { id: tempAirHub.chaos_hub_id, value: tempAirHub.desk_list, "data-opid-list": tempAirHub.operator_id_list, html: tempAirHub.display_label })) }), aMissingParentHubs.length) && _.each(aMissingParentHubs, function (tempParentID) { _.each(groupedHubs.TERMINALS[tempParentID], function (tempTerminal) { $airHubs.append($("<option/>", { id: tempTerminal.chaos_hub_id, value: tempTerminal.desk_list, "data-opid-list": tempTerminal.operator_id_list, html: tempTerminal.display_label })) }) }), aMissingParentHubs.length && !groupedHubs.AIRPORT && (labelHtmlTxt = AE.ui.decodeHtml(AEdata.hubLabels.AIRPORT), $airHubs = $("<optgroup/>", { label: labelHtmlTxt }), $df.append($airHubs), _.each(aMissingParentHubs, function (tempParentID) { _.each(groupedHubs.TERMINALS[tempParentID], function (tempTerminal) { $airHubs.append($("<option/>", { id: tempTerminal.chaos_hub_id, value: tempTerminal.desk_list, "data-opid-list": tempTerminal.operator_id_list, html: tempTerminal.display_label })) }) })), groupedHubs.RAIL && (labelHtmlTxt = AE.ui.decodeHtml(AEdata.hubLabels.RAIL), $railHubs = $("<optgroup/>", { label: labelHtmlTxt }), $df.append($railHubs), _.each(groupedHubs.RAIL, function (tempRailHub) { $railHubs.append($("<option/>", { id: tempRailHub.chaos_hub_id, value: tempRailHub.desk_list, "data-opid-list": tempRailHub.operator_id_list, html: tempRailHub.display_label })) })), groupedHubs.FERRY && (labelHtmlTxt = AE.ui.decodeHtml(AEdata.hubLabels.FERRY), $ferryHubs = $("<optgroup/>", { label: labelHtmlTxt }), $df.append($ferryHubs), _.each(groupedHubs.FERRY, function (tempFerryHub) { $ferryHubs.append($("<option/>", { id: tempFerryHub.chaos_hub_id, value: tempFerryHub.desk_list, "data-opid-list": tempFerryHub.operator_id_list, html: tempFerryHub.display_label })) })), groupedHubs.CITY && (labelHtmlTxt = AE.ui.decodeHtml(AEdata.hubLabels.CITY), $cityHubs = $("<optgroup/>", { label: labelHtmlTxt }), $df.append($cityHubs), _.each(groupedHubs.CITY, function (tempCityHub) { $cityHubs.append($("<option/>", { id: tempCityHub.chaos_hub_id, value: tempCityHub.desk_list, "data-opid-list": tempCityHub.operator_id_list, html: tempCityHub.display_label })) }))) : locPrompt = warnNoLocationsVague || "-----", $locSelect.empty().append($("<option/>", { value: "--", html: locPrompt }), $df), !UI.props.oPrefill[oProps.direction].ran && _.has(AEdata, "menuPrefill") && _.has(AEdata.menuPrefill, "LOCLIST") && _.has(AEdata.menuPrefill, "DOLOCLIST") && ("DO" !== oProps.direction || UI.props.oPrefill.OW.country || !UI.props.oPrefill.OW.country && UI.props.oPrefill.OW.city) && (compareLocList = ("DO" !== oProps.direction ? AEdata.menuPrefill.LOCLIST : AEdata.menuPrefill.DOLOCLIST).toString(), compareLocId = "DO" !== oProps.direction ? AE.ui.search.getStoredSearch().puchaos_hub_id : AE.ui.search.getStoredSearch().dochaos_hub_id, (data = _.filter($locSelect.find("optgroup option"), function (thisOption) { var thisLocList = $(thisOption).attr("value"), thisLocList = _.intersection(thisLocList.split(","), compareLocList.split(",")), thisOption = void 0 === thisOption ? 0 : thisOption.getAttribute("id"); return 0 != thisOption ? compareLocId == thisOption : 0 < thisLocList.length }))[0]) && ($locSelect.val(data[0].value), $locSelect.change()), UI.props.oPrefill[oProps.direction].ran = !0 } }) : $locSelect.empty().append($("<option/>", { value: "--", html: locPrompt })) }, handleLocMenuSelect: function ($target) { var oHub, $target = UI.menuSearchSelectInit($target); "--" !== $target.value && "" !== $target.value && (oHub = { chaos_hub_id: (oHub = _.findWhere(UI.state[$target.direction].hubs, { chaos_hub_id: Number($target.ID) })).chaos_hub_id, chaos_city_name: oHub.chaos_city_name, chaos_country_code: oHub.chaos_country_code, iso_country_code: oHub.chaos_country_code, desk_list: oHub.desk_list, hub_name: oHub.title, loc_type: oHub.category, display_label: oHub.display_label }, AE.ui.search.setValue({ name: "DO" === $target.direction ? "dropoff-loc" : "pickup-loc", item: { pu: "DO" !== $target.direction && oHub, drop: "DO" === $target.direction && oHub, preserveDO: !("PU" !== $target.direction || UI.props.oPrefill.PU.ran || !UI.props.oPrefill.DO.ran) } })) }, handleCountryCrumbClick: function ($target) { var splitID = $target.parent().attr("id").split("_"); splitID[1] && (splitID = splitID[1], $("#country_" + splitID).val("--"), UI.clearInput(splitID.substring(0, 2), $target)), AE.heightAdjust(".searchcrumbs_container") }, handleCityCrumbClick: function ($target) { var splitID = $target.parent().attr("id").split("_"); splitID[1] && (splitID = splitID[1], $("#city_" + splitID).val("--"), UI.clearInput(splitID.substring(0, 2), $target)), AE.heightAdjust(".searchcrumbs_container") }, clearInput: function (direction, $target) { direction = direction || "PU", $target = $target || $(".trg__menusearch--country-x,.trg__menusearch--city-x"), "DO" !== direction && ($target.hasClass("trg__menusearch--loc") || (UI.state.operator_id_list = ""), UI.state.DO.loc = "", UI.props.$do.find(".trg__menusearch--loc").val("--")), AE.ui.search.setValue("DO" !== direction ? { name: "pickup-loc", item: { pu: !1, drop: !1 } } : { name: "dropoff-loc", item: { pu: AE.ui.search.getSubmitValues().pu, drop: !1 } }) }, prefill: function () { var puMenu, puBaseID, doBaseID, TRY_LOCAL_STORAGE, PREFILL_STORAGE_STR, USE_STORED_SEARCH, USE_PAGE_PREFILL, $menus = $("#locations-wrapper .menusearch--container"); $menus[0] && (puMenu = _.filter($menus, function (tempMenu) { return "PU" === $(tempMenu).attr("id").substring(0, 2) }), $menus = _.filter($menus, function (tempMenu) { return "DO" === $(tempMenu).attr("id").substring(0, 2) }), puMenu = $(puMenu), $menus = $($menus), puBaseID = puMenu.attr("id"), doBaseID = $menus.attr("id"), UI.props.oPrefill.PU.city = searchPuCity || "", UI.props.oPrefill.PU.country = searchPuCountry || "", UI.props.oPrefill.PU.loclist = searchPuLoclist || "", UI.props.oPrefill.DO.city = searchDoCity || "", UI.props.oPrefill.DO.country = searchDoCountry || "", UI.props.oPrefill.DO.loclist = searchDoLoclist || "", USE_STORED_SEARCH = 0 != (PREFILL_STORAGE_STR = !!(TRY_LOCAL_STORAGE = AE.ui.search.useStoredSearch() && !vouchDateTime) && localStorage.getItem("aeSearch")), (TRY_LOCAL_STORAGE = (USE_PAGE_PREFILL = "undefined" != typeof searchPuCity && "" != searchPuCity) ? USE_STORED_SEARCH = !1 : TRY_LOCAL_STORAGE) && (UI.props.oPrefill.PU.city = AE.ui.search.getStoredSearch().city || searchPuCity || "", UI.props.oPrefill.PU.country = AE.ui.search.getStoredSearch().pucode || searchPuCountry || "", UI.props.oPrefill.PU.loclist = AE.ui.search.getStoredSearch().puloclist || "", UI.props.oPrefill.DO.city = AE.ui.search.getStoredSearch().cityr || "", UI.props.oPrefill.DO.country = AE.ui.search.getStoredSearch().docode || "", UI.props.oPrefill.DO.loclist = AE.ui.search.getStoredSearch().doloclist || "", null === UI.props.oPrefill.DO.city && (UI.props.oPrefill.DO.city = UI.props.oPrefill.PU.city), null === UI.props.oPrefill.DO.country && (UI.props.oPrefill.DO.country = UI.props.oPrefill.PU.country), null === UI.props.oPrefill.DO.loclist && (UI.props.oPrefill.DO.loclist = UI.props.oPrefill.PU.loclist), AEdata.menuPrefill = AEdata.menuPrefill || {}, AEdata.menuPrefill.LOCLIST = AEdata.menuPrefill.LOCLIST || AE.ui.search.getStoredSearch().puloclist || {}, AEdata.menuPrefill.DOLOCLIST = AEdata.menuPrefill.DOLOCLIST || AE.ui.search.getStoredSearch().doloclist), USE_STORED_SEARCH && !USE_PAGE_PREFILL && (USE_STORED_SEARCH = JSON.parse(PREFILL_STORAGE_STR), _.isEmpty(USE_STORED_SEARCH) || (UI.props.oPrefill.PU.city = USE_STORED_SEARCH.city, UI.props.oPrefill.PU.country = USE_STORED_SEARCH.pucode, AEdata.menuPrefill.LOCLIST = USE_STORED_SEARCH.puloclist, "null" != USE_STORED_SEARCH.cityr && "null" != USE_STORED_SEARCH.docode) || (UI.props.oPrefill.DO.city = USE_STORED_SEARCH.cityr, UI.props.oPrefill.DO.country = USE_STORED_SEARCH.docode, AEdata.menuPrefill.DOLOCLIST = USE_STORED_SEARCH.doloclist)), "" !== UI.props.oPrefill.DO.country && (UI.props.oPrefill.OW.country = UI.props.oPrefill.DO.country !== UI.props.oPrefill.PU.country), "" !== UI.props.oPrefill.DO.city && (UI.props.oPrefill.OW.city = UI.props.oPrefill.DO.city !== UI.props.oPrefill.PU.city || UI.props.oPrefill.PU.loclist !== UI.props.oPrefill.DO.loclist), "" === UI.props.oPrefill.PU.country && (UI.props.oPrefill.PU.ran = !0), "" === UI.props.oPrefill.DO.country && (UI.props.oPrefill.DO.ran = !0), (USE_PAGE_PREFILL = !!(UI.props.oPrefill.OW.country || !UI.props.oPrefill.OW.country && UI.props.oPrefill.OW.city)) && UI.checkTheOneWayBox(), (puMenu[0] && TRY_LOCAL_STORAGE || puMenu[0] && !UI.props.oPrefill.PU.ran && $("#country_" + puBaseID).find('option[value="' + UI.props.oPrefill.PU.country + '"]').length) && ("" !== UI.props.oPrefill.PU.country ? ($("#country_" + puBaseID).val(UI.props.oPrefill.PU.country), $("#country_" + puBaseID).change()) : TRY_LOCAL_STORAGE && ($("#country_" + puBaseID).val(searchPuCountry), $("#country_" + puBaseID).change(), UI.props.oPrefill.PU.city = searchPuCity, $("#city_" + puBaseID).val(searchPuCity), $("#city_" + puBaseID).change())), $menus[0]) && !UI.props.oPrefill.DO.ran && $("#country_" + doBaseID).find('option[value="' + UI.props.oPrefill.DO.country + '"]').length && "" !== UI.props.oPrefill.DO.country && USE_PAGE_PREFILL && ($("#country_" + doBaseID).val(UI.props.oPrefill.DO.country), $("#country_" + doBaseID).change()), null === $("#country_" + puBaseID).val() && ($("#country_" + puBaseID).val("--"), $("#country_" + puBaseID).change(), UI.props.oPrefill.PU.city = "--") }, checkTheOneWayBox: function () { AE.ui.search.autocomplete.getInputs().$chkDiff.prop("checked") || AE.ui.search.autocomplete.getInputs().$chkDiff.click() }, resetInput: function (inputChanged, direction, baseID) { "country" === inputChanged && $("#city_" + baseID).prop("selectedIndex", 0).find("option:not(:first)").remove(), $("#loc_" + baseID).prop("selectedIndex", 0).find("option:not(:first)").remove(), $("#loc_" + baseID).children().remove("optgroup") }, onBodyClick: function (event, $target) { var flagHeight = $(".ui-warn-flag").height(); $(".ui-warn-flag").css("top"); 20 < flagHeight && ($(".ui-warn-flag").addClass("custHt"), $(".ui-warn-flag").removeClass("custHtb"), $(".ui-warn-flag").removeClass("custHtc"), $(".ui-warn-flag").removeClass("custHtd")), 40 < flagHeight && ($(".ui-warn-flag").removeClass("custHt"), $(".ui-warn-flag").removeClass("custHtc"), $(".ui-warn-flag").removeClass("custHtd"), $(".ui-warn-flag").addClass("custHtb")), 50 < flagHeight && ($(".ui-warn-flag").removeClass("custHt"), $(".ui-warn-flag").removeClass("custHtb"), $(".ui-warn-flag").removeClass("custHtd"), $(".ui-warn-flag").addClass("custHtc")), 60 < flagHeight && ($(".ui-warn-flag").removeClass("custHt"), $(".ui-warn-flag").removeClass("custHtb"), $(".ui-warn-flag").removeClass("custHtc"), $(".ui-warn-flag").addClass("custHtd")), flagHeight < 20 && ($(".ui-warn-flag").removeClass("custHtb"), $(".ui-warn-flag").removeClass("custHt"), $(".ui-warn-flag").removeClass("custHtc"), $(".ui-warn-flag").removeClass("custHtd")), "btn-submit" === $target.attr("name") && ($('#locations-wrapper [name="pickup-wrapper"] .menusearch--container'), $('#locations-wrapper [name="dropoff-wrapper"] .menusearch--container')) }, onBodyChange: function (event, $target) { "SELECT" === event.target.tagName.toUpperCase() && ("do" === $target.data("direction") && $(".ui-warn-flag-close-btn")[0] && $(".ui-warn-flag-close-btn").click(), $target.val(), $target.hasClass("trg__menusearch--country") && UI.handleCountryMenuSelect($target), $target.hasClass("trg__menusearch--loc") && UI.handleLocMenuSelect($target), $target.hasClass("trg__menusearch--city")) && UI.handleCityMenuSelect($target), !UI.state.synchingChkDiff && $target.hasClass("chk-diff-linked") && (UI.state.synchingChkDiff = !0, event = $target.prop("checked"), UI.props.$chkDiffs.prop("checked", event), UI.props.$chkDiffs.not($target).change(), UI.state.synchingChkDiff = !1, $target.prop("checked") ? UI.props.$do.removeClass("visuallyhidden") : (UI.props.$do.addClass("visuallyhidden"), UI.clearInput("DO"), UI.props.$do.find(".trg__menusearch--loc").val("--"))) } }; return UI }(), (AE = AE || {}).ui.searchType.leasesearch = AE.ui.searchType.leasesearch || function () { var UI = { init: function () { var oStoredSearch; UI.props = { $ltrpu: $("select#ltrpu.lease__select"), $ltrdo: $("select#ltrdo.lease__select"), $chkDiff: $('input[id*="chk-diff"]'), dolock: !1 }, "" === UI.props.$ltrpu.val() && UI.props.$ltrpu.val() !== UI.props.$ltrdo.val() && (UI.props.dolock = !1), "" !== UI.props.$ltrpu.val() && (UI.props.dolock = !1), AE.ui.search.useStoredSearch() && !_.isEmpty(AE.ui.search.getStoredSearch()) && (oStoredSearch = AE.ui.search.getStoredSearch()).excl_ltr && (oStoredSearch.pu && UI.props.$ltrpu.val(oStoredSearch.pu.hasOwnProperty("desk_list") ? oStoredSearch.pu.desk_list : ""), oStoredSearch.drop) && (UI.props.dolock = !1, UI.props.$ltrdo.val(oStoredSearch.drop.hasOwnProperty("desk_list") ? oStoredSearch.drop.desk_list : "")), UI.setValue("pu"), UI.setValue("do"), UI.props.$ltrpu.on("change", function () { UI.setValue("pu"), UI.props.$ltrdo.val(UI.props.$ltrpu.val()), UI.setValue("do") }), UI.props.$ltrdo.on("change", function () { UI.setValue("do") }), UI.props.$ltrdo.val() == UI.props.$ltrpu.val() || UI.props.$chkDiff.is(":checked") || UI.props.$chkDiff.trigger("click") }, setValue: function (direction) { var _doDisplayLabel, $selectedLoc, selData, validSelect, direction = direction || "pu"; "do" == direction ? (selData = ($selectedLoc = UI.props.$ltrdo.find('option[value="' + UI.props.$ltrdo.val() + '"]')).data(), validSelect = !!$selectedLoc.hasOwnProperty("text"), (validSelect = !_.isEmpty(selData) && (validSelect || !!_.has(selData, "city"))) && (_doDisplayLabel = $selectedLoc.hasOwnProperty("text") ? $selectedLoc.text : selData.city, AE.ui.search.setValue({ name: "dropoff-loc", item: { pu: !1, drop: { chaos_city_name: $selectedLoc.data().city, chaos_country_code: $selectedLoc.data().country, iso_country_code: $selectedLoc.data().isocode, desk_list: UI.props.$ltrdo.val(), hub_name: $selectedLoc.text, display_label: _doDisplayLabel } } }))) : "pu" == direction && (selData = ($selectedLoc = UI.props.$ltrpu.find('option[value="' + UI.props.$ltrpu.val() + '"]')).data(), validSelect = !!$selectedLoc.hasOwnProperty("text"), validSelect = !_.isEmpty(selData) && (validSelect || !!_.has(selData, "city"))) && (_doDisplayLabel = $selectedLoc.hasOwnProperty("text") ? $selectedLoc.text : selData.city, AE.ui.search.setValue({ name: "pickup-loc", item: { drop: !1, pu: { chaos_city_name: $selectedLoc.data().city, chaos_country_code: $selectedLoc.data().country, iso_country_code: $selectedLoc.data().isocode, desk_list: UI.props.$ltrpu.val(), hub_name: $selectedLoc.text, display_label: _doDisplayLabel } } })) }, lockDropoff: function () { UI.props.dolock = !UI.props.dolock, UI.props.$ltrdo.prop("disabled", UI.props.dolock), UI.props.dolock ? (AE.ui.props.$locationsWrapper.removeClass("both"), UI.setValue("pu")) : (AE.ga.gaArrayProcess([{ GACATEGORY: "carSearch", GAACTION: "oneWaySelect" }]), AE.ui.props.$locationsWrapper.addClass("both")) } }; return UI }(), (AE = AE || {}).ui.searchType.bmr = AE.ui.searchType.bmr || function () { "use strict"; var oBMR = { cfc: "/plugins/ae3/lib/bookmyride.cfc", agency: "eu", locale: "en", url: "autoeurope-motorhome.com", conversion: "AUTOEUROPE", campaign: 0 }, ajaxInitRan = !1, puPrefillRan = !1, doPrefillRan = !1, oDOlocs = {}, UI = { init: function () { UI.props = { oPrefill: { pickUpCountry: "--", pickUpCity: "--", dropOffCountry: "--", dropOffCity: "--" }, synchingChkDiff: !1, $do: $(".bmr__item--do"), $chkDiffs: $("input.chk-diff-linked"), $dfd: $.Deferred(), isAUNZ: AE.props.isAUNZ }, UI.props.$chkDiffs.prop("checked", !1), oBMR.conversion = AE.props.affiliate, oBMR.campaign = AE.props.campaign, ajaxInitRan || (ajaxInitRan = !0, $.ajax({ url: oBMR.cfc, dataType: "json", data: { method: "getProps" }, success: function (data) { _.extendOwn(oBMR, data) } }), $.ajax({ url: oBMR.cfc, dataType: "json", data: { method: "getCountries" }, success: function (data) { var o$Regions = {}; _.each(data, function (thisCountry) { thisCountry.region && (o$Regions[thisCountry.region.code] || (o$Regions[thisCountry.region.code] = $("<optgroup/>", { label: thisCountry.region.text, class: thisCountry.region.code })), o$Regions[thisCountry.region.code].append($("<option/>", { value: !1 === thisCountry.code ? "NO" : thisCountry.slug, html: thisCountry.text }))) }), 1 == AE.props.isAUNZ ? _.each("OCE,NAM,SAM,EUR,ASA,SAF".split(","), function (regKey) { $("select.trg__bmrsearch--country").append(o$Regions[regKey]) }) : _.each("NAM,SAM,EUR,OCE,ASA,SAF".split(","), function (regKey) { $("select.trg__bmrsearch--country").append(o$Regions[regKey]) }), AE.ui.search.useStoredSearch() ? null !== (data = localStorage.getItem("aeBMRsearch")) && _.isString(data) && "" != data && (UI.props.oPrefill = JSON.parse(data), $("select.trg__bmrsearch--country").val(UI.props.oPrefill.pickUpCountry)) : doPrefillRan = puPrefillRan = !0, $("select.trg__bmrsearch--country").change() } })), AE.ui.addBodyChangeTask({ func: UI.onBodyChange }), UI.props.isAUNZ && ($("input#chk-age").hide(), $('label[for="chk-age"]').click().hide(), $('input[name="txt-age"]').addClass("flush").prop("required", !0).attr("max", 1e3), $("#bmr__aunz--age").removeClass("visuallyhidden"), $('input[name="txt-age"]').show(), $("#bmr__aunz--age").show()) }, getSubmitTarget: function () { return "https://" + oBMR.url + "/quotes" }, getSubmitValues: function (oSearch) { oSearch = oSearch || AE.ui.search.getSubmitValues(); var oSubmit = { locale: oBMR.locale, agency: oBMR.agency }, oSearch = (oSubmit.conversion = oBMR.conversion, oSubmit.campaign = oBMR.campaign, oSubmit.pickUpDate = oSearch.puCal, oSubmit.dropOffDate = oSearch.doCal, oSite.bIsDapTpDomain && (oSubmit.agencyCode = oSite.affiliateIATA), $("input[name=txt-age]").val()); return (!$("#chk-age").prop("checked") || UI.props.isAUNZ && "" !== oSearch) && (oSubmit.driverAge = oSearch), oSubmit.passengers = $("#bmr__passengers").val(), oSubmit.pickUpCountry = $("#bmr__country").val(), oSubmit.pickUpCity = $("#bmr__city").val(), _.extend(oSubmit, UI.getDOValues(oSubmit.pickUpCountry, oSubmit.pickUpCity)), _.extend(oSubmit, UI.getAUNZValues()), AE.ui.search.useStoredSearch() && localStorage.setItem("aeBMRsearch", JSON.stringify(oSubmit)), oSubmit }, getCheckValues: function (oSearch) { oSearch = oSearch || AE.ui.search.getSubmitValues(); oSearch = UI.getSubmitValues(oSearch); return oSearch.method = "checkResults", { url: oBMR.cfc, dataType: "json", data: oSearch, success: function (data) { } } }, handleCountryMenuSelect: function ($target) { $.ajax({ url: oBMR.cfc, dataType: "json", data: { method: "getCities", code: $target.val() }, success: function (data) { var $promptOptionPU = $("#city-0-0").detach(), $promptOptionDO = $("#cityr-0-0").detach(), data = ($("#bmr__city,#bmr__cityr").empty(), _.each(data, function (thisCity) { $("#bmr__city").append($("<option/>", { value: thisCity.slug, html: thisCity.text })) }), "--"), doPrefill = "--"; !puPrefillRan && AE.ui.search.useStoredSearch() && (data = UI.props.oPrefill.pickUpCity, doPrefill = UI.props.oPrefill.dropOffCity || "--", puPrefillRan = !0), $("#bmr__cityr").prepend($promptOptionDO), $("#bmr__city").prepend($promptOptionPU).val(data).change(), "--" !== data && "--" !== doPrefill && data !== doPrefill && (UI.props.$chkDiffs.prop("checked", !0), UI.props.$chkDiffs.change()) } }) }, handlePickupSelect: function ($target) { "--" !== $target.val() && "" !== $target.val() && $.ajax({ url: oBMR.cfc, dataType: "json", data: { method: "getDropoffCities", puCity: $target.val() }, success: function (data) { var aDOcityCheck, $promptOptionDOcountry = $("#countryr-0-0").detach(), $promptOptionDOcity = $("#cityr-0-0").detach(), data = ($("#bmr__cityr,#bmr__countryr").empty(), oDOlocs = {}, _.each(data, function (thisCity) { oDOlocs.hasOwnProperty(thisCity.country.slug) || (oDOlocs[thisCity.country.slug] = { value: thisCity.country.slug, html: thisCity.country.text, aLocs: [] }), oDOlocs[thisCity.country.slug].aLocs.push({ value: thisCity.slug, html: thisCity.text }) }), _.sortBy(_.keys(oDOlocs), function (kLoc) { return oDOlocs[kLoc].html })), data = (_.each(data, function (thisCountryKey) { thisCountryKey = oDOlocs[thisCountryKey]; $("#bmr__countryr").append($("<option/>", { value: thisCountryKey.value, html: thisCountryKey.html })) }), "--"); !doPrefillRan && AE.ui.search.useStoredSearch() && (oDOlocs.hasOwnProperty(UI.props.oPrefill.dropOffCountry) ? data = UI.props.oPrefill.dropOffCountry : oDOlocs.hasOwnProperty(UI.props.oPrefill.pickUpCountry) ? data = UI.props.oPrefill.pickUpCountry : doPrefillRan = !0, doPrefillRan || UI.props.oPrefill.dropOffCity === UI.props.oPrefill.pickUpCity ? data = "--" : (aDOcityCheck = _.find(oDOlocs[data].aLocs, function (thisLoc) { return thisLoc.value === UI.props.oPrefill.dropOffCity }), _.isObject(aDOcityCheck) || (doPrefillRan = !0, data = "--"))), $("#bmr__cityr").prepend($promptOptionDOcity).val("--").change(), $("#bmr__countryr").prepend($promptOptionDOcountry).val(data).change() } }) }, handleDropoffCountrySelect: function ($target) { var doPrefill, useStoredSearch, $promptOptionDOcity; oDOlocs.hasOwnProperty($target.val()) && (doPrefill = "--", useStoredSearch = AE.ui.search.useStoredSearch(), $promptOptionDOcity = $("#cityr-0-0").detach(), $("#bmr__cityr").empty(), _.each(oDOlocs[$target.val()].aLocs, function (thisCity) { $("#bmr__cityr").append($("<option/>", { value: thisCity.value, html: thisCity.html })), !doPrefillRan && useStoredSearch && thisCity.value === UI.props.oPrefill.dropOffCity && (doPrefill = UI.props.oPrefill.dropOffCity, doPrefillRan = !0) }), $("#bmr__cityr").prepend($promptOptionDOcity).val(doPrefill).change()) }, getDOValues: function (puCountry, puCity) { var oDO = {}, city = $("#bmr__cityr").val(), country = $("#bmr__countryr").val(); return "--" !== city && "" !== city && (oDO.dropOffCity = city), "--" !== country && "" !== country && puCountry !== city && (oDO.dropOffCountry = country), oDO }, getAUNZValues: function () { var lic, oAUS = {}; return UI.props.isAUNZ && (lic = $("#bmr__lic").val()) && "" !== lic && (oAUS.domestic = lic), oAUS }, handleSubmit: function (oSearch) { oSearch = oSearch || AE.ui.search.getSubmitValues(); var oCheckParams = UI.getSubmitValues(oSearch); oCheckParams.method = "checkResults", UI.props.$dfd = $.Deferred(), UI.props.$dfd.done(function () { AE.ui.search.setValue({ name: "txt-age", resetAge: !0 }), $("form#ae-search button[name='btn-submit']").removeClass("ui--btn-submit-wait").attr({ disabled: !1 }).find(".ui--loading-results").remove() }), $.ajax({ url: oBMR.cfc, dataType: "json", data: oCheckParams, success: function (data) { return UI.props.$dfd.resolve(), data.ST ? AE.ui.search.postToForm(UI.getSubmitTarget(), UI.getSubmitValues(oSearch), "get") : (AE.ui.dialog.launch({ titleBar: !0, id: "noResultWarning", content: AE.ui.searchType.bmr.buildNoResultMarkup(data.HD, data.MSG, data.META), applyUI: !0, width: 600 < $(window).width() ? 500 : "70%" }), !1) }, failure: function () { return UI.props.$dfd.resolve(), !1 } }) }, buildNoResultMarkup: function (HD, MSG, META) { HD = HD || "", MSG = MSG || ""; var docFrag = $(document.createDocumentFragment()); return docFrag.append($(document.createElement("h3")).append(HD)), docFrag.append($(document.createElement("div")).append(MSG)), META && !AE.props.isLiveServer && docFrag.append($(document.createElement("h4")).append(META)), docFrag }, onBodyChange: function (event, $target) { "SELECT" === event.target.tagName.toUpperCase() && ($target.hasClass("trg__bmrsearch--country") && UI.handleCountryMenuSelect($target), $target.hasClass("trg__bmrsearch--city") && UI.handlePickupSelect($target), $target.hasClass("trg__bmrsearch--countryr")) && UI.handleDropoffCountrySelect($target), !UI.props.synchingChkDiff && $target.hasClass("chk-diff-linked") && (UI.props.synchingChkDiff = !0, event = $target.prop("checked"), UI.props.$chkDiffs.prop("checked", event), UI.props.$chkDiffs.not($target).change(), UI.props.synchingChkDiff = !1, $target.prop("checked") ? UI.props.$do.removeClass("visuallyhidden") : (UI.props.$do.addClass("visuallyhidden"), $("#bmr__cityr,#bmr__countryr").val("--"))) } }; return UI }(), (AE = AE || {}).ui.devices = AE.ui.devices || function () { "use strict"; var UI = { init: function () { var msViewportStyle, $fn_getInputs = AE.ui.search.autocomplete.getInputs(); $fn_getInputs.$puLoc, $fn_getInputs.$doLoc, $fn_getInputs.$chkDiff; UI.props = { softKeyboardActive: !1, navigatorUA: navigator.userAgent, viewport: document.querySelector("meta[name=viewport]"), toggleKeyboardElem: $("<menu/>", { class: "ui-toggle-keyboard", type: "toolbar" }), modElement: $("html"), modClass: "ui-soft-kb-active", $puLoc: $fn_getInputs.$puLoc, $doLoc: $fn_getInputs.$doLoc, $chkDiff: $fn_getInputs.$chkDiff }, UI.features = {}, UI.elements = {}, "FCR" !== AE.props.siteCode && (UI.mainSearch(), $fn_getInputs = document, UI.props.navigatorUA.match(/IEMobile\/10\.0/) && ((msViewportStyle = $fn_getInputs.createElement("style")).appendChild($fn_getInputs.createTextNode("@-ms-viewport{width:auto!important}")), $fn_getInputs.head.appendChild(msViewportStyle)), UI.props.navigatorUA.match(/Chrome\/9[\d]\.[\d]+\.[\d]+\.[\d]+ Mobile/)) && ((msViewportStyle = $fn_getInputs.createElement("style")).appendChild($fn_getInputs.createTextNode("#ui-id-99{border-top-width:1.999px!important}")), $fn_getInputs.head.appendChild(msViewportStyle)) }, mainSearch: function () { this._isOpen = !1 }, onShow: function (input) { this._isOpen = !0; input.offset().top; var inputId = input.attr("id"), input = input.data("customTextsearch"), $button = input.targetActionButton, $scrollToInput = document.getElementById(inputId), $input = input.element, $overlay = $("<div/>", { class: "ui-mobile-overlay" }); function touchM(event) { var $target = $(event.target); ($target.hasClass("ui-mobile-overlay") || $target.is("[class*=ui-textsearch]")) && event.stopPropagation() } return $("." + UI.props.modClass).each(function (ind, item) { return item.addEventListener("touchmove", touchM, { passive: !0, capture: !0 }) }), setTimeout(function () { $scrollToInput.scrollIntoView({ behavior: "instant", block: "start", inline: "start" }), $overlay.is(":visible") || ($overlay.insertAfter($button).addClass("fade-in"), $overlay.on("click", function (event) { return $overlay.addClass("ui-state-active").off("click"), AE.ui.devices._hide($input) })), window.scrollY && window.scrollTo(0, 1) }, 200) }, onHide: function (event, ui) { return $("[data-open=true]").addClass("fs-menu"), this._isOpen = !1, $("." + UI.props.modClass).each(function (ind, item) { return item.removeEventListener("touchmove", touchM, { passive: !0 }) }), $(".ui-mobile-overlay").animate({ opacity: 0 }, "fast", function () { return UI.props.modElement.find(".ui-mobile-overlay").remove(), !1 }) }, _show: function (input) { var _direction = input.data("direction"), _addClass = "pu" == _direction ? "ui-pu-input-focus" : "ui-do-input-focus", _removeClass = "pu" == _direction ? "ui-do-input-focus" : "ui-pu-input-focus"; switch (_direction) { case "pu": UI.props.$doLoc.textsearch().trigger("textsearchdisable"); break; case "do": UI.props.$puLoc.textsearch().trigger("textsearchdisable") }return UI.props.softKeyboardActive = !0, UI.props.modElement.addClass(UI.props.modClass + " " + _addClass).removeClass(_removeClass), !this._isOpen && UI.onShow(input) }, _hide: function (input) { var $input = input, _direction = $input.data("direction"); switch (UI.props.softKeyboardActive = !1, UI.props.modElement.removeClass(UI.props.modClass + " ui-pu-input-focus ui-do-input-focus"), _direction) { case "pu": UI.props.$doLoc.textsearch().trigger("textsearchenable"); break; case "do": UI.props.$puLoc.textsearch().trigger("textsearchenable") }return $input.trigger("textsearchclose"), UI.onHide(input) }, _hideDeviceKeyboard: function () { return $("input").blur(), !1 } }; return UI }(), (AE = AE || {}).ui.carousel = AE.ui.carousel || function () { "use strict"; var UI = { loaded: !1, init: function () { $(".looper-control.right").attr({ name: "next", "aria-label": "next" }), $(".looper-control").not(".right").addClass("visuallyhidden").attr({ name: "prev", "aria-label": "prev" }), AE.ui.addBodyClickTask({ func: UI.onBodyClick }), "undefined" != typeof initSurveyResize && AE.ui.carousel.surveyResize.init(), AEdata && AEdata.hasOwnProperty("ui") && AEdata.ui.hasOwnProperty("surveySpinnerOn") && $("body").on("shown", function (event) { $(".carousel_cloak").removeClass("carousel_cloak"), AEdata.ui.surveySpinnerOn && ($(".review_spinner").remove(), AEdata.ui.surveySpinnerOn = !1) }) }, onBodyClick: function (event, $target) { var $looperControls; $target.hasClass("looper-control") && ($target = $target[0].href.substring($target[0].href.indexOf("#")), $looperControls = ($target = $($target)).find(".looper-control"), $target = $target.find(".looper-inner .item"), $looperControls.removeClass("visuallyhidden"), ($target.first().hasClass("prev go") || $target.first().hasClass("next go")) && $looperControls.not(".right").addClass("visuallyhidden"), $target.last().hasClass("prev go") || $target.last().hasClass("next go")) && $looperControls.filter(".right").addClass("visuallyhidden") }, manageResize: function () { var viewType = AE.getSiteViewType(); $(".looper-control").removeClass("visuallyhidden").not(".right").addClass("visuallyhidden"), $("#autoratingbar.grid>.grid__item").attr("style", "overflow:inherit;"), "palm" !== viewType ? AE.heightAdjust($(".carousel_container>.looper-inner>.item,#autoratingbar.grid>.grid__item").not(".noHeightAdjust")) : (AE.heightAdjust($(".carousel_container>.looper-inner>.item").not(".noHeightAdjust")), $("#autoratingbar.grid>.grid__item").height("auto")) } }; return UI }(), (AE = AE || {}).ui.carousel.surveyResize = AE.ui.carousel.surveyResize || function () { var UI = { init: function () { UI.props = { maxSlides: 1, arrSlides: [], $slideContainer: $("#autoratingbar .carousel_container .carousel__slides-container"), $carousel: $("#autoratingbar .looper") }, UI.draw(), UI.positionReadMoreLink(), AE.addResizeTask({ func: function () { UI.manageResize() }, args: [] }) }, computeMaxSlides: function (viewType) { var maxSlides = 1; return maxSlides = "desk" !== (viewType = viewType || "palm") && "desk-wide" !== viewType ? maxSlides : $(".reviewCarousel__USP")[0] ? 2 : 4 }, draw: function () { UI.props.maxSlides = UI.computeMaxSlides(AE.getSiteViewType()), UI.props.arrSlides[0] || (UI.props.arrSlides = UI.props.$slideContainer.find(".carousel__slide").detach()), UI.props.$slideContainer.empty(); for (var gridItemClass = 2 === UI.props.maxSlides ? "one-half" : "one-quarter", $df = $(document.createDocumentFragment()), slidx = 0; slidx < UI.props.arrSlides.length; slidx++) { var $carouselItem = $(document.createElement("div")).addClass("item"); if (1 === UI.props.maxSlides) $carouselItem.append(UI.props.arrSlides[slidx]); else { var $tr = $(document.createElement("tr")), $table = $(document.createElement("table")).addClass("flush").append($tr); $carouselItem.append($table); for (var tdx = 0; tdx < UI.props.maxSlides; tdx++)slidx + tdx < UI.props.arrSlides.length && $tr.append($(document.createElement("td")).addClass(gridItemClass + " hard").append(UI.props.arrSlides[slidx + tdx])); slidx += UI.props.maxSlides - 1 } $df.append($carouselItem) } UI.props.$slideContainer.append($df), setTimeout(function () { AE.ui.carousel.manageResize(), UI.props.$carousel.find(".item").first().addClass("active") }, 1e3) }, positionReadMoreLink: function () { var $rmLink = $("#autoratingfulllink"); $rmLink.parent().css({ position: "relative" }), $rmLink.css({ position: "absolute", width: "100%", left: "-14px", bottom: "14px" }), "palm" !== AE.getSiteViewType() && "lap" !== AE.getSiteViewType() && $rmLink.css("bottom", "0px") }, manageResize: function () { UI.draw(), UI.positionReadMoreLink() } }; return UI }(), (AE = AE || {}).ui.carousel.surveySort = AE.ui.carousel.surveySort || function () { var UI = { init: function () { UI.props = { $select: $('select[name="surveySort"]'), $contents: $("#reviewPagesCarousel").find(".carousel__slides-container"), $carousel: $("#reviewPagesCarousel"), arrReviews: [], perPage: 20 }, $(".review_spinner").remove(), UI.props.$select.on("change", function () { UI.props.arrReviews[0] || (UI.props.arrReviews = UI.props.$contents.find(".carousel__slide").detach()); var options = {}; switch ($(this).val()) { case "lo": options = { prop: "score", asc: !0 }; break; case "hi": options = { prop: "score", asc: !1 }; break; case "old": options = { prop: "created", asc: !0 }; break; default: options = { prop: "created", asc: !1 } }UI.draw(UI.split(UI.sort(UI.props.arrReviews, options.prop, options.asc))) }), UI.props.$carousel.find(".item").first().addClass("active") }, sort: function (arrReviews, key, ascending) { var arrSorted = []; if ("score" === key) { for (var oScores = _.groupBy(arrReviews, function (review) { return review.dataset.score }), score = 0; score <= 5; score++)oScores[score] && oScores[score][0] && (oScores[score] = _.sortBy(oScores[score], function (review) { return review.dataset.created }), ascending) && oScores[score].reverse(); arrSorted = _.union(oScores[0], oScores[1], oScores[2], oScores[3], oScores[4], oScores[5]) } else arrSorted = _.sortBy(arrReviews, function (review) { return review.dataset[key] }); return ascending || arrSorted.reverse(), arrSorted }, split: function (arrReviews, key) { for (var arrPages = [], arrSet = [], i = 0; i < arrReviews.length; i++)i % UI.props.perPage == 0 && (0 < arrSet.length && arrPages.push(arrSet), arrSet = []), arrSet.push(arrReviews[i]); return arrPages.push(arrSet), arrPages }, draw: function (arrPages) { UI.props.$contents.each(function (index) { $(this).append(function (arrSet) { for (var $docFragment = $(document.createDocumentFragment()), i = 0; i < arrSet.length; i++)$docFragment.append(arrSet[i]); return $docFragment }(arrPages[index])) }), UI.props.$carousel.find(".item").first().addClass("active") } }; return UI }(), (AE = AE || {}).ui.dialog = AE.ui.dialog || function () { var UI = { dialogHandlers: [], init: function () { UI.props = { $currentDialog: null, positionTarget: null, lastBodyY: 0, size: "80%", overClick: !0, maxSize: "850px", allTabWidth: 0, $autoDialogs: $(".trg__dialog--Auto"), dialogTriggered: !1 }, AE.ui.addBodyClickTask({ func: UI.onBodyClick }), AE.addResizeTask({ func: function () { UI.manageResize() }, args: [] }), AE.addScrollTask({ func: function () { UI.manageScroll() } }), UI.options = { infoTip: { type: "infoTip", titleBar: !1, applyUI: !0, dialogClass: "", typeClass: "info-tip", draggable: !0, resizable: !1, minHeight: "auto", modal: !0, autoupdate: !0 }, standard: { type: "standard", titleBar: !0, applyUI: !1, dialogClass: "", draggable: !1, resizable: !1, width: 900 < $(window).width() ? 850 : "80%", modal: !0, autoupdate: !0 } }, "FCR" == AE.props.siteCode && (UI.options = { infoTip: { type: "infoTip", titleBar: !1, applyUI: !0, dialogClass: "", typeClass: "info-tip", draggable: !0, resizable: !1, minHeight: "auto", modal: !0, autoupdate: !0 }, standard: { type: "standard", titleBar: !0, applyUI: !1, dialogClass: "", draggable: !1, resizable: !1, width: 900 < $(window).width() ? 850 : "80%", modal: !0, autoupdate: !0, show: { effect: "fadeIn", duration: 250 } } }), UI.addListeners() }, addListeners: function (settings) { $("body").on({ dialogopen: function (event, ui) { event = event.target || null; event && $(event).parent().hasClass("io-observable") && $(event).parent("[role=dialog].io-observable"), $(".ui-dialog-content").css("height", $(".ui-dialog-content").height() + 1), UI.update(), UI.manageTabWidth() }, dialogclose: function (event, ui) { var evtTarget = event.target || null, ariaLabel = $(evtTarget).parent("div").attr("aria-describedby"); evtTarget && $(evtTarget).parent().hasClass("io-observable") && $(evtTarget).parent("[role=dialog].io-observable"), "duplicateWarning" == ariaLabel && $(AE.ui.props.scrollContainer).animate({ scrollTop: 0 }, 50), UI.cleanup(event, ui) } }, ".ui-dialog") }, setPos: function (settings) { return "FCR" === AE.props.siteCode && (settings.my = "center top", settings.at = "left bottom+5"), UI.props.positionTarget = { my: settings.my, at: settings.at, of: settings.of, collision: settings.collision || "fit fit" }, UI.props.positionTarget }, getPos: function () { return UI.props.positionTarget }, setDialogTriggered: function () { UI.props.dialogTriggered = !0 }, isDialogTriggered: function () { return UI.props.dialogTriggered }, update: function (isManual) { var siteViewType, dialogHeight; UI.props.$currentDialog && (UI.props.$currentDialog.uiDialog.uniqueId(), siteViewType = AE.getSiteViewType(), isManual = isManual || !1, !0 !== UI.props.$currentDialog.options.autoupdate && !0 !== isManual || (dialogHeight = (isManual = $(window).height() - 60) < (dialogHeight = UI.props.$currentDialog.uiDialog.outerHeight()) ? isManual : dialogHeight, $(".ui-dialog").css({ "max-height": isManual + "px" }), $(".ui-dialog-content").css({ height: "auto" }), $(".ui-dialog").hasClass("info-tip") ? $(".info-tip")[0] && ("palm" !== siteViewType ? $(".info-tip").removeClass("info-tip-full").position(UI.getPos()) : ($(".ui-dialog-titlebar-close").hide(), $(".info-tip").addClass("info-tip-full").position({ my: "center top", at: "center top+30", of: $(window) }))) : function () { var maxHeight = $(window).height() - 60, dialogHeight = UI.props.$currentDialog.uiDialog.outerHeight(), maxHeight = (dialogHeight = maxHeight < dialogHeight ? maxHeight : dialogHeight, UI.props.$currentDialog.options.dialogClass, -1 !== UI.props.$currentDialog.options.dialogClass.search("top-dialog") ? "center top+40" : "center center-" + dialogHeight / 2); "FCR" == AE.props.siteCode && $(".ui-accordion").accordion({ animate: { easing: "easeInOutSine", duration: 100 } }); $(window).width() < 900 && "palm" !== siteViewType ? $(".ui-dialog").removeClass("dialog-full").width("90%").position({ my: "center top", at: maxHeight, of: $(window) }) : "palm" !== siteViewType ? (dialogHeight = 900 <= UI.props.$currentDialog.options.width + 10 ? "90%" : UI.props.$currentDialog.options.width, $(".ui-dialog").removeClass("dialog-full").width(dialogHeight).position({ my: "center top", at: maxHeight, of: $(window) })) : $(".ui-dialog").addClass("dialog-full").width("auto").position({ my: "center top", at: "center top+30", of: $(window) }) }(), UI.handleOverflow())) }, launch: function (options) { var $dialog, inline, settings, scrollTxt; if (!UI.props.$currentDialog) return $dialog = [], inline = !0, settings = {}, scrollTxt = AE.props.oLang.TXT_SCROLL_DOWN, UI.close(), (settings = options.type ? $.extend(!0, settings, AE.ui.dialog.options[options.type], options) : $.extend(!0, settings, AE.ui.dialog.options.standard, options)).pos && UI.setPos(settings.pos), settings.dialogClass = settings.typeClass ? settings.dialogClass + " " + settings.typeClass : settings.dialogClass, settings.dialogClass = settings.titleBar ? settings.dialogClass : settings.dialogClass + " mod-title", !settings.selector && settings.id ? $dialog = $("#" + settings.id) : settings.selector && ($dialog = $(settings.selector)), settings.id = settings.id || "current-dialog", settings.type, $dialog[0] || (inline = !1, $dialog = $($(document.createElement("div"))).attr("id", settings.id).append($(document.createElement("div")).append($(document.createElement("div")).append(scrollTxt)).addClass("scrollable"))), $dialog.dialog(settings), UI.props.$currentDialog = $dialog.dialog("instance"), inline || (settings.content ? settings.cloneContentEvents ? UI.addContent($(settings.content).clone(!0)) : UI.addContent($(settings.content).clone()) : AE.ui.addSpinner(UI.props.$currentDialog.uiDialog.find(".ui-dialog-content"), { size: "5x" })), settings.applyUI && UI.applyJQUI(), settings.buttonOpts && UI.applyButtonOptions(settings.buttonOpts), "FCR" == AE.props.siteCode && settings.class && $(".ui-dialog").addClass(settings.class), $(".ui-dialog").scrollTop(0), settings.autoupdate && UI.update(), UI.renderButtonEntities(), $dialog }, addContent: function (content) { UI.props.$currentDialog && (AE.ui.removeSpinner(UI.props.$currentDialog.uiDialog.find(".ui-dialog-content")), UI.props.$currentDialog.uiDialog.find(".ui-dialog-content").append(content).ready(function () { UI.manageTabWidth() })) }, applyJQUI: function (dialogSelector) { UI.props.$currentDialog && AE.ui.applyJQUI(".ui-dialog-content") }, renderButtonEntities: function () { var $dialogButtons = $(".ui-dialog-buttonset button"); $.each($dialogButtons, function (btnIdx) { var btnIdx = $dialogButtons[btnIdx], btnTxt = (btnTxt = btnIdx.innerHTML).replace(/&amp;/g, "&"); $(btnIdx).empty().append(btnTxt) }) }, close: function (event, ui) { UI.props.dialogTriggered = !1, UI.props.$currentDialog && UI.props.$currentDialog.close() }, instance: function () { return UI.props.$currentDialog.uiDialog }, hasOverflow: function () { var totalHeight, currDialog; return !!UI.props.$currentDialog && (totalHeight = 0, currDialog = (currDialog = UI.props.$currentDialog.uiDialog).hasClass("mod-title") ? parseInt(currDialog.height() + 15) : currDialog.height(), UI.props.$currentDialog.uiDialog.children().each(function (index) { $(this).is(":visible") && (totalHeight += $(this).height()) }), currDialog < totalHeight) }, handleOverflow: function () { UI.hasOverflow() ? UI.props.$currentDialog.uiDialog.addClass("scroll--more") : UI.props.$currentDialog.uiDialog.removeClass("scroll--more") }, stopBodyScroll: function () { $("html").hasClass("ua-firefox") || $("html").addClass("scroll-stop") }, allowBodyScroll: function () { $("html").removeClass("scroll-stop") }, cleanup: function (event, ui) { UI.props.$currentDialog && (UI.props.dialogTriggered = !1, UI.props.$currentDialog.destroy(), UI.props.$currentDialog = null, UI.props.overClick = !0) }, addDialogHandler: function (task) { UI.dialogHandlers.push(task) }, onBodyClick: function (event, $target) { $(event.target).hasClass("trg__dialog") && (event = $target.data("dialog-id"), UI.launch({ id: event })), $target.closest(".info-tip")[0] && UI.close(), $target.hasClass("ui-widget-overlay") && UI.props.overClick && UI.close(), $target.hasClass("fcr_close") && UI.close(), "AUS" === oSite.siteCode && $target.hasClass("ui-icon-closethick") && "gpsrequest" == $("body").attr("id") && ($("#gpsreqbtn").removeClass("visuallyhidden"), $("#gpsTNCchk").removeClass("fa-square").addClass("fa-check-square")) }, create: function (id, dialogOpts, spinnerOpts, content) { "string" != typeof id && (id = "unidentifiedDialog_" + Date.now()), dialogOpts = dialogOpts || {}; var dialogSelector = "#" + $.trim(id), $dialog = (UI.launch({ id: "#" + $.trim(id), content: buildMarkup(termsData), buttons: oButtons, applyUI: !0, buttonOpts: buttonOpts, width: 900 < $(window).width() ? 850 : "80%" }), $($(document.createElement("div"))).attr("id", id).dialog(dialogOpts)); return dialogOpts.close || $dialog.dialog("option", "close", function (event) { $dialog.dialog("destroy") }), dialogOpts.buttonOpts && UI.applyButtonOptions(dialogSelector, dialogOpts.buttonOpts), spinnerOpts && AE.ui.addSpinner(dialogSelector, spinnerOpts), content && (AE.ui.removeSpinner(dialogSelector), $dialog.append(content)), $dialog.closest(".ui-dialog").css({ position: "fixed", top: dialogOpts.top }), $dialog }, fill: function (dialogSelector, content, buttonOpts) { AE.ui.removeSpinner(dialogSelector), $(dialogSelector).append(content), AE.ui.applyJQUI(dialogSelector), buttonOpts && UI.applyButtonOptions(dialogSelector, buttonOpts) }, applyButtonOptions: function (buttonOpts) { var $dialog, $buttonPane, $buttonSet, $buttonsAll, $buttonFirst, $buttonLast; UI.props.$currentDialog && ($dialog = UI.props.$currentDialog.uiDialog, $buttonPane = UI.props.$currentDialog.uiDialogButtonPane, $buttonSet = UI.props.$currentDialog.uiButtonSet, $buttonsAll = UI.props.$currentDialog.uiButtonSet.children("button"), $buttonFirst = UI.props.$currentDialog.uiButtonSet.children("button").first(), $buttonLast = UI.props.$currentDialog.uiButtonSet.children("button").last(), buttonOpts.buttons && $dialog.dialog("option", "buttons", buttonOpts.buttons), buttonOpts.before && $buttonPane.prepend(buttonOpts.before), buttonOpts.after && $buttonPane.append(buttonOpts.after), buttonOpts.paneClass && $buttonPane.addClass(buttonOpts.paneClass), buttonOpts.setClass && $buttonSet.addClass(buttonOpts.setClass), buttonOpts.buttonsClass && $buttonsAll.addClass(buttonOpts.buttonsClass), buttonOpts.firstButtonClass && (buttonOpts.buttonsClass && $buttonFirst.removeClass(buttonOpts.buttonsClass), $buttonFirst.addClass(buttonOpts.firstButtonClass)), buttonOpts.lastButtonClass && (buttonOpts.buttonsClass && $buttonLast.removeClass(buttonOpts.buttonsClass), $buttonLast.addClass(buttonOpts.lastButtonClass)), buttonOpts.firstButtonAttr && $buttonFirst.attr(buttonOpts.firstButtonAttr[0], buttonOpts.firstButtonAttr[1]), buttonOpts.lastButtonAttr && $buttonLast.attr(buttonOpts.lastButtonAttr[0], buttonOpts.lastButtonAttr[1]), buttonOpts.exclusiveClose) && (UI.props.overClick = !1, UI.props.$currentDialog.uiDialogTitlebarClose.hide()) }, empty: function (dialogSelector) { }, manageTabWidth: function () { var $tabList, total, allWidth; UI.props.$currentDialog && ($tabList = UI.props.$currentDialog.uiDialog.find(".ui-tabs-nav"))[0] && "palm" !== AE.getSiteViewType() && ($tabList.hasClass("tab-forcefull") ? UI.allTabWidth < $tabList.width() && (UI.allTabWidth = 0, $tabList.removeClass("tab-forcefull")) : (allWidth = 0, $tabList.children().each(function () { allWidth += $(this).outerWidth(!0) }), (total = allWidth) >= $tabList.width() && (UI.allTabWidth = total, $tabList.addClass("tab-forcefull")))) }, manageScroll: function () { UI.props.$currentDialog && "infoTip" === UI.props.$currentDialog.option("type") && UI.props.$currentDialog.close() }, manageResize: function () { UI.update(), UI.manageTabWidth() } }; return UI }(), (AE = AE || {}).ui.tabcordion = AE.ui.tabcordion || function () { var UI = { init: function () { UI.props = {}, AE.ui.addBodyClickTask({ func: UI.onBodyClick }) }, handleTabcordion: function ($target) { var props = $target.data(), $target = (props.display = props.display || "", props.content = props.content || "", props.switchsize = props.switchsize || "", $('.tabcordion__item[data-display="' + props.display + '"]')), $target = $(_.chain($target).map(function (item) { item = $(item).data("content").toString(); return item !== props.content.toString() && item }).compact().value().toString()), div = $(props.content)[0].id.split("-"), removeClasses = "visuallyhidden"; switch ($.trim(props.switchsize).toLowerCase()) { case "palm": addClasses = "visuallyhidden--palm visuallyhidden--lap-and-up active-palm", removeClasses += " visuallyhidden--palm visuallyhidden--portable active-palm"; break; case "portable": addClasses = "visuallyhidden--portable visuallyhidden--desk visuallyhidden--desk-wide active-portable", removeClasses += " visuallyhidden--palm visuallyhidden--lap visuallyhidden--portable active-portable"; break; case "lap": addClasses = "visuallyhidden--lap visuallyhidden--desk visuallyhidden--desk-wide active-lap", removeClasses += " visuallyhidden--lap visuallyhidden--portable active-lap"; break; case "lap-and-up": addClasses = "visuallyhidden--lap-and-up visuallyhidden--palm active-lap-and-up", removeClasses += " visuallyhidden--lap-and-up visuallyhidden--lap visuallyhidden--desk visuallyhidden--desk-wide active-lap-and-up"; break; case "desk": addClasses = "visuallyhidden--desk active-desk", removeClasses += " visuallyhidden--desk active-desk"; break; case "desk-wide": addClasses = "visuallyhidden--desk-wide active-desk-wide", removeClasses += " visuallyhidden--desk-wide active-desk-wide" }$target.slideUp({ duration: "slow", queue: !1, complete: function () { $(this).addClass(addClasses) } }), $(props.content).removeClass(removeClasses).slideDown({ duration: "slow", queue: !1, complete: function () { } }), $(props.display).empty().removeClass("promo-content-one promo-content-two promo-content-three").append($(props.content).html()).addClass("promo-content-" + div[2]) }, onBodyClick: function (event, $target) { $target.closest(".tabcordion__item")[0] && (event.preventDefault(), UI.handleTabcordion($target)), $(".tabcordion__opaque__parent")[0] && ($(".tabcordion__opaque__parent").addClass("promo-opacity-fill"), $target.closest("div.promo-box").children(".tabcordion__opaque__parent").removeClass("promo-opacity-fill")) } }; return UI }(), (AE = AE || {}).ui.liveTimer = AE.ui.liveTimer || function () { var UI = { init: function (callback, iTxd) { iTxd = iTxd || { top: 0, right: 0, bottom: 0, left: 0 }; UI.props = { int: 0, bufferInt: 0, $fn: callback, timerInt: function () { return !1 }, mouseX: 100, mouseY: 100, exitDirTest: { oT: !1, oR: !1, oB: !1, oL: !1 }, idleTimes: { oT: iTxd.top, oR: iTxd.right, oB: iTxd.bottom, oL: iTxd.left } }, window.addEventListener("mousemove", UI._handleMouseMoveEvent, !0), document.documentElement.addEventListener("mouseleave", UI._setInt) }, _handleMouseMoveEvent: function (e) { return UI._setCoordinateProps(e) }, _setCoordinateProps: function (e) { UI.props.mouseX = e.clientX, UI.props.mouseY = e.clientY }, _setInt: function () { document.documentElement.removeEventListener("mouseleave", UI._setInt), document.documentElement.addEventListener("mouseenter", UI._resetIdleTimer), UI.timerInt = setInterval(UI._trackExit, UI.props.bufferInt) }, _trackExit: function () { for (var i in UI.props.exitDirTest = { oT: UI.props.mouseY < 10, oR: UI.props.mouseX > window.innerWidth - 30, oB: UI.props.mouseY > window.innerHeight - 30, oL: UI.props.mouseX < 10 }, UI.props.exitDirTest) UI.props.exitDirTest[i] && UI._watchIdleTimer(i) }, _watchIdleTimer: function (exitDirection) { exitDirection = UI.props.idleTimes[exitDirection]; if (UI.props.int >= exitDirection) return UI._triggerCallback(); UI.props.int++ }, _triggerCallback: function () { return document.documentElement.removeEventListener("mouseleave", UI._setInt), document.documentElement.removeEventListener("mouseenter", UI._killIdleTimer), document.documentElement.removeEventListener("mouseenter", UI._resetIdleTimer), UI._killIdleTimer(), UI.props.$fn() }, _resetIdleTimer: function () { UI.props.int = 0, clearInterval(UI.timerInt), document.documentElement.addEventListener("mouseleave", UI._setInt) }, _killIdleTimer: function () { UI.props.int = 0, document.documentElement.removeEventListener("mouseenter", UI._killIdleTimer), window.removeEventListener("mousemove", UI._handleMouseMoveEvent, !0), clearInterval(UI.timerInt) } }; return UI }(), objDFD.ui.resolve();
//# sourceMappingURL=AE.ui.min.js.map
